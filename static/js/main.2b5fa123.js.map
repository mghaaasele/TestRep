{"version":3,"file":"static/js/main.2b5fa123.js","mappings":";wDASiBA,EAAEC,EAAQ,KAASC,EAAEC,OAAOC,IAAI,iBAAiBC,EAAEF,OAAOC,IAAI,kBAAkBE,EAAEC,OAAOC,UAAUC,eAAeC,EAAEV,EAAEW,mDAAmDC,kBAAkBC,EAAE,CAACC,KAAI,EAAGC,KAAI,EAAGC,QAAO,EAAGC,UAAS,GAChP,SAASC,EAAEC,EAAEC,EAAEC,GAAG,IAAIC,EAAEC,EAAE,CAAC,EAAEC,EAAE,KAAKC,EAAE,KAAiF,IAAIH,UAAhF,IAASD,IAAIG,EAAE,GAAGH,QAAG,IAASD,EAAEN,MAAMU,EAAE,GAAGJ,EAAEN,UAAK,IAASM,EAAEL,MAAMU,EAAEL,EAAEL,KAAcK,EAAEd,EAAEoB,KAAKN,EAAEE,KAAKT,EAAEJ,eAAea,KAAKC,EAAED,GAAGF,EAAEE,IAAI,GAAGH,GAAGA,EAAEQ,aAAa,IAAIL,KAAKF,EAAED,EAAEQ,kBAAe,IAASJ,EAAED,KAAKC,EAAED,GAAGF,EAAEE,IAAI,MAAM,CAACM,SAAS1B,EAAE2B,KAAKV,EAAEL,IAAIU,EAAET,IAAIU,EAAEK,MAAMP,EAAEQ,OAAOrB,EAAEsB,QAAQ,kCCD9S,IAAI3B,EAAEF,OAAOC,IAAI,iBAAiBM,EAAEP,OAAOC,IAAI,gBAAgBS,EAAEV,OAAOC,IAAI,kBAAkBc,EAAEf,OAAOC,IAAI,qBAAqB6B,EAAE9B,OAAOC,IAAI,kBAAkB8B,EAAE/B,OAAOC,IAAI,kBAAkB+B,EAAEhC,OAAOC,IAAI,iBAAiBgC,EAAEjC,OAAOC,IAAI,qBAAqBiC,EAAElC,OAAOC,IAAI,kBAAkBkC,EAAEnC,OAAOC,IAAI,cAAcmC,EAAEpC,OAAOC,IAAI,cAAcoC,EAAErC,OAAOsC,SACzW,IAAIC,EAAE,CAACC,UAAU,WAAW,OAAM,CAAE,EAAEC,mBAAmB,WAAW,EAAEC,oBAAoB,WAAW,EAAEC,gBAAgB,WAAW,GAAGC,EAAExC,OAAOyC,OAAOC,EAAE,CAAC,EAAE,SAASC,EAAE9B,EAAEE,EAAEE,GAAG2B,KAAKrB,MAAMV,EAAE+B,KAAKC,QAAQ9B,EAAE6B,KAAKE,KAAKJ,EAAEE,KAAKG,QAAQ9B,GAAGkB,CAAC,CACwI,SAASa,IAAI,CAAyB,SAASC,EAAEpC,EAAEE,EAAEE,GAAG2B,KAAKrB,MAAMV,EAAE+B,KAAKC,QAAQ9B,EAAE6B,KAAKE,KAAKJ,EAAEE,KAAKG,QAAQ9B,GAAGkB,CAAC,CADxPQ,EAAE1C,UAAUiD,iBAAiB,CAAC,EACpQP,EAAE1C,UAAUkD,SAAS,SAAStC,EAAEE,GAAG,GAAG,kBAAkBF,GAAG,oBAAoBA,GAAG,MAAMA,EAAE,MAAMuC,MAAM,yHAAyHR,KAAKG,QAAQR,gBAAgBK,KAAK/B,EAAEE,EAAE,WAAW,EAAE4B,EAAE1C,UAAUoD,YAAY,SAASxC,GAAG+B,KAAKG,QAAQV,mBAAmBO,KAAK/B,EAAE,cAAc,EAAgBmC,EAAE/C,UAAU0C,EAAE1C,UAAsF,IAAIqD,EAAEL,EAAEhD,UAAU,IAAI+C,EACrfM,EAAEC,YAAYN,EAAET,EAAEc,EAAEX,EAAE1C,WAAWqD,EAAEE,sBAAqB,EAAG,IAAIC,EAAEC,MAAMC,QAAQC,EAAE5D,OAAOC,UAAUC,eAAe2D,EAAE,CAACpC,QAAQ,MAAMqC,EAAE,CAACvD,KAAI,EAAGC,KAAI,EAAGC,QAAO,EAAGC,UAAS,GACtK,SAASqD,EAAElD,EAAEE,EAAEE,GAAG,IAAID,EAAEJ,EAAE,CAAC,EAAEjB,EAAE,KAAKuB,EAAE,KAAK,GAAG,MAAMH,EAAE,IAAIC,UAAK,IAASD,EAAEP,MAAMU,EAAEH,EAAEP,UAAK,IAASO,EAAER,MAAMZ,EAAE,GAAGoB,EAAER,KAAKQ,EAAE6C,EAAEzC,KAAKJ,EAAEC,KAAK8C,EAAE5D,eAAec,KAAKJ,EAAEI,GAAGD,EAAEC,IAAI,IAAIF,EAAEkD,UAAUC,OAAO,EAAE,GAAG,IAAInD,EAAEF,EAAEsD,SAASjD,OAAO,GAAG,EAAEH,EAAE,CAAC,IAAI,IAAIrB,EAAEiE,MAAM5C,GAAGf,EAAE,EAAEA,EAAEe,EAAEf,IAAIN,EAAEM,GAAGiE,UAAUjE,EAAE,GAAGa,EAAEsD,SAASzE,CAAC,CAAC,GAAGoB,GAAGA,EAAEO,aAAa,IAAIJ,KAAKF,EAAED,EAAEO,kBAAe,IAASR,EAAEI,KAAKJ,EAAEI,GAAGF,EAAEE,IAAI,MAAM,CAACK,SAASvB,EAAEwB,KAAKT,EAAEN,IAAIZ,EAAEa,IAAIU,EAAEK,MAAMX,EAAEY,OAAOqC,EAAEpC,QAAQ,CAChV,SAAS0C,EAAEtD,GAAG,MAAM,kBAAkBA,GAAG,OAAOA,GAAGA,EAAEQ,WAAWvB,CAAC,CAAoG,IAAIsE,EAAE,OAAO,SAASC,EAAExD,EAAEE,GAAG,MAAM,kBAAkBF,GAAG,OAAOA,GAAG,MAAMA,EAAEN,IAA7K,SAAgBM,GAAG,IAAIE,EAAE,CAAC,IAAI,KAAK,IAAI,MAAM,MAAM,IAAIF,EAAEyD,QAAQ,SAAQ,SAASzD,GAAG,OAAOE,EAAEF,EAAE,GAAE,CAA+E0D,CAAO,GAAG1D,EAAEN,KAAKQ,EAAEyD,SAAS,GAAG,CAC/W,SAASC,EAAE5D,EAAEE,EAAEE,EAAED,EAAEJ,GAAG,IAAIjB,SAASkB,EAAK,cAAclB,GAAG,YAAYA,IAAEkB,EAAE,MAAK,IAAIK,GAAE,EAAG,GAAG,OAAOL,EAAEK,GAAE,OAAQ,OAAOvB,GAAG,IAAK,SAAS,IAAK,SAASuB,GAAE,EAAG,MAAM,IAAK,SAAS,OAAOL,EAAEQ,UAAU,KAAKvB,EAAE,KAAKK,EAAEe,GAAE,GAAI,GAAGA,EAAE,OAAWN,EAAEA,EAANM,EAAEL,GAASA,EAAE,KAAKG,EAAE,IAAIqD,EAAEnD,EAAE,GAAGF,EAAEyC,EAAE7C,IAAIK,EAAE,GAAG,MAAMJ,IAAII,EAAEJ,EAAEyD,QAAQF,EAAE,OAAO,KAAKK,EAAE7D,EAAEG,EAAEE,EAAE,IAAG,SAASJ,GAAG,OAAOA,CAAC,KAAI,MAAMD,IAAIuD,EAAEvD,KAAKA,EADnW,SAAWC,EAAEE,GAAG,MAAM,CAACM,SAASvB,EAAEwB,KAAKT,EAAES,KAAKf,IAAIQ,EAAEP,IAAIK,EAAEL,IAAIe,MAAMV,EAAEU,MAAMC,OAAOX,EAAEW,OAAO,CACyQkD,CAAE9D,EAAEK,IAAIL,EAAEL,KAAKW,GAAGA,EAAEX,MAAMK,EAAEL,IAAI,IAAI,GAAGK,EAAEL,KAAK+D,QAAQF,EAAE,OAAO,KAAKvD,IAAIE,EAAE4D,KAAK/D,IAAI,EAAyB,GAAvBM,EAAE,EAAEF,EAAE,KAAKA,EAAE,IAAIA,EAAE,IAAOyC,EAAE5C,GAAG,IAAI,IAAIC,EAAE,EAAEA,EAAED,EAAEoD,OAAOnD,IAAI,CAC/e,IAAIrB,EAAEuB,EAAEqD,EADwe1E,EACrfkB,EAAEC,GAAeA,GAAGI,GAAGuD,EAAE9E,EAAEoB,EAAEE,EAAExB,EAAEmB,EAAE,MAAM,GAAGnB,EAPsU,SAAWoB,GAAG,OAAG,OAAOA,GAAG,kBAAkBA,EAAS,KAAsC,oBAAjCA,EAAEoB,GAAGpB,EAAEoB,IAAIpB,EAAE,eAA0CA,EAAE,IAAI,CAO5b+D,CAAE/D,GAAG,oBAAoBpB,EAAE,IAAIoB,EAAEpB,EAAE0B,KAAKN,GAAGC,EAAE,IAAInB,EAAEkB,EAAEgE,QAAQC,MAA6B5D,GAAGuD,EAA1B9E,EAAEA,EAAEoF,MAA0BhE,EAAEE,EAAtBxB,EAAEuB,EAAEqD,EAAE1E,EAAEmB,KAAkBF,QAAQ,GAAG,WAAWjB,EAAE,MAAMoB,EAAEiE,OAAOnE,GAAGuC,MAAM,mDAAmD,oBAAoBrC,EAAE,qBAAqBf,OAAOiF,KAAKpE,GAAGqE,KAAK,MAAM,IAAInE,GAAG,6EAA6E,OAAOG,CAAC,CACzZ,SAASiE,EAAEtE,EAAEE,EAAEE,GAAG,GAAG,MAAMJ,EAAE,OAAOA,EAAE,IAAIG,EAAE,GAAGJ,EAAE,EAAmD,OAAjD6D,EAAE5D,EAAEG,EAAE,GAAG,IAAG,SAASH,GAAG,OAAOE,EAAEI,KAAKF,EAAEJ,EAAED,IAAI,IAAUI,CAAC,CAAC,SAASoE,EAAEvE,GAAG,IAAI,IAAIA,EAAEwE,QAAQ,CAAC,IAAItE,EAAEF,EAAEyE,SAAQvE,EAAEA,KAAMwE,MAAK,SAASxE,GAAM,IAAIF,EAAEwE,UAAU,IAAIxE,EAAEwE,UAAQxE,EAAEwE,QAAQ,EAAExE,EAAEyE,QAAQvE,EAAC,IAAE,SAASA,GAAM,IAAIF,EAAEwE,UAAU,IAAIxE,EAAEwE,UAAQxE,EAAEwE,QAAQ,EAAExE,EAAEyE,QAAQvE,EAAC,KAAI,IAAIF,EAAEwE,UAAUxE,EAAEwE,QAAQ,EAAExE,EAAEyE,QAAQvE,EAAE,CAAC,GAAG,IAAIF,EAAEwE,QAAQ,OAAOxE,EAAEyE,QAAQE,QAAQ,MAAM3E,EAAEyE,OAAQ,CAC5Z,IAAIG,EAAE,CAAChE,QAAQ,MAAMiE,EAAE,CAACC,WAAW,MAAMC,EAAE,CAACC,uBAAuBJ,EAAEK,wBAAwBJ,EAAErF,kBAAkBwD,GAAGkC,EAAQC,SAAS,CAACC,IAAId,EAAEe,QAAQ,SAASrF,EAAEE,EAAEE,GAAGkE,EAAEtE,GAAE,WAAWE,EAAEoF,MAAMvD,KAAKoB,UAAU,GAAE/C,EAAE,EAAEmF,MAAM,SAASvF,GAAG,IAAIE,EAAE,EAAuB,OAArBoE,EAAEtE,GAAE,WAAWE,GAAG,IAAUA,CAAC,EAAEsF,QAAQ,SAASxF,GAAG,OAAOsE,EAAEtE,GAAE,SAASA,GAAG,OAAOA,CAAC,KAAI,EAAE,EAAEyF,KAAK,SAASzF,GAAG,IAAIsD,EAAEtD,GAAG,MAAMuC,MAAM,yEAAyE,OAAOvC,CAAC,GAAGkF,EAAQQ,UAAU5D,EAAEoD,EAAQS,SAASlG,EACneyF,EAAQU,SAAS/E,EAAEqE,EAAQW,cAAczD,EAAE8C,EAAQY,WAAWhG,EAAEoF,EAAQa,SAAS9E,EAAEiE,EAAQ3F,mDAAmDwF,EAC9IG,EAAQc,aAAa,SAAShG,EAAEE,EAAEE,GAAG,GAAG,OAAOJ,QAAG,IAASA,EAAE,MAAMuC,MAAM,iFAAiFvC,EAAE,KAAK,IAAIG,EAAEwB,EAAE,CAAC,EAAE3B,EAAEU,OAAOX,EAAEC,EAAEN,IAAIZ,EAAEkB,EAAEL,IAAIU,EAAEL,EAAEW,OAAO,GAAG,MAAMT,EAAE,CAAoE,QAAnE,IAASA,EAAEP,MAAMb,EAAEoB,EAAEP,IAAIU,EAAE2C,EAAEpC,cAAS,IAASV,EAAER,MAAMK,EAAE,GAAGG,EAAER,KAAQM,EAAES,MAAMT,EAAES,KAAKF,aAAa,IAAIN,EAAED,EAAES,KAAKF,aAAa,IAAI3B,KAAKsB,EAAE6C,EAAEzC,KAAKJ,EAAEtB,KAAKqE,EAAE5D,eAAeT,KAAKuB,EAAEvB,QAAG,IAASsB,EAAEtB,SAAI,IAASqB,EAAEA,EAAErB,GAAGsB,EAAEtB,GAAG,CAAC,IAAIA,EAAEuE,UAAUC,OAAO,EAAE,GAAG,IAAIxE,EAAEuB,EAAEkD,SAASjD,OAAO,GAAG,EAAExB,EAAE,CAACqB,EAAE4C,MAAMjE,GACrf,IAAI,IAAIM,EAAE,EAAEA,EAAEN,EAAEM,IAAIe,EAAEf,GAAGiE,UAAUjE,EAAE,GAAGiB,EAAEkD,SAASpD,CAAC,CAAC,MAAM,CAACO,SAASvB,EAAEwB,KAAKT,EAAES,KAAKf,IAAIK,EAAEJ,IAAIb,EAAE4B,MAAMP,EAAEQ,OAAON,EAAE,EAAE6E,EAAQe,cAAc,SAASjG,GAAqK,OAAlKA,EAAE,CAACQ,SAASO,EAAEmF,cAAclG,EAAEmG,eAAenG,EAAEoG,aAAa,EAAEC,SAAS,KAAKC,SAAS,KAAKC,cAAc,KAAKC,YAAY,OAAQH,SAAS,CAAC7F,SAASM,EAAE2F,SAASzG,GAAUA,EAAEsG,SAAStG,CAAC,EAAEkF,EAAQwB,cAAcxD,EAAEgC,EAAQyB,cAAc,SAAS3G,GAAG,IAAIE,EAAEgD,EAAE0D,KAAK,KAAK5G,GAAY,OAATE,EAAEO,KAAKT,EAASE,CAAC,EAAEgF,EAAQ2B,UAAU,WAAW,MAAM,CAACjG,QAAQ,KAAK,EAC9dsE,EAAQ4B,WAAW,SAAS9G,GAAG,MAAM,CAACQ,SAASQ,EAAE+F,OAAO/G,EAAE,EAAEkF,EAAQ8B,eAAe1D,EAAE4B,EAAQ+B,KAAK,SAASjH,GAAG,MAAM,CAACQ,SAASW,EAAE+F,SAAS,CAAC1C,SAAS,EAAEC,QAAQzE,GAAGmH,MAAM5C,EAAE,EAAEW,EAAQkC,KAAK,SAASpH,EAAEE,GAAG,MAAM,CAACM,SAASU,EAAET,KAAKT,EAAEqH,aAAQ,IAASnH,EAAE,KAAKA,EAAE,EAAEgF,EAAQoC,gBAAgB,SAAStH,GAAG,IAAIE,EAAE2E,EAAEC,WAAWD,EAAEC,WAAW,CAAC,EAAE,IAAI9E,GAA0B,CAAtB,QAAQ6E,EAAEC,WAAW5E,CAAC,CAAC,EAAEgF,EAAQqC,aAAa,WAAW,MAAMhF,MAAM,2DAA4D,EAC1c2C,EAAQsC,YAAY,SAASxH,EAAEE,GAAG,OAAO0E,EAAEhE,QAAQ4G,YAAYxH,EAAEE,EAAE,EAAEgF,EAAQuC,WAAW,SAASzH,GAAG,OAAO4E,EAAEhE,QAAQ6G,WAAWzH,EAAE,EAAEkF,EAAQwC,cAAc,WAAW,EAAExC,EAAQyC,iBAAiB,SAAS3H,GAAG,OAAO4E,EAAEhE,QAAQ+G,iBAAiB3H,EAAE,EAAEkF,EAAQ0C,UAAU,SAAS5H,EAAEE,GAAG,OAAO0E,EAAEhE,QAAQgH,UAAU5H,EAAEE,EAAE,EAAEgF,EAAQ2C,MAAM,WAAW,OAAOjD,EAAEhE,QAAQiH,OAAO,EAAE3C,EAAQ4C,oBAAoB,SAAS9H,EAAEE,EAAEE,GAAG,OAAOwE,EAAEhE,QAAQkH,oBAAoB9H,EAAEE,EAAEE,EAAE,EAC7b8E,EAAQ6C,mBAAmB,SAAS/H,EAAEE,GAAG,OAAO0E,EAAEhE,QAAQmH,mBAAmB/H,EAAEE,EAAE,EAAEgF,EAAQ8C,gBAAgB,SAAShI,EAAEE,GAAG,OAAO0E,EAAEhE,QAAQoH,gBAAgBhI,EAAEE,EAAE,EAAEgF,EAAQ+C,QAAQ,SAASjI,EAAEE,GAAG,OAAO0E,EAAEhE,QAAQqH,QAAQjI,EAAEE,EAAE,EAAEgF,EAAQgD,WAAW,SAASlI,EAAEE,EAAEE,GAAG,OAAOwE,EAAEhE,QAAQsH,WAAWlI,EAAEE,EAAEE,EAAE,EAAE8E,EAAQiD,OAAO,SAASnI,GAAG,OAAO4E,EAAEhE,QAAQuH,OAAOnI,EAAE,EAAEkF,EAAQkD,SAAS,SAASpI,GAAG,OAAO4E,EAAEhE,QAAQwH,SAASpI,EAAE,EAAEkF,EAAQmD,qBAAqB,SAASrI,EAAEE,EAAEE,GAAG,OAAOwE,EAAEhE,QAAQyH,qBAAqBrI,EAAEE,EAAEE,EAAE,EAC/e8E,EAAQoD,cAAc,WAAW,OAAO1D,EAAEhE,QAAQ0H,eAAe,EAAEpD,EAAQqD,QAAQ,2CCtBjFC,EAAOtD,QAAU,EAAjBsD,uCCAAA,EAAAA,wBCHF,IAAIC,EAAyB,qBAATC,KAAuBA,KAAO3G,KAC9C4G,EAAY,WAChB,SAASxG,IACTJ,KAAK6G,OAAQ,EACb7G,KAAK8G,aAAeJ,EAAOI,YAC3B,CAEA,OADA1G,EAAE/C,UAAYqJ,EACP,IAAItG,CACX,CAPgB,IAQhB,SAAUuG,IAEQ,SAAUxD,GAE1B,IAAI4D,EAAU,CACZC,aAAc,oBAAqBL,EACnCM,SAAU,WAAYN,GAAQ,aAAc3J,OAC5CkK,KACE,eAAgBP,GAChB,SAAUA,GACT,WACC,IAEE,OADA,IAAIQ,MACG,CAGT,CAFE,MAAO9I,GACP,OAAO,CACT,CACF,CAPC,GAQH+I,SAAU,aAAcT,EACxBU,YAAa,gBAAiBV,GAOhC,GAAII,EAAQM,YACV,IAAIC,EAAc,CAChB,qBACA,sBACA,6BACA,sBACA,uBACA,sBACA,uBACA,wBACA,yBAGEC,EACFC,YAAYC,QACZ,SAASC,GACP,OAAOA,GAAOJ,EAAYK,QAAQvK,OAAOC,UAAUuE,SAASrD,KAAKmJ,KAAS,CAC5E,EAGJ,SAASE,EAAcC,GAIrB,GAHoB,kBAATA,IACTA,EAAOzF,OAAOyF,IAEZ,4BAA4BC,KAAKD,GACnC,MAAM,IAAIE,UAAU,0CAEtB,OAAOF,EAAKG,aACd,CAEA,SAASC,EAAe9F,GAItB,MAHqB,kBAAVA,IACTA,EAAQC,OAAOD,IAEVA,CACT,CAGA,SAAS+F,EAAYC,GACnB,IAAI7I,EAAW,CACb2C,KAAM,WACJ,IAAIE,EAAQgG,EAAMC,QAClB,MAAO,CAAClG,UAAgBmG,IAAVlG,EAAqBA,MAAOA,EAC5C,GASF,OANI4E,EAAQE,WACV3H,EAAStC,OAAOsC,UAAY,WAC1B,OAAOA,CACT,GAGKA,CACT,CAEA,SAASgJ,EAAQC,GACfvI,KAAKqD,IAAM,CAAC,EAERkF,aAAmBD,EACrBC,EAAQjF,SAAQ,SAASnB,EAAO0F,GAC9B7H,KAAKwI,OAAOX,EAAM1F,EACpB,GAAGnC,MACMc,MAAMC,QAAQwH,GACvBA,EAAQjF,SAAQ,SAASmF,GACvBzI,KAAKwI,OAAOC,EAAO,GAAIA,EAAO,GAChC,GAAGzI,MACMuI,GACTnL,OAAOsL,oBAAoBH,GAASjF,SAAQ,SAASuE,GACnD7H,KAAKwI,OAAOX,EAAMU,EAAQV,GAC5B,GAAG7H,KAEP,CA8DA,SAAS2I,EAASC,GAChB,GAAIA,EAAKC,SACP,OAAOC,QAAQC,OAAO,IAAIhB,UAAU,iBAEtCa,EAAKC,UAAW,CAClB,CAEA,SAASG,EAAgBC,GACvB,OAAO,IAAIH,SAAQ,SAASI,EAASH,GACnCE,EAAOE,OAAS,WACdD,EAAQD,EAAOG,OACjB,EACAH,EAAOI,QAAU,WACfN,EAAOE,EAAOK,MAChB,CACF,GACF,CAEA,SAASC,EAAsBrC,GAC7B,IAAI+B,EAAS,IAAIO,WACbC,EAAUT,EAAgBC,GAE9B,OADAA,EAAOS,kBAAkBxC,GAClBuC,CACT,CAmBA,SAASE,EAAYC,GACnB,GAAIA,EAAIC,MACN,OAAOD,EAAIC,MAAM,GAEjB,IAAIC,EAAO,IAAIC,WAAWH,EAAII,YAE9B,OADAF,EAAKG,IAAI,IAAIF,WAAWH,IACjBE,EAAKI,MAEhB,CAEA,SAASC,IA0FP,OAzFAnK,KAAK6I,UAAW,EAEhB7I,KAAKoK,UAAY,SAASxB,GAhM5B,IAAoBlB,EAiMhB1H,KAAKqK,UAAYzB,EACZA,EAEsB,kBAATA,EAChB5I,KAAKsK,UAAY1B,EACR7B,EAAQG,MAAQC,KAAK9J,UAAUkN,cAAc3B,GACtD5I,KAAKwK,UAAY5B,EACR7B,EAAQK,UAAYqD,SAASpN,UAAUkN,cAAc3B,GAC9D5I,KAAK0K,cAAgB9B,EACZ7B,EAAQC,cAAgB2D,gBAAgBtN,UAAUkN,cAAc3B,GACzE5I,KAAKsK,UAAY1B,EAAKhH,WACbmF,EAAQM,aAAeN,EAAQG,QA5M1BQ,EA4M6CkB,IA3MjDgC,SAASvN,UAAUkN,cAAc7C,KA4M3C1H,KAAK6K,iBAAmBlB,EAAYf,EAAKsB,QAEzClK,KAAKqK,UAAY,IAAIlD,KAAK,CAACnH,KAAK6K,oBACvB9D,EAAQM,cAAgBG,YAAYnK,UAAUkN,cAAc3B,IAASrB,EAAkBqB,IAChG5I,KAAK6K,iBAAmBlB,EAAYf,GAEpC5I,KAAKsK,UAAY1B,EAAOxL,OAAOC,UAAUuE,SAASrD,KAAKqK,GAhBvD5I,KAAKsK,UAAY,GAmBdtK,KAAKuI,QAAQuC,IAAI,kBACA,kBAATlC,EACT5I,KAAKuI,QAAQ0B,IAAI,eAAgB,4BACxBjK,KAAKwK,WAAaxK,KAAKwK,UAAU9L,KAC1CsB,KAAKuI,QAAQ0B,IAAI,eAAgBjK,KAAKwK,UAAU9L,MACvCqI,EAAQC,cAAgB2D,gBAAgBtN,UAAUkN,cAAc3B,IACzE5I,KAAKuI,QAAQ0B,IAAI,eAAgB,mDAGvC,EAEIlD,EAAQG,OACVlH,KAAKkH,KAAO,WACV,IAAI6D,EAAWpC,EAAS3I,MACxB,GAAI+K,EACF,OAAOA,EAGT,GAAI/K,KAAKwK,UACP,OAAO1B,QAAQI,QAAQlJ,KAAKwK,WACvB,GAAIxK,KAAK6K,iBACd,OAAO/B,QAAQI,QAAQ,IAAI/B,KAAK,CAACnH,KAAK6K,oBACjC,GAAI7K,KAAK0K,cACd,MAAM,IAAIlK,MAAM,wCAEhB,OAAOsI,QAAQI,QAAQ,IAAI/B,KAAK,CAACnH,KAAKsK,YAE1C,EAEAtK,KAAKqH,YAAc,WACjB,OAAIrH,KAAK6K,iBACAlC,EAAS3I,OAAS8I,QAAQI,QAAQlJ,KAAK6K,kBAEvC7K,KAAKkH,OAAOvE,KAAK4G,EAE5B,GAGFvJ,KAAKgL,KAAO,WACV,IAAID,EAAWpC,EAAS3I,MACxB,GAAI+K,EACF,OAAOA,EAGT,GAAI/K,KAAKwK,UACP,OAjGN,SAAwBtD,GACtB,IAAI+B,EAAS,IAAIO,WACbC,EAAUT,EAAgBC,GAE9B,OADAA,EAAOgC,WAAW/D,GACXuC,CACT,CA4FayB,CAAelL,KAAKwK,WACtB,GAAIxK,KAAK6K,iBACd,OAAO/B,QAAQI,QA5FrB,SAA+BU,GAI7B,IAHA,IAAIE,EAAO,IAAIC,WAAWH,GACtBuB,EAAQ,IAAIrK,MAAMgJ,EAAKzI,QAElB+J,EAAI,EAAGA,EAAItB,EAAKzI,OAAQ+J,IAC/BD,EAAMC,GAAKhJ,OAAOiJ,aAAavB,EAAKsB,IAEtC,OAAOD,EAAM7I,KAAK,GACpB,CAoF6BgJ,CAAsBtL,KAAK6K,mBAC7C,GAAI7K,KAAK0K,cACd,MAAM,IAAIlK,MAAM,wCAEhB,OAAOsI,QAAQI,QAAQlJ,KAAKsK,UAEhC,EAEIvD,EAAQK,WACVpH,KAAKoH,SAAW,WACd,OAAOpH,KAAKgL,OAAOrI,KAAK4I,EAC1B,GAGFvL,KAAKwL,KAAO,WACV,OAAOxL,KAAKgL,OAAOrI,KAAK8I,KAAKC,MAC/B,EAEO1L,IACT,CA3MAsI,EAAQjL,UAAUmL,OAAS,SAASX,EAAM1F,GACxC0F,EAAOD,EAAcC,GACrB1F,EAAQ8F,EAAe9F,GACvB,IAAIwJ,EAAW3L,KAAKqD,IAAIwE,GACxB7H,KAAKqD,IAAIwE,GAAQ8D,EAAWA,EAAW,KAAOxJ,EAAQA,CACxD,EAEAmG,EAAQjL,UAAkB,OAAI,SAASwK,UAC9B7H,KAAKqD,IAAIuE,EAAcC,GAChC,EAEAS,EAAQjL,UAAUyN,IAAM,SAASjD,GAE/B,OADAA,EAAOD,EAAcC,GACd7H,KAAK4L,IAAI/D,GAAQ7H,KAAKqD,IAAIwE,GAAQ,IAC3C,EAEAS,EAAQjL,UAAUuO,IAAM,SAAS/D,GAC/B,OAAO7H,KAAKqD,IAAI/F,eAAesK,EAAcC,GAC/C,EAEAS,EAAQjL,UAAU4M,IAAM,SAASpC,EAAM1F,GACrCnC,KAAKqD,IAAIuE,EAAcC,IAASI,EAAe9F,EACjD,EAEAmG,EAAQjL,UAAUiG,QAAU,SAASuI,EAAUC,GAC7C,IAAK,IAAIjE,KAAQ7H,KAAKqD,IAChBrD,KAAKqD,IAAI/F,eAAeuK,IAC1BgE,EAAStN,KAAKuN,EAAS9L,KAAKqD,IAAIwE,GAAOA,EAAM7H,KAGnD,EAEAsI,EAAQjL,UAAUgF,KAAO,WACvB,IAAI8F,EAAQ,GAIZ,OAHAnI,KAAKsD,SAAQ,SAASnB,EAAO0F,GAC3BM,EAAMpG,KAAK8F,EACb,IACOK,EAAYC,EACrB,EAEAG,EAAQjL,UAAU0O,OAAS,WACzB,IAAI5D,EAAQ,GAIZ,OAHAnI,KAAKsD,SAAQ,SAASnB,GACpBgG,EAAMpG,KAAKI,EACb,IACO+F,EAAYC,EACrB,EAEAG,EAAQjL,UAAU2O,QAAU,WAC1B,IAAI7D,EAAQ,GAIZ,OAHAnI,KAAKsD,SAAQ,SAASnB,EAAO0F,GAC3BM,EAAMpG,KAAK,CAAC8F,EAAM1F,GACpB,IACO+F,EAAYC,EACrB,EAEIpB,EAAQE,WACVqB,EAAQjL,UAAUL,OAAOsC,UAAYgJ,EAAQjL,UAAU2O,SAqJzD,IAAIC,EAAU,CAAC,SAAU,MAAO,OAAQ,UAAW,OAAQ,OAO3D,SAASC,EAAQC,EAAOC,GAEtB,IAAIxD,GADJwD,EAAUA,GAAW,CAAC,GACHxD,KAEnB,GAAIuD,aAAiBD,EAAS,CAC5B,GAAIC,EAAMtD,SACR,MAAM,IAAId,UAAU,gBAEtB/H,KAAKqM,IAAMF,EAAME,IACjBrM,KAAKsM,YAAcH,EAAMG,YACpBF,EAAQ7D,UACXvI,KAAKuI,QAAU,IAAID,EAAQ6D,EAAM5D,UAEnCvI,KAAKuM,OAASJ,EAAMI,OACpBvM,KAAKwM,KAAOL,EAAMK,KAClBxM,KAAKyM,OAASN,EAAMM,OACf7D,GAA2B,MAAnBuD,EAAM9B,YACjBzB,EAAOuD,EAAM9B,UACb8B,EAAMtD,UAAW,EAErB,MACE7I,KAAKqM,IAAMjK,OAAO+J,GAYpB,GATAnM,KAAKsM,YAAcF,EAAQE,aAAetM,KAAKsM,aAAe,eAC1DF,EAAQ7D,SAAYvI,KAAKuI,UAC3BvI,KAAKuI,QAAU,IAAID,EAAQ8D,EAAQ7D,UAErCvI,KAAKuM,OAjCP,SAAyBA,GACvB,IAAIG,EAAUH,EAAOI,cACrB,OAAOV,EAAQtE,QAAQ+E,IAAY,EAAIA,EAAUH,CACnD,CA8BgBK,CAAgBR,EAAQG,QAAUvM,KAAKuM,QAAU,OAC/DvM,KAAKwM,KAAOJ,EAAQI,MAAQxM,KAAKwM,MAAQ,KACzCxM,KAAKyM,OAASL,EAAQK,QAAUzM,KAAKyM,OACrCzM,KAAK6M,SAAW,MAEK,QAAhB7M,KAAKuM,QAAoC,SAAhBvM,KAAKuM,SAAsB3D,EACvD,MAAM,IAAIb,UAAU,6CAEtB/H,KAAKoK,UAAUxB,EACjB,CAMA,SAAS2C,EAAO3C,GACd,IAAIkE,EAAO,IAAIrC,SAYf,OAXA7B,EACGmE,OACAC,MAAM,KACN1J,SAAQ,SAAS2J,GAChB,GAAIA,EAAO,CACT,IAAID,EAAQC,EAAMD,MAAM,KACpBnF,EAAOmF,EAAM5E,QAAQ1G,QAAQ,MAAO,KACpCS,EAAQ6K,EAAM1K,KAAK,KAAKZ,QAAQ,MAAO,KAC3CoL,EAAKtE,OAAO0E,mBAAmBrF,GAAOqF,mBAAmB/K,GAC3D,CACF,IACK2K,CACT,CAEA,SAASK,EAAaC,GACpB,IAAI7E,EAAU,IAAID,EAYlB,OAT0B8E,EAAW1L,QAAQ,eAAgB,KACzCsL,MAAM,SAAS1J,SAAQ,SAAS+J,GAClD,IAAIC,EAAQD,EAAKL,MAAM,KACnBrP,EAAM2P,EAAMlF,QAAQ2E,OACxB,GAAIpP,EAAK,CACP,IAAIwE,EAAQmL,EAAMhL,KAAK,KAAKyK,OAC5BxE,EAAQC,OAAO7K,EAAKwE,EACtB,CACF,IACOoG,CACT,CAIA,SAASgF,EAASC,EAAUpB,GACrBA,IACHA,EAAU,CAAC,GAGbpM,KAAKtB,KAAO,UACZsB,KAAKyN,YAA4BpF,IAAnB+D,EAAQqB,OAAuB,IAAMrB,EAAQqB,OAC3DzN,KAAK0N,GAAK1N,KAAKyN,QAAU,KAAOzN,KAAKyN,OAAS,IAC9CzN,KAAK2N,WAAa,eAAgBvB,EAAUA,EAAQuB,WAAa,KACjE3N,KAAKuI,QAAU,IAAID,EAAQ8D,EAAQ7D,SACnCvI,KAAKqM,IAAMD,EAAQC,KAAO,GAC1BrM,KAAKoK,UAAUoD,EACjB,CAlDAtB,EAAQ7O,UAAUuQ,MAAQ,WACxB,OAAO,IAAI1B,EAAQlM,KAAM,CAAC4I,KAAM5I,KAAKqK,WACvC,EAkCAF,EAAK5L,KAAK2N,EAAQ7O,WAgBlB8M,EAAK5L,KAAKgP,EAASlQ,WAEnBkQ,EAASlQ,UAAUuQ,MAAQ,WACzB,OAAO,IAAIL,EAASvN,KAAKqK,UAAW,CAClCoD,OAAQzN,KAAKyN,OACbE,WAAY3N,KAAK2N,WACjBpF,QAAS,IAAID,EAAQtI,KAAKuI,SAC1B8D,IAAKrM,KAAKqM,KAEd,EAEAkB,EAASjE,MAAQ,WACf,IAAIuE,EAAW,IAAIN,EAAS,KAAM,CAACE,OAAQ,EAAGE,WAAY,KAE1D,OADAE,EAASnP,KAAO,QACTmP,CACT,EAEA,IAAIC,EAAmB,CAAC,IAAK,IAAK,IAAK,IAAK,KAE5CP,EAASQ,SAAW,SAAS1B,EAAKoB,GAChC,IAA0C,IAAtCK,EAAiBnG,QAAQ8F,GAC3B,MAAM,IAAIO,WAAW,uBAGvB,OAAO,IAAIT,EAAS,KAAM,CAACE,OAAQA,EAAQlF,QAAS,CAAC0F,SAAU5B,IACjE,EAEAlJ,EAAQ2D,aAAeH,EAAKG,aAC5B,IACE,IAAI3D,EAAQ2D,YAUd,CATE,MAAOoH,GACP/K,EAAQ2D,aAAe,SAASqH,EAAStG,GACvC7H,KAAKmO,QAAUA,EACfnO,KAAK6H,KAAOA,EACZ,IAAIyB,EAAQ9I,MAAM2N,GAClBnO,KAAKoO,MAAQ9E,EAAM8E,KACrB,EACAjL,EAAQ2D,aAAazJ,UAAYD,OAAOiR,OAAO7N,MAAMnD,WACrD8F,EAAQ2D,aAAazJ,UAAUsD,YAAcwC,EAAQ2D,YACvD,CAEA,SAASD,EAAMsF,EAAOmC,GACpB,OAAO,IAAIxF,SAAQ,SAASI,EAASH,GACnC,IAAIwF,EAAU,IAAIrC,EAAQC,EAAOmC,GAEjC,GAAIC,EAAQ9B,QAAU8B,EAAQ9B,OAAO+B,QACnC,OAAOzF,EAAO,IAAI5F,EAAQ2D,aAAa,UAAW,eAGpD,IAAI2H,EAAM,IAAIC,eAEd,SAASC,IACPF,EAAIG,OACN,CAEAH,EAAItF,OAAS,WACX,IAAIiD,EAAU,CACZqB,OAAQgB,EAAIhB,OACZE,WAAYc,EAAId,WAChBpF,QAAS4E,EAAasB,EAAII,yBAA2B,KAEvDzC,EAAQC,IAAM,gBAAiBoC,EAAMA,EAAIK,YAAc1C,EAAQ7D,QAAQuC,IAAI,iBAC3E,IAAIlC,EAAO,aAAc6F,EAAMA,EAAIZ,SAAWY,EAAIM,aAClD7F,EAAQ,IAAIqE,EAAS3E,EAAMwD,GAC7B,EAEAqC,EAAIpF,QAAU,WACZN,EAAO,IAAIhB,UAAU,0BACvB,EAEA0G,EAAIO,UAAY,WACdjG,EAAO,IAAIhB,UAAU,0BACvB,EAEA0G,EAAIQ,QAAU,WACZlG,EAAO,IAAI5F,EAAQ2D,aAAa,UAAW,cAC7C,EAEA2H,EAAIS,KAAKX,EAAQhC,OAAQgC,EAAQlC,KAAK,GAEV,YAAxBkC,EAAQjC,YACVmC,EAAIU,iBAAkB,EACW,SAAxBZ,EAAQjC,cACjBmC,EAAIU,iBAAkB,GAGpB,iBAAkBV,GAAO1H,EAAQG,OACnCuH,EAAIW,aAAe,QAGrBb,EAAQhG,QAAQjF,SAAQ,SAASnB,EAAO0F,GACtC4G,EAAIY,iBAAiBxH,EAAM1F,EAC7B,IAEIoM,EAAQ9B,SACV8B,EAAQ9B,OAAO6C,iBAAiB,QAASX,GAEzCF,EAAIc,mBAAqB,WAEA,IAAnBd,EAAIe,YACNjB,EAAQ9B,OAAOgD,oBAAoB,QAASd,EAEhD,GAGFF,EAAIiB,KAAkC,qBAAtBnB,EAAQlE,UAA4B,KAAOkE,EAAQlE,UACrE,GACF,CAEAxD,EAAM8I,UAAW,EAEZhJ,EAAKE,QACRF,EAAKE,MAAQA,EACbF,EAAK2B,QAAUA,EACf3B,EAAKuF,QAAUA,EACfvF,EAAK4G,SAAWA,GAGlBpK,EAAQmF,QAAUA,EAClBnF,EAAQ+I,QAAUA,EAClB/I,EAAQoK,SAAWA,EACnBpK,EAAQ0D,MAAQA,EAEhBzJ,OAAOwS,eAAezM,EAAS,aAAc,CAAEhB,OAAO,GAIxD,CAhhBkB,CAghBf,CAAC,EACH,CAnhBD,CAmhBGyE,GACHA,EAASC,MAAMgJ,UAAW,SAEnBjJ,EAASC,MAAM8I,SAGtB,IAAIG,EAAMlJ,GACVzD,EAAU2M,EAAIjJ,OACd1D,QAAkB2M,EAAIjJ,MACtB1D,EAAQ0D,MAAQiJ,EAAIjJ,MACpB1D,EAAQmF,QAAUwH,EAAIxH,QACtBnF,EAAQ+I,QAAU4D,EAAI5D,QACtB/I,EAAQoK,SAAWuC,EAAIvC,SACvB9G,EAAOtD,QAAUA,mBCziBjB,IAAI4M,EAAgB,WACnB,GAAoB,kBAATpJ,MAAqBA,KAAM,OAAOA,KAC7C,GAAsB,kBAAXqJ,QAAuBA,OAAQ,OAAOA,OACjD,MAAM,IAAIxP,MAAM,kCACjB,EAEAiG,EAAOtD,QAAW,WACjB,GAAInD,KAAM,OAAOA,KAKjB,GAA0B,kBAAfiQ,YAA2BA,WAAY,OAAOA,WAKzD,IACC7S,OAAOwS,eAAexS,OAAOC,UAAW,aAAc,CACrDyN,IAAK,WAAc,OAAO9K,IAAM,EAChCkQ,cAAc,GAMhB,CAJE,MAAO5G,GAGR,OAAOyG,GACR,CACA,IAEC,OAAKI,YAAmBJ,GAIzB,CAFE,eACM3S,OAAOC,UAAU8S,UACzB,CACD,CA5BkB,wBCNlB,IAAIC,EACJ,GAA0B,kBAAfH,WACVG,EAAcH,gBAEd,IACCG,EAActT,EAAQ,IAKvB,CAJE,MAAOwM,GACT,CAAE,QAED,GADK8G,GAAiC,qBAAXJ,SAA0BI,EAAcJ,SAC9DI,EAAe,MAAM,IAAI5P,MAAM,kCACrC,CAGD,IAAI6P,EAAkBD,EAAYE,WAAaF,EAAYG,aACvDC,EAAoB1T,EAAQ,KAMhC,SAAS2T,EAAaC,EAAKC,GAiB1B,OAdIA,EACe,IAAIN,EAAgBK,EAAKC,GAGzB,IAAIN,EAAgBK,EAWxC,CACIL,GACH,CAAC,aAAc,OAAQ,UAAW,UAAU/M,SAAQ,SAASsN,GAC5DxT,OAAOwS,eAAea,EAAcG,EAAM,CACzC9F,IAAK,WAAa,OAAOuF,EAAgBO,EAAO,GAElD,IAMDnK,EAAOtD,QAAU,CACb,aAAiBkN,EAAkBI,EAAe,KAClD,QAAiBD,wBCpDrB/J,EAAOtD,QAAU,EAAjBsD,KAAAA,qECCIoK,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB1I,IAAjB2I,EACH,OAAOA,EAAa7N,QAGrB,IAAIsD,EAASoK,EAAyBE,GAAY,CAGjD5N,QAAS,CAAC,GAOX,OAHA8N,EAAoBF,GAAUxS,KAAKkI,EAAOtD,QAASsD,EAAQA,EAAOtD,QAAS2N,GAGpErK,EAAOtD,OACf,CCrBA2N,EAAoBvT,EAAI,SAASkJ,GAChC,IAAIyK,EAASzK,GAAUA,EAAO0K,WAC7B,WAAa,OAAO1K,EAAgB,OAAG,EACvC,WAAa,OAAOA,CAAQ,EAE7B,OADAqK,EAAoB1S,EAAE8S,EAAQ,CAAEjT,EAAGiT,IAC5BA,CACR,aCPA,IACIE,EADAC,EAAWjU,OAAOkU,eAAiB,SAAS5J,GAAO,OAAOtK,OAAOkU,eAAe5J,EAAM,EAAI,SAASA,GAAO,OAAOA,EAAI6J,SAAW,EAQpIT,EAAoB/R,EAAI,SAASoD,EAAOqK,GAEvC,GADU,EAAPA,IAAUrK,EAAQnC,KAAKmC,IAChB,EAAPqK,EAAU,OAAOrK,EACpB,GAAoB,kBAAVA,GAAsBA,EAAO,CACtC,GAAW,EAAPqK,GAAarK,EAAMgP,WAAY,OAAOhP,EAC1C,GAAW,GAAPqK,GAAoC,oBAAfrK,EAAMQ,KAAqB,OAAOR,CAC5D,CACA,IAAIqP,EAAKpU,OAAOiR,OAAO,MACvByC,EAAoBhS,EAAE0S,GACtB,IAAIC,EAAM,CAAC,EACXL,EAAiBA,GAAkB,CAAC,KAAMC,EAAS,CAAC,GAAIA,EAAS,IAAKA,EAASA,IAC/E,IAAI,IAAIxS,EAAiB,EAAP2N,GAAYrK,EAAyB,iBAAXtD,KAAyBuS,EAAezJ,QAAQ9I,GAAUA,EAAUwS,EAASxS,GACxHzB,OAAOsL,oBAAoB7J,GAASyE,SAAQ,SAAS3F,GAAO8T,EAAI9T,GAAO,WAAa,OAAOwE,EAAMxE,EAAM,CAAG,IAI3G,OAFA8T,EAAa,QAAI,WAAa,OAAOtP,CAAO,EAC5C2O,EAAoB1S,EAAEoT,EAAIC,GACnBD,CACR,KCxBAV,EAAoB1S,EAAI,SAAS+E,EAASuO,GACzC,IAAI,IAAI/T,KAAO+T,EACXZ,EAAoBa,EAAED,EAAY/T,KAASmT,EAAoBa,EAAExO,EAASxF,IAC5EP,OAAOwS,eAAezM,EAASxF,EAAK,CAAEiU,YAAY,EAAM9G,IAAK4G,EAAW/T,IAG3E,ECPAmT,EAAoBa,EAAI,SAASjK,EAAKkJ,GAAQ,OAAOxT,OAAOC,UAAUC,eAAeiB,KAAKmJ,EAAKkJ,EAAO,ECCtGE,EAAoBhS,EAAI,SAASqE,GACX,qBAAXnG,QAA0BA,OAAO6U,aAC1CzU,OAAOwS,eAAezM,EAASnG,OAAO6U,YAAa,CAAE1P,MAAO,WAE7D/E,OAAOwS,eAAezM,EAAS,aAAc,CAAEhB,OAAO,GACvD,iCCNe,SAAS2P,EAAQpK,GAG9B,OAAOoK,EAAU,mBAAqB9U,QAAU,iBAAmBA,OAAOsC,SAAW,SAAUoI,GAC7F,cAAcA,CAChB,EAAI,SAAUA,GACZ,OAAOA,GAAO,mBAAqB1K,QAAU0K,EAAI/G,cAAgB3D,QAAU0K,IAAQ1K,OAAOK,UAAY,gBAAkBqK,CAC1H,EAAGoK,EAAQpK,EACb,CCPe,SAAS,IAEtB,EAAsB,WACpB,OAAOvE,CACT,EACA,IAAIA,EAAU,CAAC,EACb4O,EAAK3U,OAAOC,UACZ2U,EAASD,EAAGzU,eACZsS,EAAiBxS,OAAOwS,gBAAkB,SAAUlI,EAAK/J,EAAKsU,GAC5DvK,EAAI/J,GAAOsU,EAAK9P,KAClB,EACA+P,EAAU,mBAAqBlV,OAASA,OAAS,CAAC,EAClDmV,EAAiBD,EAAQ5S,UAAY,aACrC8S,EAAsBF,EAAQG,eAAiB,kBAC/CC,EAAoBJ,EAAQL,aAAe,gBAC7C,SAASU,EAAO7K,EAAK/J,EAAKwE,GACxB,OAAO/E,OAAOwS,eAAelI,EAAK/J,EAAK,CACrCwE,MAAOA,EACPyP,YAAY,EACZ1B,cAAc,EACdsC,UAAU,IACR9K,EAAI/J,EACV,CACA,IACE4U,EAAO,CAAC,EAAG,GAKb,CAJE,MAAOrE,GACPqE,EAAS,SAAgB7K,EAAK/J,EAAKwE,GACjC,OAAOuF,EAAI/J,GAAOwE,CACpB,CACF,CACA,SAASsQ,EAAKC,EAASC,EAAShM,EAAMiM,GACpC,IAAIC,EAAiBF,GAAWA,EAAQtV,qBAAqByV,EAAYH,EAAUG,EACjFC,EAAY3V,OAAOiR,OAAOwE,EAAexV,WACzC4C,EAAU,IAAI+S,EAAQJ,GAAe,IACvC,OAAOhD,EAAemD,EAAW,UAAW,CAC1C5Q,MAAO8Q,EAAiBP,EAAS/L,EAAM1G,KACrC8S,CACN,CACA,SAASG,EAASC,EAAIzL,EAAK0L,GACzB,IACE,MAAO,CACL1U,KAAM,SACN0U,IAAKD,EAAG5U,KAAKmJ,EAAK0L,GAOtB,CALE,MAAOlF,GACP,MAAO,CACLxP,KAAM,QACN0U,IAAKlF,EAET,CACF,CACA/K,EAAQsP,KAAOA,EACf,IAAIY,EAAmB,CAAC,EACxB,SAASP,IAAa,CACtB,SAASQ,IAAqB,CAC9B,SAASC,IAA8B,CACvC,IAAIC,EAAoB,CAAC,EACzBjB,EAAOiB,EAAmBrB,GAAgB,WACxC,OAAOnS,IACT,IACA,IAAIqR,EAAWjU,OAAOkU,eACpBmC,EAA0BpC,GAAYA,EAASA,EAAStF,EAAO,MACjE0H,GAA2BA,IAA4B1B,GAAMC,EAAOzT,KAAKkV,EAAyBtB,KAAoBqB,EAAoBC,GAC1I,IAAIC,EAAKH,EAA2BlW,UAAYyV,EAAUzV,UAAYD,OAAOiR,OAAOmF,GACpF,SAASG,EAAsBtW,GAC7B,CAAC,OAAQ,QAAS,UAAUiG,SAAQ,SAAUiJ,GAC5CgG,EAAOlV,EAAWkP,GAAQ,SAAU6G,GAClC,OAAOpT,KAAK4T,QAAQrH,EAAQ6G,EAC9B,GACF,GACF,CACA,SAASS,EAAcd,EAAWe,GAChC,SAASC,EAAOxH,EAAQ6G,EAAKlK,EAASH,GACpC,IAAIiL,EAASd,EAASH,EAAUxG,GAASwG,EAAWK,GACpD,GAAI,UAAYY,EAAOtV,KAAM,CAC3B,IAAI0K,EAAS4K,EAAOZ,IAClBjR,EAAQiH,EAAOjH,MACjB,OAAOA,GAAS,UAAY2P,EAAQ3P,IAAU6P,EAAOzT,KAAK4D,EAAO,WAAa2R,EAAY5K,QAAQ/G,EAAM8R,SAAStR,MAAK,SAAUR,GAC9H4R,EAAO,OAAQ5R,EAAO+G,EAASH,EACjC,IAAG,SAAUmF,GACX6F,EAAO,QAAS7F,EAAKhF,EAASH,EAChC,IAAK+K,EAAY5K,QAAQ/G,GAAOQ,MAAK,SAAUuR,GAC7C9K,EAAOjH,MAAQ+R,EAAWhL,EAAQE,EACpC,IAAG,SAAUE,GACX,OAAOyK,EAAO,QAASzK,EAAOJ,EAASH,EACzC,GACF,CACAA,EAAOiL,EAAOZ,IAChB,CACA,IAAIe,EACJvE,EAAe5P,KAAM,UAAW,CAC9BmC,MAAO,SAAeoK,EAAQ6G,GAC5B,SAASgB,IACP,OAAO,IAAIN,GAAY,SAAU5K,EAASH,GACxCgL,EAAOxH,EAAQ6G,EAAKlK,EAASH,EAC/B,GACF,CACA,OAAOoL,EAAkBA,EAAkBA,EAAgBxR,KAAKyR,EAA4BA,GAA8BA,GAC5H,GAEJ,CACA,SAASnB,EAAiBP,EAAS/L,EAAM1G,GACvC,IAAIoU,EAAQ,iBACZ,OAAO,SAAU9H,EAAQ6G,GACvB,GAAI,cAAgBiB,EAAO,MAAM,IAAI7T,MAAM,gCAC3C,GAAI,cAAgB6T,EAAO,CACzB,GAAI,UAAY9H,EAAQ,MAAM6G,EAC9B,OAAOkB,GACT,CACA,IAAKrU,EAAQsM,OAASA,EAAQtM,EAAQmT,IAAMA,IAAO,CACjD,IAAImB,EAAWtU,EAAQsU,SACvB,GAAIA,EAAU,CACZ,IAAIC,EAAiBC,EAAoBF,EAAUtU,GACnD,GAAIuU,EAAgB,CAClB,GAAIA,IAAmBnB,EAAkB,SACzC,OAAOmB,CACT,CACF,CACA,GAAI,SAAWvU,EAAQsM,OAAQtM,EAAQyU,KAAOzU,EAAQ0U,MAAQ1U,EAAQmT,SAAS,GAAI,UAAYnT,EAAQsM,OAAQ,CAC7G,GAAI,mBAAqB8H,EAAO,MAAMA,EAAQ,YAAapU,EAAQmT,IACnEnT,EAAQ2U,kBAAkB3U,EAAQmT,IACpC,KAAO,WAAanT,EAAQsM,QAAUtM,EAAQ4U,OAAO,SAAU5U,EAAQmT,KACvEiB,EAAQ,YACR,IAAIL,EAASd,EAASR,EAAS/L,EAAM1G,GACrC,GAAI,WAAa+T,EAAOtV,KAAM,CAC5B,GAAI2V,EAAQpU,EAAQiC,KAAO,YAAc,iBAAkB8R,EAAOZ,MAAQC,EAAkB,SAC5F,MAAO,CACLlR,MAAO6R,EAAOZ,IACdlR,KAAMjC,EAAQiC,KAElB,CACA,UAAY8R,EAAOtV,OAAS2V,EAAQ,YAAapU,EAAQsM,OAAS,QAAStM,EAAQmT,IAAMY,EAAOZ,IAClG,CACF,CACF,CACA,SAASqB,EAAoBF,EAAUtU,GACrC,IAAI6U,EAAa7U,EAAQsM,OACvBA,EAASgI,EAASjV,SAASwV,GAC7B,QAAIzM,IAAckE,EAAQ,OAAOtM,EAAQsU,SAAW,KAAM,UAAYO,GAAcP,EAASjV,SAAiB,SAAMW,EAAQsM,OAAS,SAAUtM,EAAQmT,SAAM/K,EAAWoM,EAAoBF,EAAUtU,GAAU,UAAYA,EAAQsM,SAAW,WAAauI,IAAe7U,EAAQsM,OAAS,QAAStM,EAAQmT,IAAM,IAAIrL,UAAU,oCAAsC+M,EAAa,aAAczB,EAClY,IAAIW,EAASd,EAAS3G,EAAQgI,EAASjV,SAAUW,EAAQmT,KACzD,GAAI,UAAYY,EAAOtV,KAAM,OAAOuB,EAAQsM,OAAS,QAAStM,EAAQmT,IAAMY,EAAOZ,IAAKnT,EAAQsU,SAAW,KAAMlB,EACjH,IAAI0B,EAAOf,EAAOZ,IAClB,OAAO2B,EAAOA,EAAK7S,MAAQjC,EAAQsU,EAASS,YAAcD,EAAK5S,MAAOlC,EAAQgC,KAAOsS,EAASU,QAAS,WAAahV,EAAQsM,SAAWtM,EAAQsM,OAAS,OAAQtM,EAAQmT,SAAM/K,GAAYpI,EAAQsU,SAAW,KAAMlB,GAAoB0B,GAAQ9U,EAAQsM,OAAS,QAAStM,EAAQmT,IAAM,IAAIrL,UAAU,oCAAqC9H,EAAQsU,SAAW,KAAMlB,EACrW,CACA,SAAS6B,EAAaC,GACpB,IAAIC,EAAQ,CACVC,OAAQF,EAAK,IAEf,KAAKA,IAASC,EAAME,SAAWH,EAAK,IAAK,KAAKA,IAASC,EAAMG,WAAaJ,EAAK,GAAIC,EAAMI,SAAWL,EAAK,IAAKnV,KAAKyV,WAAW1T,KAAKqT,EACrI,CACA,SAASM,EAAcN,GACrB,IAAIpB,EAASoB,EAAMO,YAAc,CAAC,EAClC3B,EAAOtV,KAAO,gBAAiBsV,EAAOZ,IAAKgC,EAAMO,WAAa3B,CAChE,CACA,SAAShB,EAAQJ,GACf5S,KAAKyV,WAAa,CAAC,CACjBJ,OAAQ,SACNzC,EAAYtP,QAAQ4R,EAAclV,MAAOA,KAAK4V,OAAM,EAC1D,CACA,SAAS7J,EAAO9E,GACd,GAAIA,EAAU,CACZ,IAAI4O,EAAiB5O,EAASkL,GAC9B,GAAI0D,EAAgB,OAAOA,EAAetX,KAAK0I,GAC/C,GAAI,mBAAqBA,EAAShF,KAAM,OAAOgF,EAC/C,IAAK6O,MAAM7O,EAAS5F,QAAS,CAC3B,IAAI+J,GAAK,EACPnJ,EAAO,SAASA,IACd,OAASmJ,EAAInE,EAAS5F,QAAS,GAAI2Q,EAAOzT,KAAK0I,EAAUmE,GAAI,OAAOnJ,EAAKE,MAAQ8E,EAASmE,GAAInJ,EAAKC,MAAO,EAAID,EAC9G,OAAOA,EAAKE,WAAQkG,EAAWpG,EAAKC,MAAO,EAAID,CACjD,EACF,OAAOA,EAAKA,KAAOA,CACrB,CACF,CACA,MAAO,CACLA,KAAMqS,EAEV,CACA,SAASA,IACP,MAAO,CACLnS,WAAOkG,EACPnG,MAAM,EAEV,CACA,OAAOoR,EAAkBjW,UAAYkW,EAA4B3D,EAAe8D,EAAI,cAAe,CACjGvR,MAAOoR,EACPrD,cAAc,IACZN,EAAe2D,EAA4B,cAAe,CAC5DpR,MAAOmR,EACPpD,cAAc,IACZoD,EAAkByC,YAAcxD,EAAOgB,EAA4BjB,EAAmB,qBAAsBnP,EAAQ6S,oBAAsB,SAAUC,GACtJ,IAAIC,EAAO,mBAAqBD,GAAUA,EAAOtV,YACjD,QAASuV,IAASA,IAAS5C,GAAqB,uBAAyB4C,EAAKH,aAAeG,EAAKrO,MACpG,EAAG1E,EAAQgT,KAAO,SAAUF,GAC1B,OAAO7Y,OAAOgZ,eAAiBhZ,OAAOgZ,eAAeH,EAAQ1C,IAA+B0C,EAAO1E,UAAYgC,EAA4BhB,EAAO0D,EAAQ3D,EAAmB,sBAAuB2D,EAAO5Y,UAAYD,OAAOiR,OAAOqF,GAAKuC,CAC5O,EAAG9S,EAAQkT,MAAQ,SAAUjD,GAC3B,MAAO,CACLa,QAASb,EAEb,EAAGO,EAAsBE,EAAcxW,WAAYkV,EAAOsB,EAAcxW,UAAW+U,GAAqB,WACtG,OAAOpS,IACT,IAAImD,EAAQ0Q,cAAgBA,EAAe1Q,EAAQmT,MAAQ,SAAU5D,EAASC,EAAShM,EAAMiM,EAAakB,QACxG,IAAWA,IAAgBA,EAAchL,SACzC,IAAIyN,EAAO,IAAI1C,EAAcpB,EAAKC,EAASC,EAAShM,EAAMiM,GAAckB,GACxE,OAAO3Q,EAAQ6S,oBAAoBrD,GAAW4D,EAAOA,EAAKtU,OAAOU,MAAK,SAAUyG,GAC9E,OAAOA,EAAOlH,KAAOkH,EAAOjH,MAAQoU,EAAKtU,MAC3C,GACF,EAAG0R,EAAsBD,GAAKnB,EAAOmB,EAAIpB,EAAmB,aAAcC,EAAOmB,EAAIvB,GAAgB,WACnG,OAAOnS,IACT,IAAIuS,EAAOmB,EAAI,YAAY,WACzB,MAAO,oBACT,IAAIvQ,EAAQd,KAAO,SAAUmU,GAC3B,IAAIC,EAASrZ,OAAOoZ,GAClBnU,EAAO,GACT,IAAK,IAAI1E,KAAO8Y,EAAQpU,EAAKN,KAAKpE,GAClC,OAAO0E,EAAKqU,UAAW,SAASzU,IAC9B,KAAOI,EAAKhB,QAAS,CACnB,IAAI1D,EAAM0E,EAAKsU,MACf,GAAIhZ,KAAO8Y,EAAQ,OAAOxU,EAAKE,MAAQxE,EAAKsE,EAAKC,MAAO,EAAID,CAC9D,CACA,OAAOA,EAAKC,MAAO,EAAID,CACzB,CACF,EAAGkB,EAAQ4I,OAASA,EAAQiH,EAAQ3V,UAAY,CAC9CsD,YAAaqS,EACb4C,MAAO,SAAegB,GACpB,GAAI5W,KAAK6W,KAAO,EAAG7W,KAAKiC,KAAO,EAAGjC,KAAK0U,KAAO1U,KAAK2U,WAAQtM,EAAWrI,KAAKkC,MAAO,EAAIlC,KAAKuU,SAAW,KAAMvU,KAAKuM,OAAS,OAAQvM,KAAKoT,SAAM/K,EAAWrI,KAAKyV,WAAWnS,QAAQoS,IAAiBkB,EAAe,IAAK,IAAI/O,KAAQ7H,KAAM,MAAQ6H,EAAKiP,OAAO,IAAM9E,EAAOzT,KAAKyB,KAAM6H,KAAUiO,OAAOjO,EAAKgC,MAAM,MAAQ7J,KAAK6H,QAAQQ,EACtU,EACA0O,KAAM,WACJ/W,KAAKkC,MAAO,EACZ,IAAI8U,EAAahX,KAAKyV,WAAW,GAAGE,WACpC,GAAI,UAAYqB,EAAWtY,KAAM,MAAMsY,EAAW5D,IAClD,OAAOpT,KAAKiX,IACd,EACArC,kBAAmB,SAA2BsC,GAC5C,GAAIlX,KAAKkC,KAAM,MAAMgV,EACrB,IAAIjX,EAAUD,KACd,SAASmX,EAAOC,EAAKC,GACnB,OAAOrD,EAAOtV,KAAO,QAASsV,EAAOZ,IAAM8D,EAAWjX,EAAQgC,KAAOmV,EAAKC,IAAWpX,EAAQsM,OAAS,OAAQtM,EAAQmT,SAAM/K,KAAcgP,CAC5I,CACA,IAAK,IAAIjM,EAAIpL,KAAKyV,WAAWpU,OAAS,EAAG+J,GAAK,IAAKA,EAAG,CACpD,IAAIgK,EAAQpV,KAAKyV,WAAWrK,GAC1B4I,EAASoB,EAAMO,WACjB,GAAI,SAAWP,EAAMC,OAAQ,OAAO8B,EAAO,OAC3C,GAAI/B,EAAMC,QAAUrV,KAAK6W,KAAM,CAC7B,IAAIS,EAAWtF,EAAOzT,KAAK6W,EAAO,YAChCmC,EAAavF,EAAOzT,KAAK6W,EAAO,cAClC,GAAIkC,GAAYC,EAAY,CAC1B,GAAIvX,KAAK6W,KAAOzB,EAAME,SAAU,OAAO6B,EAAO/B,EAAME,UAAU,GAC9D,GAAItV,KAAK6W,KAAOzB,EAAMG,WAAY,OAAO4B,EAAO/B,EAAMG,WACxD,MAAO,GAAI+B,GACT,GAAItX,KAAK6W,KAAOzB,EAAME,SAAU,OAAO6B,EAAO/B,EAAME,UAAU,OACzD,CACL,IAAKiC,EAAY,MAAM,IAAI/W,MAAM,0CACjC,GAAIR,KAAK6W,KAAOzB,EAAMG,WAAY,OAAO4B,EAAO/B,EAAMG,WACxD,CACF,CACF,CACF,EACAV,OAAQ,SAAgBnW,EAAM0U,GAC5B,IAAK,IAAIhI,EAAIpL,KAAKyV,WAAWpU,OAAS,EAAG+J,GAAK,IAAKA,EAAG,CACpD,IAAIgK,EAAQpV,KAAKyV,WAAWrK,GAC5B,GAAIgK,EAAMC,QAAUrV,KAAK6W,MAAQ7E,EAAOzT,KAAK6W,EAAO,eAAiBpV,KAAK6W,KAAOzB,EAAMG,WAAY,CACjG,IAAIiC,EAAepC,EACnB,KACF,CACF,CACAoC,IAAiB,UAAY9Y,GAAQ,aAAeA,IAAS8Y,EAAanC,QAAUjC,GAAOA,GAAOoE,EAAajC,aAAeiC,EAAe,MAC7I,IAAIxD,EAASwD,EAAeA,EAAa7B,WAAa,CAAC,EACvD,OAAO3B,EAAOtV,KAAOA,EAAMsV,EAAOZ,IAAMA,EAAKoE,GAAgBxX,KAAKuM,OAAS,OAAQvM,KAAKiC,KAAOuV,EAAajC,WAAYlC,GAAoBrT,KAAKyX,SAASzD,EAC5J,EACAyD,SAAU,SAAkBzD,EAAQwB,GAClC,GAAI,UAAYxB,EAAOtV,KAAM,MAAMsV,EAAOZ,IAC1C,MAAO,UAAYY,EAAOtV,MAAQ,aAAesV,EAAOtV,KAAOsB,KAAKiC,KAAO+R,EAAOZ,IAAM,WAAaY,EAAOtV,MAAQsB,KAAKiX,KAAOjX,KAAKoT,IAAMY,EAAOZ,IAAKpT,KAAKuM,OAAS,SAAUvM,KAAKiC,KAAO,OAAS,WAAa+R,EAAOtV,MAAQ8W,IAAaxV,KAAKiC,KAAOuT,GAAWnC,CACtQ,EACAqE,OAAQ,SAAgBnC,GACtB,IAAK,IAAInK,EAAIpL,KAAKyV,WAAWpU,OAAS,EAAG+J,GAAK,IAAKA,EAAG,CACpD,IAAIgK,EAAQpV,KAAKyV,WAAWrK,GAC5B,GAAIgK,EAAMG,aAAeA,EAAY,OAAOvV,KAAKyX,SAASrC,EAAMO,WAAYP,EAAMI,UAAWE,EAAcN,GAAQ/B,CACrH,CACF,EACA,MAAS,SAAgBgC,GACvB,IAAK,IAAIjK,EAAIpL,KAAKyV,WAAWpU,OAAS,EAAG+J,GAAK,IAAKA,EAAG,CACpD,IAAIgK,EAAQpV,KAAKyV,WAAWrK,GAC5B,GAAIgK,EAAMC,SAAWA,EAAQ,CAC3B,IAAIrB,EAASoB,EAAMO,WACnB,GAAI,UAAY3B,EAAOtV,KAAM,CAC3B,IAAIiZ,EAAS3D,EAAOZ,IACpBsC,EAAcN,EAChB,CACA,OAAOuC,CACT,CACF,CACA,MAAM,IAAInX,MAAM,wBAClB,EACAoX,cAAe,SAAuB3Q,EAAU+N,EAAYC,GAC1D,OAAOjV,KAAKuU,SAAW,CACrBjV,SAAUyM,EAAO9E,GACjB+N,WAAYA,EACZC,QAASA,GACR,SAAWjV,KAAKuM,SAAWvM,KAAKoT,SAAM/K,GAAYgL,CACvD,GACClQ,CACL,CC9Se,SAAS0U,EAAgBC,EAAUC,GAChD,KAAMD,aAAoBC,GACxB,MAAM,IAAIhQ,UAAU,oCAExB,CCFe,SAASiQ,EAAe5E,GACrC,IAAIzV,ECFS,SAAsBwO,EAAO8L,GAC1C,GAAuB,WAAnBnG,EAAQ3F,IAAiC,OAAVA,EAAgB,OAAOA,EAC1D,IAAI+L,EAAO/L,EAAMnP,OAAOmb,aACxB,QAAa9P,IAAT6P,EAAoB,CACtB,IAAIE,EAAMF,EAAK3Z,KAAK4N,EAAO8L,GAAQ,WACnC,GAAqB,WAAjBnG,EAAQsG,GAAmB,OAAOA,EACtC,MAAM,IAAIrQ,UAAU,+CACtB,CACA,OAAiB,WAATkQ,EAAoB7V,OAASiW,QAAQlM,EAC/C,CDPY,CAAYiH,EAAK,UAC3B,MAAwB,WAAjBtB,EAAQnU,GAAoBA,EAAMyE,OAAOzE,EAClD,CEJA,SAAS2a,EAAkBC,EAAQ5Z,GACjC,IAAK,IAAIyM,EAAI,EAAGA,EAAIzM,EAAM0C,OAAQ+J,IAAK,CACrC,IAAIoN,EAAa7Z,EAAMyM,GACvBoN,EAAW5G,WAAa4G,EAAW5G,aAAc,EACjD4G,EAAWtI,cAAe,EACtB,UAAWsI,IAAYA,EAAWhG,UAAW,GACjDpV,OAAOwS,eAAe2I,EAAQ,EAAcC,EAAW7a,KAAM6a,EAC/D,CACF,CACe,SAASC,EAAaV,EAAaW,EAAYC,GAM5D,OALID,GAAYJ,EAAkBP,EAAY1a,UAAWqb,GACrDC,GAAaL,EAAkBP,EAAaY,GAChDvb,OAAOwS,eAAemI,EAAa,YAAa,CAC9CvF,UAAU,IAELuF,CACT,2SCfaa,EAAe,SAACC,GAC3B,IAAIC,EAQJ,OANEA,EADED,IAEwB,qBAAVhS,MACP,sCAAUkS,EAAI,yBAAJA,EAAI,uBAAIC,OAAAA,OAAAA,OAAAA,EAAAA,IAAAA,MAAAA,SAAAA,IAAA,uEAAQ,OAAR,SAAc,2CAAqB,OAAlC,OAAkC,UAAlC,UAAoCnS,MAAK,QAAIkS,GAAK,oFAErElS,OAEJ,kBAAaiS,EAAM,uBAAS,CACrC,ECZe,SAASG,EAAuBtS,GAC7C,QAAa,IAATA,EACF,MAAM,IAAIuS,eAAe,6DAE3B,OAAOvS,CACT,CCLe,SAASwS,EAAgBxH,EAAGjU,GAKzC,OAJAyb,EAAkB/b,OAAOgZ,eAAiBhZ,OAAOgZ,eAAevR,OAAS,SAAyB8M,EAAGjU,GAEnG,OADAiU,EAAEJ,UAAY7T,EACPiU,CACT,EACOwH,EAAgBxH,EAAGjU,EAC5B,CCLe,SAAS0b,EAAUC,EAAUC,GAC1C,GAA0B,oBAAfA,GAA4C,OAAfA,EACtC,MAAM,IAAIvR,UAAU,sDAEtBsR,EAAShc,UAAYD,OAAOiR,OAAOiL,GAAcA,EAAWjc,UAAW,CACrEsD,YAAa,CACXwB,MAAOkX,EACP7G,UAAU,EACVtC,cAAc,KAGlB9S,OAAOwS,eAAeyJ,EAAU,YAAa,CAC3C7G,UAAU,IAER8G,GAAY,EAAeD,EAAUC,EAC3C,CChBe,SAASC,EAAgB5H,GAItC,OAHA4H,EAAkBnc,OAAOgZ,eAAiBhZ,OAAOkU,eAAezM,OAAS,SAAyB8M,GAChG,OAAOA,EAAEJ,WAAanU,OAAOkU,eAAeK,EAC9C,EACO4H,EAAgB5H,EACzB,CCLe,SAAS6H,IACtB,GAAuB,qBAAZC,UAA4BA,QAAQC,UAAW,OAAO,EACjE,GAAID,QAAQC,UAAUC,KAAM,OAAO,EACnC,GAAqB,oBAAVC,MAAsB,OAAO,EACxC,IAEE,OADAC,QAAQxc,UAAUyc,QAAQvb,KAAKkb,QAAQC,UAAUG,QAAS,IAAI,WAAa,MACpE,CAGT,CAFE,MAAOxb,GACP,OAAO,CACT,CACF,CCPe,SAAS0b,EAAaC,GACnC,IAAIC,EAA4B,IAChC,OAAO,WACL,IACE7Q,EADE8Q,EAAQ,EAAeF,GAE3B,GAAIC,EAA2B,CAC7B,IAAIE,EAAY,EAAena,MAAMW,YACrCyI,EAASqQ,QAAQC,UAAUQ,EAAO9Y,UAAW+Y,EAC/C,MACE/Q,EAAS8Q,EAAM3W,MAAMvD,KAAMoB,WAE7B,OCZW,SAAoCuF,EAAMpI,GACvD,GAAIA,IAA2B,WAAlBuT,EAAQvT,IAAsC,oBAATA,GAChD,OAAOA,EACF,QAAa,IAATA,EACT,MAAM,IAAIwJ,UAAU,4DAEtB,OAAO,EAAsBpB,EAC/B,CDKW,CAA0B3G,KAAMoJ,EACzC,CACF,CEdA,SAASa,EAAIsO,EAAQ6B,EAAUjY,EAAOkY,GA6BpC,OA3BEpQ,EADqB,qBAAZwP,SAA2BA,QAAQxP,IACtCwP,QAAQxP,IAER,SAAasO,EAAQ6B,EAAUjY,EAAOkY,GAC1C,IACIpI,EADAqI,ECNK,SAAwB7D,EAAQ2D,GAC7C,MAAQhd,OAAOC,UAAUC,eAAeiB,KAAKkY,EAAQ2D,IAEpC,QADf3D,EAAS,EAAeA,MAG1B,OAAOA,CACT,CDAiB,CAAc8B,EAAQ6B,GAEjC,GAAIE,EAAM,CAER,IADArI,EAAO7U,OAAOmd,yBAAyBD,EAAMF,IACpCnQ,IAEP,OADAgI,EAAKhI,IAAI1L,KAAK8b,EAAUlY,IACjB,EACF,IAAK8P,EAAKO,SACf,OAAO,CAEX,CAEA,GADAP,EAAO7U,OAAOmd,yBAAyBF,EAAUD,GACvC,CACR,IAAKnI,EAAKO,SACR,OAAO,EAETP,EAAK9P,MAAQA,EACb/E,OAAOwS,eAAeyK,EAAUD,EAAUnI,EAC5C,MExBS,SAAyBvK,EAAK/J,EAAKwE,IAChDxE,EAAM,EAAcA,MACT+J,EACTtK,OAAOwS,eAAelI,EAAK/J,EAAK,CAC9BwE,MAAOA,EACPyP,YAAY,EACZ1B,cAAc,EACdsC,UAAU,IAGZ9K,EAAI/J,GAAOwE,CAGf,CFYQ,CAAekY,EAAUD,EAAUjY,GAErC,OAAO,CACT,EAEK8H,EAAIsO,EAAQ6B,EAAUjY,EAAOkY,EACtC,CG9Be,SAASG,EAAWC,EAAQ1B,EAAM2B,GAa/C,OAXEF,EADE,IACWf,QAAQC,UAAU7U,OAElB,SAAoB4V,EAAQ1B,EAAM2B,GAC7C,IAAIzc,EAAI,CAAC,MACTA,EAAE8D,KAAKwB,MAAMtF,EAAG8a,GAChB,IACIjB,EAAW,IADG6C,SAAS9V,KAAKtB,MAAMkX,EAAQxc,IAG9C,OADIyc,GAAO,EAAe5C,EAAU4C,EAAMrd,WACnCya,CACT,EAEK0C,EAAWjX,MAAM,KAAMnC,UAChC,CCZe,SAASwZ,EAAiBF,GACvC,IAAIG,EAAwB,oBAARC,IAAqB,IAAIA,SAAQzS,EAuBrD,OAtBAuS,EAAmB,SAA0BF,GAC3C,GAAc,OAAVA,ICPkCvH,EDOEuH,GCNsB,IAAzDC,SAAS/Y,SAASrD,KAAK4U,GAAIxL,QAAQ,kBDMQ,OAAO+S,ECP5C,IAA2BvH,EDQtC,GAAqB,oBAAVuH,EACT,MAAM,IAAI3S,UAAU,sDAEtB,GAAsB,qBAAX8S,EAAwB,CACjC,GAAIA,EAAOjP,IAAI8O,GAAQ,OAAOG,EAAO/P,IAAI4P,GACzCG,EAAO5Q,IAAIyQ,EAAOK,EACpB,CACA,SAASA,IACP,OAAO,EAAUL,EAAOtZ,UAAW,EAAepB,MAAMW,YAC1D,CASA,OARAoa,EAAQ1d,UAAYD,OAAOiR,OAAOqM,EAAMrd,UAAW,CACjDsD,YAAa,CACXwB,MAAO4Y,EACPnJ,YAAY,EACZY,UAAU,EACVtC,cAAc,KAGX,EAAe6K,EAASL,EACjC,EACOE,EAAiBF,EAC1B,CEbO,IAAMM,EAAe,8BAE1B,WAAY7M,GAAuD,QAAtCtG,EAAO,UAAH,6CAAG,iBAAkB5H,EAAa,uCAG3C,OAH2C,UNetD,SAAcsY,EAAQ6B,EAAUjY,EAAOkY,EAAUY,GAE9D,IADQhR,EAAIsO,EAAQ6B,EAAUjY,EAAOkY,GAAY9B,IACvC0C,EACR,MAAM,IAAIlT,UAAU,yBAGxB,CMnBI,MADA,cAAMoG,IACN,uBAAatG,EAAI,MACjB,EAAK5H,QAAUA,EAAO,CACxB,CAAC,YANyB,CAMzB,EANiCO,QASvB0a,EAAoB,8BAC/B,WAAYjb,GAAY,6BAChB,gDAAiD,sBAAuBA,EAChF,CAAC,YAH8B,CAAQ+a,GAM5BG,EAAoB,8BAC/B,WAAYlb,GAAY,6BAChB,yCAA0C,sBAAuBA,EACzE,CAAC,YAH8B,CAAQ+a,GAM5BI,EAAmB,8BAC9B,WAAYnb,GAAY,6BAChB,+CAAgD,qBAAsBA,EAC9E,CAAC,YAH6B,CAAQ+a,ySC3B3BK,EAAe,WAK1B,WACEhP,GAOM,6DAAF,CAAC,EAAC,IALJ9D,QAAAA,OAAO,IAAG,GAAC,EAAC,EACZsQ,EAAW,EAAXA,YAAW,UAMb7Y,KAAKqM,IAAMA,EACXrM,KAAKuI,QAAUA,EACfvI,KAAK6G,MAAQ+R,EAAaC,EAC5B,CAwFC,OAtFD,0BAIA,SAAQyC,GACNtb,KAAKuI,QAAQgT,cAAgB,UAAH,OAAaD,EACzC,GAEA,oBAIM,SACJE,GACyC,MAAzCC,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAuC,CAAC,0IAkCrB,gBA/BTlT,EAAgCkT,EAAhClT,QAAemT,EAAiBD,EAAvB7S,KAEb+S,EAAmC,CAAC,EAGtCD,IACEnT,IAAYnL,OAAOC,UAAUC,eAAeiB,KAAKgK,EAAS,kBAAqBA,KAG9D,qBAATpB,MAAwBuU,aAAwBvU,MACxDuU,aAAwBlU,aAIxBmU,EAAS,gBAAkB,2BAC3B/S,EAAO8S,GAC0B,kBAAjBA,GAEhBC,EAAS,gBAAkB,aAC3B/S,EAAO8S,GACsB,qBAAbjR,UAA4BiR,aAAwBjR,SAGpE7B,EAAO8S,GAGPC,EAAS,gBAAkB,mBAC3B/S,EAAO6C,KAAKmQ,UAAUF,KAEzB,SAEsB1b,KAAK6G,MAAM,GAAD,OAAI7G,KAAKqM,IAAG,YAAImP,GAAgB,CAC/DjP,OAAQ,OAKRhE,QAAS,OAAF,sCAAOoT,GAAa3b,KAAKuI,SAAYA,GAC5CK,KAAAA,IACCiT,OAAM,SAACC,GACR,MAAM,IAAIZ,EAAoBY,EAChC,IAAE,OAEwD,GAZpDjO,EAAW,EAAH,OAYRkO,EAAelO,EAAStF,QAAQuC,IAAI,mBACL,SAAjBiR,EAAuB,uBACnC,IAAIZ,EAAoBtN,GAAS,WAGpCA,EAASH,GAAI,CAAF,sBACR,IAAI0N,EAAmBvN,GAAS,QAGsD,GAEzE,sBAFjBuB,GAAoD,QAApC,EAAAvB,EAAStF,QAAQuC,IAAI,uBAAe,QAAI,cAAckC,MAAM,KAAK,GAAGD,QAEjD,iBAC9B,OAD8B,UACxBc,EAASrC,OAAM,QAA5BwQ,EAAO,EAAH,gCACsB,6BAAjB5M,EAA2C,iBAC7C,OAD6C,UACvCvB,EAAS3G,OAAM,QAA5B8U,EAAO,EAAH,gCACsB,wBAAjB5M,EAAsC,iBACxC,OADwC,UAClCvB,EAASzG,WAAU,QAAhC4U,EAAO,EAAH,6BAGG,OAHH,UAGSnO,EAAS7C,OAAM,QAA5BgR,EAAO,EAAH,sCAGC,CAAEA,KAAAA,EAAM1S,MAAO,OAAM,2DAErB,CAAE0S,KAAM,KAAM1S,MAAK,OAAE,8DAE/B,EA1GyB,GCVb,SAAS2S,EAAkBC,EAAKC,IAClC,MAAPA,GAAeA,EAAMD,EAAI7a,UAAQ8a,EAAMD,EAAI7a,QAC/C,IAAK,IAAI+J,EAAI,EAAGgR,EAAO,IAAItb,MAAMqb,GAAM/Q,EAAI+Q,EAAK/Q,IAAKgR,EAAKhR,GAAK8Q,EAAI9Q,GACnE,OAAOgR,CACT,CCHe,SAASC,EAA4B1K,EAAG2K,GACrD,GAAK3K,EAAL,CACA,GAAiB,kBAANA,EAAgB,OAAO,EAAiBA,EAAG2K,GACtD,IAAI/e,EAAIH,OAAOC,UAAUuE,SAASrD,KAAKoT,GAAG9H,MAAM,GAAI,GAEpD,MADU,WAANtM,GAAkBoU,EAAEhR,cAAapD,EAAIoU,EAAEhR,YAAYkH,MAC7C,QAANtK,GAAqB,QAANA,EAAoBuD,MAAMyb,KAAK5K,GACxC,cAANpU,GAAqB,2CAA2CuK,KAAKvK,GAAW,EAAiBoU,EAAG2K,QAAxG,CALc,CAMhB,CCJe,SAAS,EAAeJ,EAAK9Q,GAC1C,OCLa,SAAyB8Q,GACtC,GAAIpb,MAAMC,QAAQmb,GAAM,OAAOA,CACjC,CDGS,CAAeA,IELT,SAA+BA,EAAK9Q,GACjD,IAAIoR,EAAK,MAAQN,EAAM,KAAO,oBAAsBlf,QAAUkf,EAAIlf,OAAOsC,WAAa4c,EAAI,cAC1F,GAAI,MAAQM,EAAI,CACd,IAAIC,EACFC,EACAC,EACAC,EACAC,EAAO,GACPC,GAAK,EACLC,GAAK,EACP,IACE,GAAIJ,GAAMH,EAAKA,EAAGje,KAAK2d,IAAMja,KAAM,IAAMmJ,EAAG,CAC1C,GAAIhO,OAAOof,KAAQA,EAAI,OACvBM,GAAK,CACP,MAAO,OAASA,GAAML,EAAKE,EAAGpe,KAAKie,IAAKta,QAAU2a,EAAK9a,KAAK0a,EAAGta,OAAQ0a,EAAKxb,SAAW+J,GAAI0R,GAAK,GASlG,CARE,MAAO5O,GACP6O,GAAK,EAAIL,EAAKxO,CAChB,CAAE,QACA,IACE,IAAK4O,GAAM,MAAQN,EAAW,SAAMI,EAAKJ,EAAW,SAAKpf,OAAOwf,KAAQA,GAAK,MAG/E,CAFE,QACA,GAAIG,EAAI,MAAML,CAChB,CACF,CACA,OAAOG,CACT,CACF,CFrBgC,CAAqBX,EAAK9Q,IAAM,EAA2B8Q,EAAK9Q,IGLjF,WACb,MAAM,IAAIrD,UAAU,4IACtB,CHGsG,EACtG,CIFe,SAASiV,EAAmBd,GACzC,OCJa,SAA4BA,GACzC,GAAIpb,MAAMC,QAAQmb,GAAM,OAAO,EAAiBA,EAClD,CDES,CAAkBA,IELZ,SAA0B3F,GACvC,GAAsB,qBAAXvZ,QAAmD,MAAzBuZ,EAAKvZ,OAAOsC,WAA2C,MAAtBiX,EAAK,cAAuB,OAAOzV,MAAMyb,KAAKhG,EACtH,CFGmC,CAAgB2F,IAAQ,EAA2BA,IGLvE,WACb,MAAM,IAAInU,UAAU,uIACtB,CHG8F,EAC9F,CINA,SAASkV,EAAmBC,EAAKhU,EAASH,EAAQoU,EAAOC,EAAQzf,EAAKyV,GACpE,IACE,IAAI2B,EAAOmI,EAAIvf,GAAKyV,GAChBjR,EAAQ4S,EAAK5S,KAInB,CAHE,MAAOmH,GAEP,YADAP,EAAOO,EAET,CACIyL,EAAK7S,KACPgH,EAAQ/G,GAER2G,QAAQI,QAAQ/G,GAAOQ,KAAKwa,EAAOC,EAEvC,KCHYC,EAOAC,EAQAC,EASAC,EAIAC,oBClCkBC,EAAgB,WAa5C,WAAYC,GAAiC,UALnC,KAAAC,oBAAqB,EAM7B5d,KAAKuM,OAASoR,EAAQpR,OACtBvM,KAAKqM,IAAMsR,EAAQtR,IACnBrM,KAAKuI,QAAUoV,EAAQpV,QACvBvI,KAAK6d,OAASF,EAAQE,OACtB7d,KAAK4I,KAAO+U,EAAQ/U,KACpB5I,KAAK4d,mBAAqBD,EAAQC,mBAClC5d,KAAKyM,OAASkR,EAAQlR,OACtBzM,KAAK8d,WAAaH,EAAQG,WAEtBH,EAAQ9W,MACV7G,KAAK6G,MAAQ8W,EAAQ9W,MACK,qBAAVA,MAChB7G,KAAK6G,MAAQkX,IAEb/d,KAAK6G,MAAQA,KAEjB,CAmIC,OAjID,+BAMA,WAEE,OADA7G,KAAK4d,oBAAqB,EACnB5d,IACT,GAAC,kBAED,SACEge,EAIAC,GAAmF,gBAG/D5V,IAAhBrI,KAAK6d,SAEE,CAAC,MAAO,QAAQK,SAASle,KAAKuM,QACvCvM,KAAKuI,QAAQ,kBAAoBvI,KAAK6d,OAEtC7d,KAAKuI,QAAQ,mBAAqBvI,KAAK6d,QAErB,QAAhB7d,KAAKuM,QAAoC,SAAhBvM,KAAKuM,SAChCvM,KAAKuI,QAAQ,gBAAkB,oBAKjC,IACI6P,GAAMU,EADK9Y,KAAK6G,OACH7G,KAAKqM,IAAIzK,WAAY,CACpC2K,OAAQvM,KAAKuM,OACbhE,QAASvI,KAAKuI,QACdK,KAAM6C,KAAKmQ,UAAU5b,KAAK4I,MAC1B6D,OAAQzM,KAAKyM,SACZ9J,KAAI,eF5D+BwQ,EE4D/B,GF5D+BA,EE4D/B,UAAC,WAAOiF,GAAG,+FAKe,GAJ3B9O,EAAQ,KACR0S,EAAO,KACPxY,EAAuB,KACvBiK,EAAS2K,EAAI3K,OACbE,EAAayK,EAAIzK,YAEjByK,EAAI1K,GAAI,CAAF,mBACY,SAAhB,EAAKnB,OAAiB,iCACL6L,EAAIpN,OAAM,OAChB,MADPpC,EAAO,EAAH,QAIRoT,EADoC,aAA3B,EAAKzT,QAAgB,QAG9B,EAAKA,QAAgB,QACrB,EAAKA,QAAgB,OAAE2V,SAAS,mCAHzBtV,EAOA6C,KAAKC,MAAM9C,IACnB,QAGGuV,EAAoC,QAAtB,IAAK5V,QAAgB,cAAC,eAAE6V,MAAM,mCAC5CC,EAA+C,QAAhC,EAAAjG,EAAI7P,QAAQuC,IAAI,wBAAgB,eAAEkC,MAAM,KACzDmR,GAAeE,GAAgBA,EAAahd,OAAS,IACvDmC,EAAQ8a,SAASD,EAAa,KAC/B,yCAEkBjG,EAAIpN,OAAM,QAAvBpC,EAAO,EAAH,KAEV,IACEU,EAAQmC,KAAKC,MAAM9C,GAGf9H,MAAMC,QAAQuI,IAAyB,MAAf8O,EAAI3K,SAC9BuO,EAAO,GACP1S,EAAQ,KACRmE,EAAS,IACTE,EAAa,MAEf,SAEmB,MAAfyK,EAAI3K,QAA2B,KAAT7E,GACxB6E,EAAS,IACTE,EAAa,cAEbrE,EAAQ,CACN6E,QAASvF,GASd,GAJGU,GAAS,EAAKwU,aAA4B,QAAd,EAAK,OAALxU,QAAK,IAALA,OAAK,EAALA,EAAOiV,eAAO,eAAEL,SAAS,6BACvD5U,EAAQ,KACRmE,EAAS,IACTE,EAAa,OAGXrE,IAAS,EAAKsU,mBAAkB,uBAC5BtU,EAAK,QAUd,OANKkV,EAAoB,CACxBlV,MAAAA,EACA0S,KAAAA,EACAxY,MAAAA,EACAiK,OAAAA,EACAE,WAAAA,GACD,kBAEM6Q,GAAiB,2CFpIrB,WACL,IAAI7X,EAAO3G,KACT+Y,EAAO3X,UACT,OAAO,IAAI0H,SAAQ,SAAUI,EAASH,GACpC,IAAImU,EAAM/J,EAAG5P,MAAMoD,EAAMoS,GACzB,SAASoE,EAAMhb,GACb8a,EAAmBC,EAAKhU,EAASH,EAAQoU,EAAOC,EAAQ,OAAQjb,EAClE,CACA,SAASib,EAAOlP,GACd+O,EAAmBC,EAAKhU,EAASH,EAAQoU,EAAOC,EAAQ,QAASlP,EACnE,CACAiP,OAAM9U,EACR,GACF,GEwHG,mDA1EM,IA0FP,OAfKrI,KAAK4d,qBACRxF,EAAMA,EAAIyD,OAAM,SAACC,GAAU,MAAM,CAC/BxS,MAAO,CACL6E,QAAS,eAAF,OAAiB2N,EAAW3N,SACnCoQ,QAAS,GACTtG,KAAM,GACNwG,KAAM3C,EAAW2C,MAAQ,IAE3BzC,KAAM,KACNxY,MAAO,KACPiK,OAAQ,EACRE,WAAY,GACb,KAGIyK,EAAIzV,KAAKqb,EAAaC,EAC/B,KAAC,EAjK2C,GCAzBS,EAInB,oFA+OC,OA/OD,yBAUA,SACEC,GAGA,IAAIC,GAAS,EACPC,GAAyB,OAAPF,QAAO,IAAPA,EAAAA,EAAW,KAChC3R,MAAM,IACN3J,KAAI,SAACrF,GACJ,MAAI,KAAK8J,KAAK9J,KAAO4gB,EACZ,IAEC,MAAN5gB,IACF4gB,GAAUA,GAEL5gB,EACT,IACCsE,KAAK,IAMR,OALAtC,KAAKqM,IAAIrF,aAAaiD,IAAI,SAAU4U,GAChC7e,KAAKuI,QAAgB,SACvBvI,KAAKuI,QAAgB,QAAK,KAE5BvI,KAAKuI,QAAgB,QAAK,wBACnBvI,IACT,GAUA,mBAgBA,SACE8e,GAK4E,6DAAF,CAAC,EAAC,IAH1EC,UAAAA,OAAS,IAAG,GAAI,EAChBC,EAAU,EAAVA,WACAC,EAAY,EAAZA,aAGIthB,EAAMshB,EAAe,GAAH,OAAMA,EAAY,UAAW,QAC/CC,EAAgBlf,KAAKqM,IAAIrF,aAAa8D,IAAInN,GAQhD,OANAqC,KAAKqM,IAAIrF,aAAaiD,IACpBtM,EAAG,UACAuhB,EAAgB,GAAH,OAAMA,EAAa,KAAM,IAAE,OAAGJ,EAAM,YAAIC,EAAY,MAAQ,QAAM,YACjE1W,IAAf2W,EAA2B,GAAKA,EAAa,cAAgB,eAG1Dhf,IACT,GAEA,mBAQA,SAAMwD,GAA+D,IAA9Cyb,GAA8C,uDAAF,CAAC,GAA7CA,aACfthB,EAA8B,qBAAjBshB,EAA+B,QAAU,GAAH,OAAMA,EAAY,UAE3E,OADAjf,KAAKqM,IAAIrF,aAAaiD,IAAItM,EAAK,GAAF,OAAK6F,IAC3BxD,IACT,GAEA,mBASA,SAAMuc,EAAc4C,GAA4D,IAA9CF,GAA8C,uDAAF,CAAC,GAA7CA,aAC1BG,EAAoC,qBAAjBH,EAA+B,SAAW,GAAH,OAAMA,EAAY,WAC5EI,EAAmC,qBAAjBJ,EAA+B,QAAU,GAAH,OAAMA,EAAY,UAIhF,OAHAjf,KAAKqM,IAAIrF,aAAaiD,IAAImV,EAAW,GAAF,OAAK7C,IAExCvc,KAAKqM,IAAIrF,aAAaiD,IAAIoV,EAAU,GAAF,OAAKF,EAAK5C,EAAO,IAC5Cvc,IACT,GAEA,yBAKA,SAAYyM,GAEV,OADAzM,KAAKyM,OAASA,EACPzM,IACT,GAEA,oBAMA,WAIE,OADAA,KAAKuI,QAAgB,OAAI,oCAClBvI,IACT,GAEA,yBAMA,WAKE,OAFAA,KAAKuI,QAAgB,OAAI,oCACzBvI,KAAK8d,YAAa,EACX9d,IACT,GAEA,iBAGA,WAEE,OADAA,KAAKuI,QAAgB,OAAI,WAClBvI,IACT,GAEA,qBAGA,WAEE,OADAA,KAAKuI,QAAgB,OAAI,uBAClBvI,IACT,GAEA,qBAqBA,WAcM,6DAAF,CAAC,EAAC,IAbJsf,QAAAA,OAAO,IAAG,GAAK,MACfC,QAAAA,OAAO,IAAG,GAAK,MACfC,SAAAA,OAAQ,IAAG,GAAK,MAChBC,QAAAA,OAAO,IAAG,GAAK,MACfC,IAAAA,OAAG,IAAG,GAAK,MACXC,OAAAA,OAAM,IAAG,SAAM,EASTvT,EAAU,CACdkT,EAAU,UAAY,KACtBC,EAAU,UAAY,KACtBC,EAAW,WAAa,KACxBC,EAAU,UAAY,KACtBC,EAAM,MAAQ,MAEbE,OAAO/F,SACPvX,KAAK,KAEFud,EAAe7f,KAAKuI,QAAgB,OAI1C,OAHAvI,KAAKuI,QACK,OACN,8BAAH,OAAiCoX,EAAM,kBAAUE,EAAY,sBAAczT,EAAO,KACrDpM,IAEhC,GAEA,sBAKA,iBAME,OAL2B,QAAtB,EAAAA,KAAKuI,QAAgB,cAAC,QAAI,IAAIwE,OAAO1L,OAAS,EACjDrB,KAAKuI,QAAgB,QAAK,eAE1BvI,KAAKuI,QAAgB,OAAI,cAEpBvI,IACT,GAEA,qBAKA,WACE,OAAOA,IACT,KAAC,EA/OD,CAAQ0d,GCmBWoC,EAInB,oFAkaC,OAlaD,qBAWA,SAAGhB,EAAgB3c,GAEjB,OADAnC,KAAKqM,IAAIrF,aAAawB,OAAOsW,EAAQ,MAAF,OAAQ3c,IACpCnC,IACT,GAIA,iBAMA,SAAI8e,EAAgB3c,GAElB,OADAnC,KAAKqM,IAAIrF,aAAawB,OAAOsW,EAAQ,OAAF,OAAS3c,IACrCnC,IACT,GAIA,gBAMA,SAAG8e,EAAgB3c,GAEjB,OADAnC,KAAKqM,IAAIrF,aAAawB,OAAOsW,EAAQ,MAAF,OAAQ3c,IACpCnC,IACT,GAIA,iBAMA,SAAI8e,EAAgB3c,GAElB,OADAnC,KAAKqM,IAAIrF,aAAawB,OAAOsW,EAAQ,OAAF,OAAS3c,IACrCnC,IACT,GAIA,gBAMA,SAAG8e,EAAgB3c,GAEjB,OADAnC,KAAKqM,IAAIrF,aAAawB,OAAOsW,EAAQ,MAAF,OAAQ3c,IACpCnC,IACT,GAIA,iBAMA,SAAI8e,EAAgB3c,GAElB,OADAnC,KAAKqM,IAAIrF,aAAawB,OAAOsW,EAAQ,OAAF,OAAS3c,IACrCnC,IACT,GAIA,kBAMA,SAAK8e,EAAgBiB,GAEnB,OADA/f,KAAKqM,IAAIrF,aAAawB,OAAOsW,EAAQ,QAAF,OAAUiB,IACtC/f,IACT,GAIA,mBAMA,SAAM8e,EAAgBiB,GAEpB,OADA/f,KAAKqM,IAAIrF,aAAawB,OAAOsW,EAAQ,SAAF,OAAWiB,IACvC/f,IACT,GAOA,gBAYA,SAAG8e,EAAgB3c,GAEjB,OADAnC,KAAKqM,IAAIrF,aAAawB,OAAOsW,EAAQ,MAAF,OAAQ3c,IACpCnC,IACT,GAIA,gBAMA,SAAG8e,EAAgB/S,GACjB,IAAMiU,EAAgBjU,EACnB1I,KAAI,SAAC4c,GAGJ,MAAiB,kBAANA,GAAkB,IAAIC,OAAO,SAASpY,KAAKmY,GAAW,IAAP,OAAWA,EAAC,KAC1D,GAAP,OAAUA,EACjB,IACC3d,KAAK,KAER,OADAtC,KAAKqM,IAAIrF,aAAawB,OAAOsW,EAAQ,OAAF,OAASkB,EAAa,MAClDhgB,IACT,GAOA,sBAOA,SAAS8e,EAAgB3c,GAYvB,MAXqB,kBAAVA,EAGTnC,KAAKqM,IAAIrF,aAAawB,OAAOsW,EAAQ,MAAF,OAAQ3c,IAClCrB,MAAMC,QAAQoB,GAEvBnC,KAAKqM,IAAIrF,aAAawB,OAAOsW,EAAQ,OAAF,OAAS3c,EAAMG,KAAK,KAAI,MAG3DtC,KAAKqM,IAAIrF,aAAawB,OAAOsW,EAAQ,MAAF,OAAQrT,KAAKmQ,UAAUzZ,KAErDnC,IACT,GAOA,yBAOA,SAAY8e,EAAgB3c,GAW1B,MAVqB,kBAAVA,EAETnC,KAAKqM,IAAIrF,aAAawB,OAAOsW,EAAQ,MAAF,OAAQ3c,IAClCrB,MAAMC,QAAQoB,GAEvBnC,KAAKqM,IAAIrF,aAAawB,OAAOsW,EAAQ,OAAF,OAAS3c,EAAMG,KAAK,KAAI,MAG3DtC,KAAKqM,IAAIrF,aAAawB,OAAOsW,EAAQ,MAAF,OAAQrT,KAAKmQ,UAAUzZ,KAErDnC,IACT,GAIA,qBAOA,SAAQ8e,EAAgBqB,GAEtB,OADAngB,KAAKqM,IAAIrF,aAAawB,OAAOsW,EAAQ,MAAF,OAAQqB,IACpCngB,IACT,GAIA,sBAQA,SAAS8e,EAAgBqB,GAEvB,OADAngB,KAAKqM,IAAIrF,aAAawB,OAAOsW,EAAQ,OAAF,OAASqB,IACrCngB,IACT,GAIA,qBAOA,SAAQ8e,EAAgBqB,GAEtB,OADAngB,KAAKqM,IAAIrF,aAAawB,OAAOsW,EAAQ,MAAF,OAAQqB,IACpCngB,IACT,GAIA,sBAQA,SAAS8e,EAAgBqB,GAEvB,OADAngB,KAAKqM,IAAIrF,aAAawB,OAAOsW,EAAQ,OAAF,OAASqB,IACrCngB,IACT,GAIA,2BAQA,SAAc8e,EAAgBqB,GAE5B,OADAngB,KAAKqM,IAAIrF,aAAawB,OAAOsW,EAAQ,OAAF,OAASqB,IACrCngB,IACT,GAOA,sBAOA,SAAS8e,EAAgB3c,GAQvB,MAPqB,kBAAVA,EAETnC,KAAKqM,IAAIrF,aAAawB,OAAOsW,EAAQ,MAAF,OAAQ3c,IAG3CnC,KAAKqM,IAAIrF,aAAawB,OAAOsW,EAAQ,OAAF,OAAS3c,EAAMG,KAAK,KAAI,MAEtDtC,IACT,GAYA,wBAUA,SACE8e,EACAsB,GACmF,6DAAF,CAAC,EAAhFC,EAAM,EAANA,OAAQ3hB,EAAI,EAAJA,KAEN4hB,EAAW,GACF,UAAT5hB,EACF4hB,EAAW,KACO,WAAT5hB,EACT4hB,EAAW,KACO,cAAT5hB,IACT4hB,EAAW,KAEb,IAAMC,OAAwBlY,IAAXgY,EAAuB,GAAK,IAAH,OAAOA,EAAM,KAEzD,OADArgB,KAAKqM,IAAIrF,aAAawB,OAAOsW,EAAQ,GAAF,OAAKwB,EAAQ,cAAMC,EAAU,YAAIH,IAC7DpgB,IACT,GAIA,mBAOA,SAAMogB,GAA8B,WAIlC,OAHAhjB,OAAO4O,QAAQoU,GAAO9c,SAAQ,YAAoB,aAAlBwb,EAAM,KAAE3c,EAAK,KAC3C,EAAKkK,IAAIrF,aAAawB,OAAOsW,EAAQ,MAAF,OAAQ3c,GAC7C,IACOnC,IACT,GAQA,iBAaA,SAAI8e,EAAgB0B,EAAkBre,GAEpC,OADAnC,KAAKqM,IAAIrF,aAAawB,OAAOsW,EAAQ,OAAF,OAAS0B,EAAQ,YAAIre,IACjDnC,IACT,GAEA,gBAaA,SAAGygB,GAAiE,IAA9CxB,GAA8C,uDAAF,CAAC,GAA7CA,aACdthB,EAAMshB,EAAe,GAAH,OAAMA,EAAY,OAAQ,KAElD,OADAjf,KAAKqM,IAAIrF,aAAawB,OAAO7K,EAAK,IAAF,OAAM8iB,EAAO,MACtCzgB,IACT,GAQA,oBAaA,SAAO8e,EAAgB0B,EAAkBre,GAEvC,OADAnC,KAAKqM,IAAIrF,aAAawB,OAAOsW,EAAQ,GAAF,OAAK0B,EAAQ,YAAIre,IAC7CnC,IACT,KAAC,EAlaD,CAAQ0e,GC1BWgC,EAAqB,WAUxC,WACErU,EAAQ,GASP,QAPC9D,QAAAA,OAAO,IAAG,GAAC,EAAC,EACZsV,EAAM,EAANA,OACAhX,EAAK,EAALA,MAAK,UAOP7G,KAAKqM,IAAMA,EACXrM,KAAKuI,QAAUA,EACfvI,KAAK6d,OAASA,EACd7d,KAAK6G,MAAQA,CACf,CA+RC,OA7RD,yBAqBA,SACE8X,GAOM,6DAAF,CAAC,EAAC,IALJgC,KAAAA,OAAI,IAAG,GAAK,EACZnd,EAAK,EAALA,MAMI+I,EAASoU,EAAO,OAAS,MAE3B/B,GAAS,EACPC,GAAyB,OAAPF,QAAO,IAAPA,EAAAA,EAAW,KAChC3R,MAAM,IACN3J,KAAI,SAACrF,GACJ,MAAI,KAAK8J,KAAK9J,KAAO4gB,EACZ,IAEC,MAAN5gB,IACF4gB,GAAUA,GAEL5gB,EACT,IACCsE,KAAK,IAMR,OALAtC,KAAKqM,IAAIrF,aAAaiD,IAAI,SAAU4U,GAChCrb,IACFxD,KAAKuI,QAAgB,OAAI,SAAH,OAAY/E,IAG7B,IAAIsc,EAAuB,CAChCvT,OAAAA,EACAF,IAAKrM,KAAKqM,IACV9D,QAASvI,KAAKuI,QACdsV,OAAQ7d,KAAK6d,OACbhX,MAAO7G,KAAK6G,MACZiX,YAAY,GAEhB,GAEA,oBAsBA,SACE/R,GAKM,IAHJvI,GAGI,uDAAF,CAAC,GAHHA,MAOIod,EAAiB,GACjBhY,EAAOmD,EASb,GARIvI,GACFod,EAAe7e,KAAK,SAAD,OAAUyB,IAE3BxD,KAAKuI,QAAgB,QACvBqY,EAAeC,QAAQ7gB,KAAKuI,QAAgB,QAE9CvI,KAAKuI,QAAgB,OAAIqY,EAAete,KAAK,KAEzCxB,MAAMC,QAAQgL,GAAS,CACzB,IAAM4S,EAAU5S,EAAO+U,QAAO,SAACC,EAAK5hB,GAAC,OAAK4hB,EAAIC,OAAO5jB,OAAOiF,KAAKlD,GAAG,GAAE,IACtE,GAAIwf,EAAQtd,OAAS,EAAG,CACtB,IAAM4f,EAAgB,EAAI,IAAIC,IAAIvC,IAAUtb,KAAI,SAACyb,GAAM,iBAASA,EAAM,QACtE9e,KAAKqM,IAAIrF,aAAaiD,IAAI,UAAWgX,EAAc3e,KAAK,OAI5D,OAAO,IAAIwd,EAAuB,CAChCvT,OArBa,OAsBbF,IAAKrM,KAAKqM,IACV9D,QAASvI,KAAKuI,QACdsV,OAAQ7d,KAAK6d,OACbjV,KAAAA,EACA/B,MAAO7G,KAAK6G,MACZiX,YAAY,GAEhB,GAEA,oBAiCA,SACE/R,GASM,6DAAF,CAAC,EAPHoV,EAAU,EAAVA,WAAU,IACVC,iBAAAA,OAAgB,IAAG,GAAK,EACxB5d,EAAK,EAALA,MASIod,EAAiB,CAAC,cAAD,OAAeQ,EAAmB,SAAW,QAAO,qBAExD/Y,IAAf8Y,GAA0BnhB,KAAKqM,IAAIrF,aAAaiD,IAAI,cAAekX,GACvE,IAAMvY,EAAOmD,EASb,OARIvI,GACFod,EAAe7e,KAAK,SAAD,OAAUyB,IAE3BxD,KAAKuI,QAAgB,QACvBqY,EAAeC,QAAQ7gB,KAAKuI,QAAgB,QAE9CvI,KAAKuI,QAAgB,OAAIqY,EAAete,KAAK,KAEtC,IAAIwd,EAAuB,CAChCvT,OAfa,OAgBbF,IAAKrM,KAAKqM,IACV9D,QAASvI,KAAKuI,QACdsV,OAAQ7d,KAAK6d,OACbjV,KAAAA,EACA/B,MAAO7G,KAAK6G,MACZiX,YAAY,GAEhB,GAEA,oBAqBA,SACE/R,GAKM,IAHJvI,GAGI,uDAAF,CAAC,GAHHA,MAMIod,EAAiB,GACjBhY,EAAOmD,EASb,OARIvI,GACFod,EAAe7e,KAAK,SAAD,OAAUyB,IAE3BxD,KAAKuI,QAAgB,QACvBqY,EAAeC,QAAQ7gB,KAAKuI,QAAgB,QAE9CvI,KAAKuI,QAAgB,OAAIqY,EAAete,KAAK,KAEtC,IAAIwd,EAAuB,CAChCvT,OAZa,QAabF,IAAKrM,KAAKqM,IACV9D,QAASvI,KAAKuI,QACdsV,OAAQ7d,KAAK6d,OACbjV,KAAAA,EACA/B,MAAO7G,KAAK6G,MACZiX,YAAY,GAEhB,GAEA,oBAmBA,WAIM,IAHJta,GAGI,uDAAF,CAAC,GAHHA,MAKMod,EAAiB,GASvB,OARIpd,GACFod,EAAe7e,KAAK,SAAD,OAAUyB,IAE3BxD,KAAKuI,QAAgB,QACvBqY,EAAeC,QAAQ7gB,KAAKuI,QAAgB,QAE9CvI,KAAKuI,QAAgB,OAAIqY,EAAete,KAAK,KAEtC,IAAIwd,EAAuB,CAChCvT,OAXa,SAYbF,IAAKrM,KAAKqM,IACV9D,QAASvI,KAAKuI,QACdsV,OAAQ7d,KAAK6d,OACbhX,MAAO7G,KAAK6G,MACZiX,YAAY,GAEhB,KAAC,EAzTuC,GCJ7BuD,EAAkB,CAAE,gBAAiB,gBAAF,OCDzB,UCgBFC,EAAe,WAwBlC,WACEjV,GASM,6DAAF,CAAC,EAAC,IAPJ9D,QAAAA,OAAO,IAAG,GAAC,EAAC,EACZsV,EAAM,EAANA,OACAhX,EAAK,EAALA,MAAK,UAOP7G,KAAKqM,IAAMA,EACXrM,KAAKuI,QAAU,OAAH,wBAAQ8Y,GAAoB9Y,GACxCvI,KAAK6d,OAASA,EACd7d,KAAK6G,MAAQA,CACf,CA8FC,OApFD,uBAKA,SAAK0a,GACH,IAAMlV,EAAM,IAAImV,IAAI,GAAD,OAAIxhB,KAAKqM,IAAG,YAAIkV,IACnC,OAAO,IAAIb,EAAmCrU,EAAK,CACjD9D,QAAS,OAAF,UAAOvI,KAAKuI,SACnBsV,OAAQ7d,KAAK6d,OACbhX,MAAO7G,KAAK6G,OAEhB,GAEA,iBAqBA,SAIEsM,GAQM,IAUF5G,EAEA3D,EAnBJmQ,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAA0B,CAAC,EAAC,yDAOxB,CAAC,EAAC,IALJ4H,KAAAA,OAAI,IAAG,GAAK,EACZnd,EAAK,EAALA,MAeI6I,EAAM,IAAImV,IAAI,GAAD,OAAIxhB,KAAKqM,IAAG,gBAAQ8G,IAEnCwN,GACFpU,EAAS,OACTnP,OAAO4O,QAAQ+M,GAAMzV,SAAQ,YAAkB,aAAhBuE,EAAI,KAAE1F,EAAK,KACxCkK,EAAIrF,aAAawB,OAAOX,EAAM,GAAF,OAAK1F,GACnC,MAEAoK,EAAS,OACT3D,EAAOmQ,GAGT,IAAMxQ,EAAU,OAAH,UAAQvI,KAAKuI,SAK1B,OAJI/E,IACF+E,EAAgB,OAAI,SAAH,OAAY/E,IAGxB,IAAIsc,EAAuB,CAChCvT,OAAAA,EACAF,IAAAA,EACA9D,QAAAA,EACAsV,OAAQ7d,KAAK6d,OACbjV,KAAAA,EACA/B,MAAO7G,KAAK6G,MACZiX,YAAY,GAEhB,KAAC,EAtIiC,YPdvBuD,EAAkB,CAAE,gBAAiB,eAAF,OQFzB,URMVI,EAAkB,KAI/B,SAAYpE,GACVA,EAAAA,EAAAA,WAAAA,GAAAA,aACAA,EAAAA,EAAAA,KAAAA,GAAAA,OACAA,EAAAA,EAAAA,QAAAA,GAAAA,UACAA,EAAAA,EAAAA,OAAAA,GAAAA,QACD,CALD,CAAYA,IAAAA,EAAa,KAOzB,SAAYC,GACVA,EAAAA,OAAAA,SACAA,EAAAA,QAAAA,UACAA,EAAAA,OAAAA,SACAA,EAAAA,QAAAA,UACAA,EAAAA,QAAAA,SACD,CAND,CAAYA,IAAAA,EAAc,KAQ1B,SAAYC,GACVA,EAAAA,MAAAA,YACAA,EAAAA,MAAAA,YACAA,EAAAA,KAAAA,WACAA,EAAAA,MAAAA,YACAA,EAAAA,MAAAA,YACAA,EAAAA,aAAAA,cACD,CAPD,CAAYA,IAAAA,EAAc,KAS1B,SAAYC,GACVA,EAAAA,UAAAA,WACD,CAFD,CAAYA,IAAAA,EAAU,KAItB,SAAYC,GACVA,EAAAA,WAAAA,aACAA,EAAAA,KAAAA,OACAA,EAAAA,QAAAA,UACAA,EAAAA,OAAAA,QACD,CALD,CAAYA,IAAAA,EAAgB,KStC5B,ICgCYiE,EDpBSC,EAAK,WAIxB,WAAmB9V,EAA2B+V,GAAmB,UAA9C,KAAA/V,SAAAA,EAA2B,KAAA+V,UAAAA,EAH9C,KAAAC,WAA4BxZ,EAC5B,KAAAyZ,MAAgB,EAGd9hB,KAAK6L,SAAWA,EAChB7L,KAAK4hB,UAAYA,CACnB,CAeC,OAfA,wBAED,WACE5hB,KAAK8hB,MAAQ,EACbC,aAAa/hB,KAAK6hB,MACpB,GAEA,6BACA,WAAe,WACbE,aAAa/hB,KAAK6hB,OAElB7hB,KAAK6hB,MAAaG,YAAW,WAC3B,EAAKF,MAAQ,EAAKA,MAAQ,EAC1B,EAAKjW,UACP,GAAG7L,KAAK4hB,UAAU5hB,KAAK8hB,MAAQ,GACjC,KAAC,EAtBuB,GETLG,EAAU,WAA/B,uBACE,KAAAC,cAAgB,CA4ClB,CADG,OACF,yBA1CC,SAAOC,EAAkCtW,GACvC,OAAIsW,EAAWxhB,cAAgB6G,YACtBqE,EAAS7L,KAAKoiB,cAAcD,IAI5BtW,EADiB,kBAAfsW,EACO1W,KAAKC,MAAMyW,GAGb,CAAC,EACnB,GAAC,2BAEO,SAAcjY,GACpB,IAAMJ,EAAO,IAAIc,SAASV,GACpBmY,EAAU,IAAIC,YAEpB,OAAOtiB,KAAKuiB,iBAAiBrY,EAAQJ,EAAMuY,EAC7C,GAAC,8BAEO,SACNnY,EACAJ,EACAuY,GAOA,IAAMG,EAAY1Y,EAAK2Y,SAAS,GAC1BC,EAAY5Y,EAAK2Y,SAAS,GAC5BE,EAAS3iB,KAAKkiB,cAAgB,EAC5BU,EAAQP,EAAQ9W,OAAOrB,EAAOL,MAAM8Y,EAAQA,EAASH,IAC3DG,GAAkBH,EAClB,IAAMK,EAAQR,EAAQ9W,OAAOrB,EAAOL,MAAM8Y,EAAQA,EAASD,IAM3D,OALAC,GAAkBD,EAKX,CAAE9kB,IAAK,KAAMglB,MAAOA,EAAOC,MAAOA,EAAOC,QAJnCrX,KAAKC,MAChB2W,EAAQ9W,OAAOrB,EAAOL,MAAM8Y,EAAQzY,EAAOF,cAI/C,KAAC,EA5C4B,GCAV+Y,EAAI,WAuBvB,WACSC,EACAH,GAEiC,IADjCC,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAkC,CAAC,EACnCG,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAkBxB,EAAe,UAHjC,KAAAuB,QAAAA,EACA,KAAAH,MAAAA,EACA,KAAAC,QAAAA,EACA,KAAAG,QAAAA,EA1BT,KAAAvO,MAAgB,EAChB,KAAAwO,kBAAmC7a,EACnC,KAAAzK,IAAc,GACd,KAAAulB,aAGW,KACX,KAAAC,SAGM,GACN,KAAAC,SAA0B,KAC1B,KAAAC,aAAuB,CAepB,CAqGF,OArGG,yBAEJ,SAAOL,GACLjjB,KAAKijB,QAAUA,EACfjjB,KAAKujB,kBACLvjB,KAAKpC,IAAM,GACXoC,KAAKqjB,SAAW,KAChBrjB,KAAKmjB,aAAe,KACpBnjB,KAAK0U,MAAO,EACZ1U,KAAK0P,MACP,GAAC,kBAED,WACM1P,KAAKwjB,aAAa,aAGtBxjB,KAAKyjB,eACLzjB,KAAK0U,MAAO,EAQG,iBAPA1U,KAAKgjB,QAAQU,OAAO3hB,KAAK,CACtC6gB,MAAO5iB,KAAKgjB,QAAQJ,MACpBC,MAAO7iB,KAAK6iB,MACZC,QAAS9iB,KAAK8iB,QACdllB,IAAKoC,KAAKpC,IACV+lB,SAAU3jB,KAAKgjB,QAAQY,eAGvB5jB,KAAKsjB,aAAc,GAEvB,GAAC,2BAED,SAAcR,GACZ9iB,KAAK8iB,QAAU,OAAH,wBAAQ9iB,KAAK8iB,SAAYA,EACvC,GAAC,qBAED,SAAQrV,EAAgB5B,SAMtB,OALI7L,KAAKwjB,aAAa/V,IACpB5B,EAA0B,QAAjB,EAAA7L,KAAKmjB,oBAAY,eAAEtV,UAG9B7N,KAAKojB,SAASrhB,KAAK,CAAE0L,OAAAA,EAAQ5B,SAAAA,IACtB7L,IACT,GAAC,0BAED,WAAY,WACV,IAAIA,KAAKkjB,aAAT,CAGAljB,KAAKpC,IAAMoC,KAAKgjB,QAAQU,OAAOG,WAC/B7jB,KAAKqjB,SAAWrjB,KAAKgjB,QAAQc,gBAAgB9jB,KAAKpC,KASlDoC,KAAKgjB,QAAQe,IAAI/jB,KAAKqjB,SAAU,CAAC,GAPhB,SAACP,GAChB,EAAKS,kBACL,EAAKS,iBACL,EAAKb,aAAeL,EACpB,EAAKmB,cAAcnB,EACrB,IAIA9iB,KAAKkjB,aAAoBlB,YAAW,WAClC,EAAKkC,QAAQ,UAAW,CAAC,EAC3B,GAAGlkB,KAAKijB,SACV,GAAC,qBAED,SAAQxV,EAAgBI,GAClB7N,KAAKqjB,UACPrjB,KAAKgjB,QAAQmB,SAASnkB,KAAKqjB,SAAU,CAAE5V,OAAAA,EAAQI,SAAAA,GACnD,GAAC,qBAED,WACE7N,KAAKujB,kBACLvjB,KAAKgkB,gBACP,GAAC,6BAEO,WACDhkB,KAAKqjB,UAIVrjB,KAAKgjB,QAAQoB,KAAKpkB,KAAKqjB,SAAU,CAAC,EACpC,GAAC,4BAEO,WACNtB,aAAa/hB,KAAKkjB,cAClBljB,KAAKkjB,kBAAe7a,CACtB,GAAC,2BAEO,YAMP,IALCoF,EAAM,EAANA,OACAI,EAAQ,EAARA,SAKA7N,KAAKojB,SACFxD,QAAO,SAACthB,GAAC,OAAKA,EAAEmP,SAAWA,CAAM,IACjCnK,SAAQ,SAAChF,GAAC,OAAKA,EAAEuN,SAASgC,EAAS,GACxC,GAAC,0BAEO,SAAaJ,GACnB,OAAOzN,KAAKmjB,cAAgBnjB,KAAKmjB,aAAa1V,SAAWA,CAC3D,KAAC,EAjIsB,IF6BzB,SAAYiU,GACVA,EAAAA,KAAAA,OACAA,EAAAA,KAAAA,OACAA,EAAAA,MAAAA,OACD,CAJD,CAAYA,IAAAA,EAA+B,KAI1C,IG7BW2C,EHqDSC,EAAgB,WAqBnC,WAAmBtB,EAA0BuB,GAAmB,qBAA7C,KAAAvB,QAAAA,EApBnB,KAAA3O,MAA+B,CAAC,EAChC,KAAAmQ,aAAkC,GAClC,KAAAC,QAAyB,KACzB,KAAAC,OAII,CACFC,OAAQ,WAAO,EACfC,QAAS,WAAO,EAChBC,OAAQ,WAAO,GAWf,IAAMC,GAAa,OAAJP,QAAI,IAAJA,OAAI,EAAJA,EAAMO,SAAU,CAC7BzQ,MAAO,iBACP0Q,KAAM,iBAGR/kB,KAAKgjB,QAAQe,IAAIe,EAAOzQ,MAAO,CAAC,GAAG,SAAC2Q,GAClC,MAAoC,EAAKN,OAAjCC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAASC,EAAM,EAANA,OAEzB,EAAKJ,QAAU,EAAKzB,QAAQY,WAE5B,EAAKvP,MAAQiQ,EAAiBW,UAC5B,EAAK5Q,MACL2Q,EACAL,EACAC,GAGF,EAAKJ,aAAalhB,SAAQ,SAACyhB,GACzB,EAAK1Q,MAAQiQ,EAAiBY,SAC5B,EAAK7Q,MACL0Q,EACAJ,EACAC,EAEJ,IAEA,EAAKJ,aAAe,GAEpBK,GACF,IAEA7kB,KAAKgjB,QAAQe,IAAIe,EAAOC,KAAM,CAAC,GAAG,SAACA,GACjC,MAAoC,EAAKL,OAAjCC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QAASC,EAAM,EAANA,OAErB,EAAKM,qBACP,EAAKX,aAAaziB,KAAKgjB,IAEvB,EAAK1Q,MAAQiQ,EAAiBY,SAC5B,EAAK7Q,MACL0Q,EACAJ,EACAC,GAGFC,IAEJ,IAEA7kB,KAAK2kB,QAAO,SAAChnB,EAAKynB,EAAkBC,GAClC,EAAKrC,QAAQmB,SAAS,WAAY,CAChCtB,MAAO,OACPllB,IAAAA,EACAynB,iBAAAA,EACAC,aAAAA,GAEJ,IAEArlB,KAAK4kB,SAAQ,SAACjnB,EAAKynB,EAAkBE,GACnC,EAAKtC,QAAQmB,SAAS,WAAY,CAChCtB,MAAO,QACPllB,IAAAA,EACAynB,iBAAAA,EACAE,cAAAA,GAEJ,IAEAtlB,KAAK6kB,QAAO,WACV,EAAK7B,QAAQmB,SAAS,WAAY,CAAEtB,MAAO,QAC7C,GACF,CA6LC,OA3LD,yBA8LQ,SAAOhX,GACb7L,KAAK0kB,OAAOC,OAAS9Y,CACvB,GAEA,qBACQ,SAAQA,GACd7L,KAAK0kB,OAAOE,QAAU/Y,CACxB,GAEA,oBACQ,SAAOA,GACb7L,KAAK0kB,OAAOG,OAAShZ,CACvB,GAEA,gCACQ,WACN,OAAQ7L,KAAKykB,SAAWzkB,KAAKykB,UAAYzkB,KAAKgjB,QAAQY,UACxD,IAAC,wBArMO,SACN2B,EACAP,EACAL,EACAC,GAEA,IAAMvQ,EAAQrU,KAAKwlB,UAAUD,GACvBE,EAAmBzlB,KAAK0lB,eAAeV,GACvCW,EAA+B,CAAC,EAChCC,EAAgC,CAAC,EAqCvC,OAnCA5lB,KAAKqD,IAAIgR,GAAO,SAAC1W,EAAakoB,GACvBJ,EAAiB9nB,KACpBioB,EAAOjoB,GAAOkoB,EAElB,IAEA7lB,KAAKqD,IAAIoiB,GAAkB,SAAC9nB,EAAK0nB,GAC/B,IAAMD,EAA+B/Q,EAAM1W,GAE3C,GAAIynB,EAAkB,CACpB,IAAMU,EAAkBT,EAAahiB,KACnC,SAAClG,GAAW,OAAKA,EAAE4oB,YAAY,IAE3BC,EAAkBZ,EAAiB/hB,KACvC,SAAClG,GAAW,OAAKA,EAAE4oB,YAAY,IAE3BE,EAA8BZ,EAAazF,QAC/C,SAACziB,GAAW,OAAK6oB,EAAgBre,QAAQxK,EAAE4oB,cAAgB,CAAC,IAExDT,EAA4BF,EAAiBxF,QACjD,SAACziB,GAAW,OAAK2oB,EAAgBne,QAAQxK,EAAE4oB,cAAgB,CAAC,IAG1DE,EAAgB5kB,OAAS,IAC3BskB,EAAMhoB,GAAOsoB,GAGXX,EAAcjkB,OAAS,IACzBukB,EAAOjoB,GAAO2nB,QAGhBK,EAAMhoB,GAAO0nB,CAEjB,IAEOrlB,KAAKklB,SAAS7Q,EAAO,CAAEsR,MAAAA,EAAOC,OAAAA,GAAUjB,EAAQC,EACzD,GAEA,sBAUQ,SACNvQ,EACA0Q,EACAJ,EACAC,GAAgC,WAEhC,EAA0B,CACxBe,MAAO3lB,KAAK0lB,eAAeX,EAAKY,OAChCC,OAAQ5lB,KAAK0lB,eAAeX,EAAKa,SAF3BD,EAAK,EAALA,MAAOC,EAAM,EAANA,OAkDf,OA7CKjB,IACHA,EAAS,WAAO,GAGbC,IACHA,EAAU,WAAO,GAGnB5kB,KAAKqD,IAAIsiB,GAAO,SAAChoB,EAAK0nB,SACdD,EAAyC,QAAV,EAAA/Q,EAAM1W,UAAI,QAAI,GAGnD,GAFA0W,EAAM1W,GAAO,EAAK6nB,UAAUH,GAExBD,EAAiB/jB,OAAS,EAAG,OACzB6kB,EAAqB7R,EAAM1W,GAAK0F,KACpC,SAAClG,GAAW,OAAKA,EAAE4oB,YAAY,IAE3BI,EAA2Bf,EAAiBxF,QAChD,SAACziB,GAAW,OAAK+oB,EAAmBve,QAAQxK,EAAE4oB,cAAgB,CAAC,KAGjE,EAAA1R,EAAM1W,IAAKkjB,QAAO,UAAIsF,IAGxBxB,EAAOhnB,EAAKynB,EAAkBC,EAChC,IAEArlB,KAAKqD,IAAIuiB,GAAQ,SAACjoB,EAAK2nB,GACrB,IAAIF,EAA+B/Q,EAAM1W,GAEzC,GAAKynB,EAAL,CAEA,IAAMgB,EAAuBd,EAAcjiB,KACzC,SAAClG,GAAW,OAAKA,EAAE4oB,YAAY,IAEjCX,EAAmBA,EAAiBxF,QAClC,SAACziB,GAAW,OAAKipB,EAAqBze,QAAQxK,EAAE4oB,cAAgB,CAAC,IAGnE1R,EAAM1W,GAAOynB,EAEbR,EAAQjnB,EAAKynB,EAAkBE,GAEC,IAA5BF,EAAiB/jB,eAAqBgT,EAAM1W,EAbnB,CAc/B,IAEO0W,CACT,GAEA,iBACQ,SACN3M,EACA2e,GAEA,OAAOjpB,OAAOsL,oBAAoBhB,GAAKrE,KAAI,SAAC1F,GAAG,OAAK0oB,EAAK1oB,EAAK+J,EAAI/J,GAAK,GACzE,GAEA,4BAuBQ,SACN0W,GAIA,OAFAA,EAAQrU,KAAKwlB,UAAUnR,GAEhBjX,OAAOsL,oBAAoB2L,GAAOyM,QAAO,SAACkE,EAAUrnB,GACzD,IAAMkoB,EAAYxR,EAAM1W,GAexB,OAZEqnB,EAASrnB,GADP,UAAWkoB,EACGA,EAAUS,MAAMjjB,KAAI,SAACkjB,GAMnC,OALAA,EAAuB,aAAIA,EAAkB,eAEtCA,EAAkB,eAClBA,EAAuB,aAEvBA,CACT,IAEgBV,EAGXb,CACT,GAAG,CAAC,EACN,GAEA,uBACQ,SAAiBtd,GACvB,OAAO+D,KAAKC,MAAMD,KAAKmQ,UAAUlU,GACnC,KAAC,EAxRkC,IGrDrC,SAAY2c,GACVA,EAAAA,QAAAA,UACAA,EAAAA,KAAAA,OACAA,EAAAA,KAAAA,OACAA,EAAAA,UAAAA,YACAA,EAAAA,OAAAA,SACAA,EAAAA,OAAAA,SACAA,EAAAA,KAAAA,OACAA,EAAAA,KAAAA,OACAA,EAAAA,UAAAA,YACAA,EAAAA,KAAAA,OACAA,EAAAA,UAAAA,YACAA,EAAAA,KAAAA,OACAA,EAAAA,MAAAA,QACAA,EAAAA,MAAAA,QACAA,EAAAA,QAAAA,UACAA,EAAAA,IAAAA,MACAA,EAAAA,QAAAA,UACAA,EAAAA,KAAAA,OACAA,EAAAA,KAAAA,OACAA,EAAAA,UAAAA,YACAA,EAAAA,YAAAA,cACAA,EAAAA,OAAAA,SACAA,EAAAA,QAAAA,UACAA,EAAAA,UAAAA,WACD,CAzBD,CAAYA,IAAAA,EAAa,KAqDlB,ICsBKmC,EAOAC,EASAC,EDtCCC,GAAoB,SAC/BhI,EACA3K,GAEU,MACJ4S,EAA6B,QAAjB,GAFlBxa,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAoC,CAAC,GAEXwa,iBAAS,QAAI,GAEvC,OAAOxpB,OAAOiF,KAAK2R,GAAQ8M,QAAO,SAACC,EAAK8F,GAEtC,OADA9F,EAAI8F,GAAWC,GAAcD,EAASlI,EAAS3K,EAAQ4S,GAChD7F,CACT,GAAG,CAAC,EACN,EAgBa+F,GAAgB,SAC3BC,EACApI,EACA3K,EACA4S,GAEA,IAAM9H,EAASH,EAAQqI,MAAK,SAAC7nB,GAAC,OAAKA,EAAE0I,OAASkf,CAAU,IAClDE,EAAgB,OAANnI,QAAM,IAANA,OAAM,EAANA,EAAQpgB,KAClByD,EAAQ6R,EAAO+S,GAErB,OAAIE,IAAYL,EAAU1I,SAAS+I,GAC1BC,GAAYD,EAAS9kB,GAGvBglB,GAAKhlB,EACd,EAea+kB,GAAc,SAACxoB,EAAcyD,GAExC,GAAuB,MAAnBzD,EAAKoY,OAAO,GAAY,CAC1B,IAAMsQ,EAAW1oB,EAAKmL,MAAM,EAAGnL,EAAK2C,QACpC,OAAOoC,GAAQtB,EAAOilB,GAIxB,OAAQ1oB,GACN,KAAK2lB,EAAcgD,KACjB,OAAOC,GAAUnlB,GACnB,KAAKkiB,EAAckD,OACnB,KAAKlD,EAAcmD,OACnB,KAAKnD,EAAcoD,KACnB,KAAKpD,EAAcqD,KACnB,KAAKrD,EAAcsD,KACnB,KAAKtD,EAAcuD,QACnB,KAAKvD,EAAcwD,IACjB,OAAOC,GAAS3lB,GAClB,KAAKkiB,EAAc7Y,KACnB,KAAK6Y,EAAc0D,MACjB,OAAOC,GAAO7lB,GAChB,KAAKkiB,EAAc4D,UACjB,OAAOC,GAAkB/lB,GAC3B,KAAKkiB,EAAc8D,QACnB,KAAK9D,EAAc+D,KACnB,KAAK/D,EAAcgE,UACnB,KAAKhE,EAAciE,UACnB,KAAKjE,EAAckE,UACnB,KAAKlE,EAAcmE,MACnB,KAAKnE,EAAcoE,QACnB,KAAKpE,EAAcrZ,KACnB,KAAKqZ,EAAcqE,KACnB,KAAKrE,EAAcsE,YACnB,KAAKtE,EAAcuE,OACnB,KAAKvE,EAAcwE,QACnB,KAAKxE,EAAcyE,UAEnB,QAEE,OAAO3B,GAAKhlB,GAElB,EAEMglB,GAAO,SAAChlB,GACZ,OAAOA,CACT,EACamlB,GAAY,SAACnlB,GACxB,OAAQA,GACN,IAAK,IACH,OAAO,EACT,IAAK,IACH,OAAO,EACT,QACE,OAAOA,EAEb,EACa2lB,GAAW,SAAC3lB,GACvB,GAAqB,kBAAVA,EAAoB,CAC7B,IAAM4mB,EAAcC,WAAW7mB,GAC/B,IAAKkW,OAAOvC,MAAMiT,GAChB,OAAOA,EAGX,OAAO5mB,CACT,EACa6lB,GAAS,SAAC7lB,GACrB,GAAqB,kBAAVA,EACT,IACE,OAAOsJ,KAAKC,MAAMvJ,GAClB,MAAOmH,GAEP,OADA2f,QAAQC,IAAI,qBAAD,OAAsB5f,IAC1BnH,EAGX,OAAOA,CACT,EAYasB,GAAU,SAACtB,EAAoBzD,GAC1C,GAAqB,kBAAVyD,EACT,OAAOA,EAGT,IAAMgnB,EAAUhnB,EAAMd,OAAS,EACzB+nB,EAAajnB,EAAMgnB,GAIzB,GAAkB,MAHAhnB,EAAM,IAGgB,MAAfinB,EAAoB,CAC3C,IAAIlN,EACEmN,EAAUlnB,EAAM0H,MAAM,EAAGsf,GAG/B,IACEjN,EAAMzQ,KAAKC,MAAM,IAAM2d,EAAU,KACjC,MAAOC,GAEPpN,EAAMmN,EAAUA,EAAQrc,MAAM,KAAO,GAGvC,OAAOkP,EAAI7Y,KAAI,SAACmT,GAAc,OAAK0Q,GAAYxoB,EAAM8X,EAAI,IAG3D,OAAOrU,CACT,EASa+lB,GAAoB,SAAC/lB,GAChC,MAAqB,kBAAVA,EACFA,EAAMT,QAAQ,IAAK,KAGrBS,CACT,0SCpKA,SAAYqkB,GACVA,EAAAA,IAAAA,IACAA,EAAAA,OAAAA,SACAA,EAAAA,OAAAA,SACAA,EAAAA,OAAAA,QACD,CALD,CAAYA,IAAAA,EAAsC,KAOlD,SAAYC,GACVA,EAAAA,UAAAA,YACAA,EAAAA,SAAAA,WAIAA,EAAAA,iBAAAA,kBACD,CAPD,CAAYA,IAAAA,EAAqB,KASjC,SAAYC,GACVA,EAAAA,WAAAA,aACAA,EAAAA,UAAAA,YACAA,EAAAA,OAAAA,SACAA,EAAAA,cAAAA,eACD,CALD,CAAYA,IAAAA,EAAyB,KAOrC,IAKqB6C,GAAe,WAiBlC,WAES3G,GAEsB,WADtB4G,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAiC,CAAEnJ,OAAQ,CAAC,GAC5CqD,EAAsB,iDAFtB,KAAAd,MAAAA,EACA,KAAA4G,OAAAA,EACA,KAAA9F,OAAAA,EApBT,KAAA+F,SAOI,CAAC,EAEL,KAAApV,MAAQiJ,EAAeoM,OACvB,KAAAC,YAAa,EAGb,KAAAC,WAAqB,GASnB5pB,KAAKwpB,OAAOnJ,OAAS,OAAH,OACb,CACDwJ,UAAW,CAAEC,KAAK,EAAOnjB,MAAM,GAC/B4f,SAAU,CAAE5oB,IAAK,KAEhB6rB,EAAOnJ,QAEZrgB,KAAKijB,QAAUjjB,KAAK0jB,OAAOT,QAC3BjjB,KAAK+pB,SAAW,IAAIhH,EAClB/iB,KACAud,EAAejb,KACftC,KAAKwpB,OACLxpB,KAAKijB,SAEPjjB,KAAKgqB,YAAc,IAAIrI,GACrB,kBAAM,EAAKsI,uBAAuB,GAClCjqB,KAAK0jB,OAAOwG,kBAEdlqB,KAAK+pB,SAASI,QAAQ,MAAM,WAC1B,EAAK9V,MAAQiJ,EAAe8M,OAC5B,EAAKJ,YAAYpU,QACjB,EAAKgU,WAAWtmB,SAAQ,SAAC+mB,GAAe,OAAKA,EAAU3a,MAAM,IAC7D,EAAKka,WAAa,EACpB,IACA5pB,KAAKsqB,UAAS,WACZ,EAAKN,YAAYpU,QACjB,EAAK8N,OAAOwF,IAAI,UAAW,SAAF,OAAW,EAAKtG,MAAK,YAAI,EAAKgB,aACvD,EAAKvP,MAAQiJ,EAAeoM,OAC5B,EAAKhG,OAAO6G,QAAQ,EACtB,IACAvqB,KAAKwqB,UAAS,SAACC,GACT,EAAKC,cAAgB,EAAKC,cAG9B,EAAKjH,OAAOwF,IAAI,UAAW,SAAF,OAAW,EAAKtG,OAAS6H,GAClD,EAAKpW,MAAQiJ,EAAesN,QAC5B,EAAKZ,YAAYa,kBACnB,IACA7qB,KAAK+pB,SAASI,QAAQ,WAAW,WAC1B,EAAKW,eAGV,EAAKpH,OAAOwF,IAAI,UAAW,WAAF,OAAa,EAAKtG,OAAS,EAAKmH,SAAS9G,SAClE,EAAK5O,MAAQiJ,EAAesN,QAC5B,EAAKZ,YAAYa,kBACnB,IACA7qB,KAAK+jB,IAAIxG,EAAewN,MAAO,CAAC,GAAG,SAACjI,EAAcllB,GAChD,EAAKumB,SAAS,EAAKL,gBAAgBlmB,GAAMklB,EAC3C,IAEA9iB,KAAKumB,SAAW,IAAIjC,EAAiBtkB,KACvC,CAsdC,OApdD,4BACA,SACE6L,GACsB,eAAtBoX,EAAU,UAAH,6CAAGjjB,KAAKijB,QAEf,GAAIjjB,KAAK2pB,WACP,KAAM,uGAEN,MAEI3pB,KAAKwpB,OADPnJ,OAAUwJ,EAAS,EAATA,UAAWtD,EAAQ,EAARA,SAEvBvmB,KAAKwqB,UAAS,SAACnsB,GAAQ,OAAKwN,GAAYA,EAAS,gBAAiBxN,EAAE,IACpE2B,KAAKsqB,UAAS,kBAAMze,GAAYA,EAAS,SAAS,IAElD,IAAMmf,EAAgD,CAAC,EACjD3K,EAAS,CACbwJ,UAAAA,EACAtD,SAAAA,EACA0E,iBACsD,QAApD,EAA8B,QAA9B,EAAAjrB,KAAKypB,SAASwB,wBAAgB,eAAE5nB,KAAI,SAACvE,GAAC,OAAKA,EAAE8gB,MAAM,WAAC,QAAI,IA4F9D,OAzFM5f,KAAK0jB,OAAOwH,cACdF,EAAmBG,aAAenrB,KAAK0jB,OAAOwH,aAGhDlrB,KAAKorB,kBAAkB,OAAD,OAAM,CAAE/K,OAAAA,GAAa2K,IAE3ChrB,KAAK2pB,YAAa,EAClB3pB,KAAKqrB,QAAQpI,GAEbjjB,KAAK+pB,SACFI,QACC,MACA,YAUK,MATemB,EAAqB,EAAvCL,iBAaA,GAHA,EAAKvH,OAAOwH,aACV,EAAKxH,OAAO6H,QAAQ,EAAK7H,OAAOwH,kBAEJ7iB,IAA1BijB,EAAJ,CAQE,IAJA,IAAME,EAAyB,EAAK/B,SAASwB,iBACvCQ,EAA4C,QAA9B,EAAsB,OAAtBD,QAAsB,IAAtBA,OAAsB,EAAtBA,EAAwBnqB,cAAM,QAAI,EAChDqqB,EAAsB,GAEnBtgB,EAAI,EAAGA,EAAIqgB,EAAargB,IAAK,CACpC,IAAMugB,EAAwBH,EAAuBpgB,GACrD,EAEIugB,EADF/L,OAAUiD,EAAK,EAALA,MAAOhF,EAAM,EAANA,OAAQ+N,EAAK,EAALA,MAAOhM,EAAM,EAANA,OAE5BiM,EACJP,GAAyBA,EAAsBlgB,GAEjD,IACEygB,GACAA,EAAqBhJ,QAAUA,GAC/BgJ,EAAqBhO,SAAWA,GAChCgO,EAAqBD,QAAUA,GAC/BC,EAAqBjM,SAAWA,EAehC,OARA,EAAKkM,mBACLjgB,GACEA,EACE,gBACA,IAAIrL,MACF,sEAVNkrB,EAAoB3pB,KAAK,OAAD,wBACnB4pB,GAAqB,CACxBI,GAAIF,EAAqBE,MAkB/B,OAHA,EAAKtC,SAASwB,iBAAmBS,OAEjC7f,GAAYA,EAAS,eAzCrBA,GAAYA,EAAS,aA4CzB,IAEDse,QAAQ,SAAS,SAAC7gB,GACjBuC,GACEA,EACE,gBACA,IAAIrL,MACFiL,KAAKmQ,UAAUxe,OAAO2O,OAAOzC,GAAOhH,KAAK,OAAS,UAI1D,IACC6nB,QAAQ,WAAW,WAClBte,GAAYA,EAAS,YAEvB,IAGG7L,IACT,GAAC,2BAED,WACE,OAAOA,KAAKumB,SAASlS,KACvB,GAAC,mBAEK,SACJyO,GACiC,IAAjCyB,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAA+B,CAAC,uHAEzB,gBAAMvkB,KAAK0P,KAChB,CACEhR,KAAM,WACNmkB,MAAO,QACPC,QAAAA,GAEFyB,EAAKtB,SAAWjjB,KAAKijB,SACtB,0FACF,qBAEK,WAC6B,IAAjCsB,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAA+B,CAAC,uHAEzB,gBAAMvkB,KAAK0P,KAChB,CACEhR,KAAM,WACNmkB,MAAO,WAET0B,GACD,0FACF,gBAuDD,SACE7lB,EACAkhB,EACA/T,GAEA,OAAO7L,KAAK+jB,IAAIrlB,EAAMkhB,EAAQ/T,EAChC,GAAC,kBAED,SACEiX,GACiC,WAAjCyB,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAA+B,CAAC,EAEhC,OAAO,IAAIzb,SAAQ,SAACI,aACZnH,EAAO,EAAKiqB,MAChBlJ,EAAQpkB,KACRokB,EACAyB,EAAKtB,SAAW,EAAKA,SAGnBlhB,EAAKuhB,aACPpa,EAAQ,gBAIS,cAAjB4Z,EAAQpkB,OACuB,QAA9B,EAAmB,QAAnB,EAAW,QAAX,IAAK8qB,cAAM,eAAEnJ,cAAM,eAAEwJ,iBAAS,eAAEC,MAEjC5gB,EAAQ,MAGVnH,EAAKooB,QAAQ,MAAM,kBAAMjhB,EAAQ,KAAK,IACtCnH,EAAKooB,QAAQ,WAAW,kBAAMjhB,EAAQ,YAAY,GACpD,GACF,GAAC,+BAED,SAAkB4Z,GAChB9iB,KAAK+pB,SAASkC,cAAcnJ,EAC9B,GAEA,yBASA,WAAkC,WAAtBG,EAAU,UAAH,6CAAGjjB,KAAKijB,QACzBjjB,KAAKqU,MAAQiJ,EAAe4O,QAC5B,IAAMC,EAAU,WACd,EAAKzI,OAAOwF,IAAI,UAAW,SAAF,OAAW,EAAKtG,QACzC,EAAKuB,SAAS5G,EAAe6O,MAAO,QAAS,EAAKxI,WACpD,EAMA,OAJA5jB,KAAKgqB,YAAYpU,QAEjB5V,KAAK+pB,SAASsC,UAEP,IAAIvjB,SAAQ,SAACI,GAClB,IAAMojB,EAAY,IAAIvJ,EAAK,EAAMxF,EAAegP,MAAO,CAAC,EAAGtJ,GAE3DqJ,EACGnC,QAAQ,MAAM,WACbgC,IACAjjB,EAAQ,KACV,IACCihB,QAAQ,WAAW,WAClBgC,IACAjjB,EAAQ,YACV,IACCihB,QAAQ,SAAS,WAChBjhB,EAAQ,QACV,IAEFojB,EAAU5c,OAEL,EAAK8c,YACRF,EAAUpI,QAAQ,KAAM,CAAC,EAE7B,GACF,GAEA,mBACA,SACErB,EACAC,GACsB,IAAtBG,EAAU,UAAH,6CAAGjjB,KAAKijB,QAEf,IAAKjjB,KAAK2pB,WACR,KAAM,kBAAN,OAAwB9G,EAAK,iBAAS7iB,KAAK4iB,MAAK,mEAElD,IAAIyH,EAAY,IAAItH,EAAK/iB,KAAM6iB,EAAOC,EAASG,GAQ/C,OAPIjjB,KAAKwsB,WACPnC,EAAU3a,QAEV2a,EAAU5G,eACVzjB,KAAK4pB,WAAW7nB,KAAKsoB,IAGhBA,CACT,GAEA,wBAQA,SAAWoC,EAAgB3J,EAAc4J,GACvC,OAAO5J,CACT,GAEA,uBACA,SAAUF,GACR,OAAO5iB,KAAK4iB,QAAUA,CACxB,GAEA,sBACA,WACE,OAAO5iB,KAAK+pB,SAASnsB,GACvB,GAEA,sBACA,SAASc,EAAcokB,EAAellB,GAAY,eAC1C+uB,EAAYjuB,EAAKkuB,oBACfR,EAA8B7O,EAAAA,MAAvBjU,EAAuBiU,EAAAA,MAAhBgP,EAAgBhP,EAAAA,MAATjb,EAASib,EAAAA,KAEtC,KAAI3f,GADqB,CAACwuB,EAAO9iB,EAAOijB,EAAOjqB,GAC7BqF,QAAQglB,IAAc,GAAK/uB,IAAQoC,KAAK4jB,YAA1D,CAGA,IAAIiJ,EAAiB7sB,KAAK8sB,WAAWH,EAAW7J,EAASllB,GACzD,GAAIklB,IAAY+J,EACd,KAAM,8EAGJ,CAAC,SAAU,SAAU,UAAU3O,SAASyO,GACZ,QAA9B,EAAA3sB,KAAKypB,SAASwB,wBAAgB,SAC1BrL,QAAO,SAAC/a,aACR,MACyB,OAAZ,QAAX,EAAAA,EAAK+a,cAAM,eAAEiD,SACK,QAAlB,EAAW,QAAX,EAAAhe,EAAK+a,cAAM,eAAEiD,aAAK,eAAE+J,uBAAwBD,CAEhD,IACCtpB,KAAI,SAACwB,GAAI,OAAKA,EAAKgH,SAASghB,EAAgBjvB,EAAI,IAE3B,QAAxB,EAAAoC,KAAKypB,SAASkD,UAAU,SACpB/M,QAAO,SAAC/a,mBACR,GACE,CAAC,YAAa,WAAY,oBAAoBqZ,SAASyO,GACvD,CACA,GAAI,OAAQ9nB,EAAM,CAChB,IAAMkoB,EAASloB,EAAKknB,GACdiB,EAAuB,QAAX,EAAAnoB,EAAK+a,cAAM,eAAEiD,MAC/B,OACEkK,IACW,QAAX,EAAAjK,EAAQmK,WAAG,eAAE/O,SAAS6O,MACP,MAAdC,IACU,OAATA,QAAS,IAATA,OAAS,EAATA,EAAWJ,wBACG,QAAZ,EAAA9J,EAAQ9G,YAAI,eAAEtd,KAAKkuB,sBAGzB,IAAMI,EAA+B,QAAnB,EAAY,QAAZ,EAAI,OAAJnoB,QAAI,IAAJA,OAAI,EAAJA,EAAM+a,cAAM,eAAEiD,aAAK,eAAE+J,oBACvC,MACgB,MAAdI,GACAA,KAA4B,QAAd,EAAO,OAAPlK,QAAO,IAAPA,OAAO,EAAPA,EAASD,aAAK,eAAE+J,qBAIlC,OAAO/nB,EAAKnG,KAAKkuB,sBAAwBD,CAE7C,IACCtpB,KAAI,SAACwB,GACJ,GAA8B,kBAAnBgoB,GAA+B,QAASA,EAAgB,CACjE,IAAMK,EAAkBL,EAAe7Q,KAGjCmR,EAAkB,CACtBtP,OAFAqP,EADMrP,OAIN+N,MAHAsB,EADctB,MAKdwB,iBAJAF,EADqBE,iBAMrBC,UALAH,EADuCxuB,KAOvC4uB,IAAK,CAAC,EACNC,IAAK,CAAC,EACNC,OARAN,EAD6CM,QAW/CX,EAAiB,OAAH,wBACTM,GACA,EAAKM,mBAAmBP,IAG/BroB,EAAKgH,SAASghB,EAAgBjvB,EAChC,IAEN,GAEA,uBACA,WACE,OAAOoC,KAAKqU,QAAUiJ,EAAeoM,MACvC,GAEA,uBACA,WACE,OAAO1pB,KAAKqU,QAAUiJ,EAAe8M,MACvC,GAEA,wBACA,WACE,OAAOpqB,KAAKqU,QAAUiJ,EAAeoQ,OACvC,GAEA,wBACA,WACE,OAAO1tB,KAAKqU,QAAUiJ,EAAe4O,OACvC,GAEA,6BACA,SAAgBtuB,GACd,MAAO,cAAP,OAAqBA,EACvB,GAEA,iBACA,SAAIc,EAAckhB,EAAgC/T,GAChD,IAAM8gB,EAAYjuB,EAAKkuB,oBAEjBe,EAAU,CACdjvB,KAAMiuB,EACN/M,OAAQA,EACR/T,SAAUA,GASZ,OANI7L,KAAKypB,SAASkD,GAChB3sB,KAAKypB,SAASkD,GAAW5qB,KAAK4rB,GAE9B3tB,KAAKypB,SAASkD,GAAa,CAACgB,GAGvB3tB,IACT,GAEA,kBACA,SAAKtB,EAAckhB,GACjB,IAAM+M,EAAYjuB,EAAKkuB,oBAQvB,OANA5sB,KAAKypB,SAASkD,GAAa3sB,KAAKypB,SAASkD,GAAW/M,QAAO,SAAC/a,SAC1D,SACW,QAAT,EAAAA,EAAKnG,YAAI,eAAEkuB,uBAAwBD,GACnCpD,EAAgBqE,QAAQ/oB,EAAK+a,OAAQA,GAEzC,IACO5f,IACT,GAEA,mCAmBQ,WACNA,KAAKgqB,YAAYa,kBACb7qB,KAAK0jB,OAAOmK,eACd7tB,KAAKqrB,SAET,GAEA,sBAKQ,SAASxf,GACf7L,KAAK+jB,IAAIxG,EAAe6O,MAAO,CAAC,EAAGvgB,EACrC,GAEA,sBAKQ,SAASA,GACf7L,KAAK+jB,IAAIxG,EAAejU,MAAO,CAAC,GAAG,SAACmhB,GAAc,OAAK5e,EAAS4e,EAAO,GACzE,GAEA,sBAKQ,WACN,OAAOzqB,KAAK0jB,OAAOmK,eAAiB7tB,KAAK8tB,WAC3C,GAEA,qBACQ,WAA8B,IAAtB7K,EAAU,UAAH,6CAAGjjB,KAAKijB,QACzBjjB,KAAK0qB,eAGT1qB,KAAK0jB,OAAOqK,gBAAgB/tB,KAAK4iB,OACjC5iB,KAAKqU,MAAQiJ,EAAeoQ,QAC5B1tB,KAAK+pB,SAASiE,OAAO/K,GACvB,GAEA,gCACQ,SAAmBH,GACzB,IAAMmL,EAAU,CACdX,IAAK,CAAC,EACNC,IAAK,CAAC,GAiBR,MAdqB,WAAjBzK,EAAQpkB,MAAsC,WAAjBokB,EAAQpkB,OACvCuvB,EAAQX,IAAMY,GACZpL,EAAQnE,QACRmE,EAAQ9O,SAIS,WAAjB8O,EAAQpkB,MAAsC,WAAjBokB,EAAQpkB,OACvCuvB,EAAQV,IAAMW,GACZpL,EAAQnE,QACRmE,EAAQqL,aAILF,CACT,IAAC,sBApFO,SACNG,EACAC,GAEA,GAAIjxB,OAAOiF,KAAK+rB,GAAM/sB,SAAWjE,OAAOiF,KAAKgsB,GAAMhtB,OACjD,OAAO,EAGT,IAAK,IAAMtE,KAAKqxB,EACd,GAAIA,EAAKrxB,KAAOsxB,EAAKtxB,GACnB,OAAO,EAIX,OAAO,CACT,KAAC,EAhiBiC,0SCzE9BoqB,GAAO,WAAO,EAECmH,GAAc,WAgDjC,WAAYC,EAAkBniB,GAA+B,uBA/C7D,KAAA8e,YAA6B,KAC7B,KAAAsD,SAA8B,GAC9B,KAAAD,SAAmB,GACnB,KAAAhmB,QAAsC8Y,EACtC,KAAAmI,OAAqC,CAAC,EACtC,KAAAvG,QAAkBxB,EAClB,KAAAgN,UAAiBC,EAAAA,aACjB,KAAAC,oBAA8B,IAC9B,KAAAC,oBAA6DvmB,EAC7D,KAAAwmB,oBAAqC,KACrC,KAAAjxB,IAAc,EAEd,KAAAkxB,OAAmB3H,GAInB,KAAA4H,KAAyB,KACzB,KAAAC,WAAyB,GACzB,KAAAC,WAAyB,IAAIhN,EAC7B,KAAAiN,qBAKI,CACFhgB,KAAM,GACNkd,MAAO,GACP9iB,MAAO,GACP6E,QAAS,IAEX,KAAAghB,uBAAiC,IACjC,KAAAC,YAAsB,EAiBpBpvB,KAAKuuB,SAAW,GAAH,OAAMA,EAAQ,YAAI/Q,EAAW6R,YAE/B,OAAPjjB,QAAO,IAAPA,OAAO,EAAPA,EAASod,UAAQxpB,KAAKwpB,OAASpd,EAAQod,SAChC,OAAPpd,QAAO,IAAPA,OAAO,EAAPA,EAAS7D,WAASvI,KAAKuI,QAAU,OAAH,wBAAQvI,KAAKuI,SAAY6D,EAAQ7D,WACxD,OAAP6D,QAAO,IAAPA,OAAO,EAAPA,EAAS6W,WAASjjB,KAAKijB,QAAU7W,EAAQ6W,UAClC,OAAP7W,QAAO,IAAPA,OAAO,EAAPA,EAAS0iB,UAAQ9uB,KAAK8uB,OAAS1iB,EAAQ0iB,SAChC,OAAP1iB,QAAO,IAAPA,OAAO,EAAPA,EAASqiB,aAAWzuB,KAAKyuB,UAAYriB,EAAQqiB,YACtC,OAAPriB,QAAO,IAAPA,OAAO,EAAPA,EAASuiB,uBACX3uB,KAAK2uB,oBAAsBviB,EAAQuiB,qBAErC,IAAMW,EAAiC,QAAf,EAAO,OAAPljB,QAAO,IAAPA,OAAO,EAAPA,EAASod,cAAM,eAAE8F,gBACrCA,IACFtvB,KAAKmvB,uBAAyBI,KAAKC,MAAM,IAAOF,IAElDtvB,KAAKkqB,kBAA0B,OAAP9d,QAAO,IAAPA,OAAO,EAAPA,EAAS8d,kBAC7B9d,EAAQ8d,iBACR,SAACpI,GACC,MAAO,CAAC,IAAM,IAAM,IAAM,KAAOA,EAAQ,IAAM,GACjD,EACJ9hB,KAAKyvB,QAAgB,OAAPrjB,QAAO,IAAPA,OAAO,EAAPA,EAASqjB,QACnBrjB,EAAQqjB,OACR,SAAC3M,EAAejX,GACd,OAAOA,EAASJ,KAAKmQ,UAAUkH,GACjC,EACJ9iB,KAAKuL,QAAgB,OAAPa,QAAO,IAAPA,OAAO,EAAPA,EAASb,QACnBa,EAAQb,OACRvL,KAAKivB,WAAW1jB,OAAO1G,KAAK7E,KAAKivB,YACrCjvB,KAAK0vB,eAAiB,IAAI/N,GAAM,kBAAW3I,GAAAA,OAAAA,OAAAA,EAAAA,IAAAA,MAAAA,SAAAA,IAAA,iEACzChZ,KAAK2vB,aACL3vB,KAAK4vB,UAAS,+CACf,GAAE5vB,KAAKkqB,iBACV,CA8VC,OA5VD,0BAGA,WAAO,WACDlqB,KAAK+uB,OAIT/uB,KAAK+uB,KAAO,IAAI/uB,KAAKyuB,UAAUzuB,KAAK6vB,eAAgB,GAAI,KAAM7vB,KAAKuI,SAE/DvI,KAAK+uB,OACP/uB,KAAK+uB,KAAKe,WAAa,cACvB9vB,KAAK+uB,KAAKgB,OAAS,kBAAM,EAAKC,aAAa,EAC3ChwB,KAAK+uB,KAAK1lB,QAAU,SAACC,GAAK,OAAK,EAAK2mB,aAAa3mB,EAAoB,EACrEtJ,KAAK+uB,KAAKmB,UAAY,SAACrN,GAAK,OAAK,EAAKsN,eAAetN,EAAM,EAC3D7iB,KAAK+uB,KAAKqB,QAAU,SAACvN,GAAK,OAAK,EAAKwN,aAAaxN,EAAM,GAE3D,GAEA,wBAMA,SAAWpE,EAAegM,GACpBzqB,KAAK+uB,OACP/uB,KAAK+uB,KAAKqB,QAAU,WAAa,EAC7B3R,EACFze,KAAK+uB,KAAK3C,MAAM3N,EAAY,OAANgM,QAAM,IAANA,EAAAA,EAAU,IAEhCzqB,KAAK+uB,KAAK3C,QAEZpsB,KAAK+uB,KAAO,KAEZ/uB,KAAK4uB,gBAAkB0B,cAActwB,KAAK4uB,gBAC1C5uB,KAAK0vB,eAAe9Z,QAExB,GAEA,yBAGA,WACE,OAAO5V,KAAKwuB,QACd,GAEA,2BAIA,SACExL,GAAwB,WAExB,OAAOA,EAAQ8I,cAAcnpB,MAAK,SAAC8K,GAIjC,OAH6B,IAAzB,EAAK+gB,SAASntB,QAChB,EAAKsuB,aAEAliB,CACT,GACF,GAEA,+BAGA,WAAiB,WACf,OAAO3E,QAAQynB,IACbvwB,KAAKwuB,SAASnrB,KAAI,SAAC2f,GAAO,OAAKA,EAAQ8I,aAAa,KACpDnpB,MAAK,SAACoJ,GAEN,OADA,EAAK4jB,aACE5jB,CACT,GACF,GAEA,iBAKA,SAAIykB,EAAcC,EAAazU,GAC7Bhc,KAAK8uB,OAAO0B,EAAMC,EAAKzU,EACzB,GAEA,6BAGA,WACE,OAAQhc,KAAK+uB,MAAQ/uB,KAAK+uB,KAAKvf,YAC7B,KAAK6N,EAAcqT,WACjB,OAAOjT,EAAiBkT,WAC1B,KAAKtT,EAAcnO,KACjB,OAAOuO,EAAiBmT,KAC1B,KAAKvT,EAAcwT,QACjB,OAAOpT,EAAiBqT,QAC1B,QACE,OAAOrT,EAAiBsT,OAE9B,GAEA,yBAGA,WACE,OAAO/wB,KAAKgxB,oBAAsBvT,EAAiBmT,IACrD,GAAC,qBAED,SACEhO,GAC+C,IAA/C4G,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAiC,CAAEnJ,OAAQ,CAAC,GAEvCrgB,KAAK6tB,eACR7tB,KAAK4vB,UAGP,IAAMqB,EAAO,IAAI1H,GAAgB,YAAD,OAAa3G,GAAS4G,EAAQxpB,MAE9D,OADAA,KAAKwuB,SAASzsB,KAAKkvB,GACZA,CACT,GAEA,kBAKA,SAAKjV,GAAqB,WAChB4G,EAA+B5G,EAA/B4G,MAAOC,EAAwB7G,EAAxB6G,MAAOC,EAAiB9G,EAAjB8G,QAASllB,EAAQoe,EAARpe,IAC3BiO,EAAW,WACb,EAAK4jB,OAAOzT,GAAM,SAAC5S,SACR,QAAT,IAAK2lB,YAAI,SAAErf,KAAKtG,EAClB,GACF,EAEA,GADApJ,KAAKkpB,IAAI,OAAQ,GAAF,OAAKtG,EAAK,YAAIC,EAAK,aAAKjlB,EAAG,KAAKklB,GAC3C9iB,KAAK6tB,cACP,GAAI,CAAC,YAAa,WAAY,oBAAoB3P,SAAS2E,IAEzD,GADoB7iB,KAAKkxB,UAAUrlB,EAAf7L,GAElB,MAAO,oBAGT6L,SAGF7L,KAAKgvB,WAAWjtB,KAAK8J,EAEzB,GAEA,qBAKA,SAAQyP,GACNtb,KAAKkrB,YAAc5P,EAEnBtb,KAAKwuB,SAASlrB,SAAQ,SAAC0f,GACrB1H,GAAS0H,EAAQoI,kBAAkB,CAAED,aAAc7P,IAE/C0H,EAAQ2G,YAAc3G,EAAQ8K,aAChC9K,EAAQgJ,MAAMzO,EAAe4N,aAAc,CAAEA,aAAc7P,GAE/D,GACF,GAEA,sBAKA,WACE,IAAI6V,EAASnxB,KAAKpC,IAAM,EAOxB,OANIuzB,IAAWnxB,KAAKpC,IAClBoC,KAAKpC,IAAM,EAEXoC,KAAKpC,IAAMuzB,EAGNnxB,KAAKpC,IAAIgE,UAClB,GAEA,6BAKA,SAAgBghB,GACd,IAAIwO,EAAapxB,KAAKwuB,SAASxH,MAC7B,SAAChpB,GAAC,OAAKA,EAAE4kB,QAAUA,IAAU5kB,EAAE8vB,aAAe9vB,EAAE8sB,aAAa,IAE3DsG,IACFpxB,KAAKkpB,IAAI,YAAa,4BAAF,OAA8BtG,EAAK,MACvDwO,EAAWtF,cAEf,GAEA,qBAOA,SAAQ9I,GACNhjB,KAAKwuB,SAAWxuB,KAAKwuB,SAAS5O,QAC5B,SAAC5hB,GAAkB,OAAKA,EAAE4lB,aAAeZ,EAAQY,UAAU,GAE/D,GAEA,0BAKQ,WACN,OAAO5jB,KAAKqxB,cACVrxB,KAAKuuB,SACLnxB,OAAOyC,OAAO,CAAC,EAAGG,KAAKwpB,OAAQ,CAAE8H,If5UZ,Ue8UzB,GAEA,4BACQ,SAAeC,GAAyB,WAC9CvxB,KAAKuL,OAAOgmB,EAAWvV,MAAM,SAACyU,GAC5B,IAAM7N,EAA+B6N,EAA/B7N,MAAOC,EAAwB4N,EAAxB5N,MAAOC,EAAiB2N,EAAjB3N,QAASllB,EAAQ6yB,EAAR7yB,KAG1BA,GAAOA,IAAQ,EAAKixB,qBACrBhM,KAAiB,OAAPC,QAAO,IAAPA,OAAO,EAAPA,EAASpkB,SAEnB,EAAKmwB,oBAAsB,MAG7B,EAAK3F,IACH,UAAS,UACNpG,EAAQrV,QAAU,GAAE,YAAImV,EAAK,YAAIC,EAAK,YACtCjlB,GAAO,IAAMA,EAAM,KAAQ,IAE9BklB,GAEF,EAAK0L,SACF5O,QAAO,SAACoD,GAAwB,OAAKA,EAAQwO,UAAU5O,EAAM,IAC7Dtf,SAAQ,SAAC0f,GAAwB,OAChCA,EAAQmB,SAAStB,EAAOC,EAASllB,EAAI,IAEzC,EAAKsxB,qBAAqB/gB,QAAQ7K,SAAQ,SAACuI,GAAQ,OAAKA,EAAS4kB,EAAI,GACvE,GACF,GAEA,yBACQ,WAAW,WACjBzwB,KAAKkpB,IAAI,YAAa,gBAAF,OAAkBlpB,KAAK6vB,iBAC3C7vB,KAAKyxB,mBACLzxB,KAAK0vB,eAAe9Z,QACpB5V,KAAK4uB,gBAAkB0B,cAActwB,KAAK4uB,gBAC1C5uB,KAAK4uB,eAAiB8C,aACpB,kBAAM,EAAKC,gBAAgB,GAC3B3xB,KAAK2uB,qBAEP3uB,KAAKkvB,qBAAqBhgB,KAAK5L,SAAQ,SAACuI,GAAQ,OAAKA,GAAU,GACjE,GAEA,0BACQ,SAAagX,GACnB7iB,KAAKkpB,IAAI,YAAa,QAASrG,GAC/B7iB,KAAK4xB,oBACL5xB,KAAK4uB,gBAAkB0B,cAActwB,KAAK4uB,gBAC1C5uB,KAAK0vB,eAAe7E,kBACpB7qB,KAAKkvB,qBAAqB9C,MAAM9oB,SAAQ,SAACuI,GAAQ,OAAKA,EAASgX,EAAM,GACvE,GAEA,0BACQ,SAAavZ,GACnBtJ,KAAKkpB,IAAI,YAAa5f,EAAM6E,SAC5BnO,KAAK4xB,oBACL5xB,KAAKkvB,qBAAqB5lB,MAAMhG,SAAQ,SAACuI,GAAQ,OAAKA,EAASvC,EAAM,GACvE,GAEA,+BACQ,WACNtJ,KAAKwuB,SAASlrB,SAAQ,SAAC0f,GAAwB,OAC7CA,EAAQmB,SAAS5G,EAAejU,MAAM,GAE1C,GAEA,2BACQ,SACN+C,EACAmd,GAEA,GAAmC,IAA/BpsB,OAAOiF,KAAKmnB,GAAQnoB,OACtB,OAAOgL,EAET,IAAMwlB,EAASxlB,EAAI+R,MAAM,MAAQ,IAAM,IACjCgC,EAAQ,IAAIzV,gBAAgB6e,GAElC,MAAO,GAAP,OAAUnd,GAAG,OAAGwlB,GAAM,OAAGzR,EAC3B,GAEA,8BACQ,WACFpgB,KAAK6tB,eAAiB7tB,KAAKgvB,WAAW3tB,OAAS,IACjDrB,KAAKgvB,WAAW1rB,SAAQ,SAACuI,GAAQ,OAAKA,GAAU,IAChD7L,KAAKgvB,WAAa,GAEtB,GACA,4BACQ,iBACN,GAAKhvB,KAAK6tB,cAAV,CAGA,GAAI7tB,KAAK6uB,oBAOP,OANA7uB,KAAK6uB,oBAAsB,KAC3B7uB,KAAKkpB,IACH,YACA,iEAEO,QAAT,EAAAlpB,KAAK+uB,YAAI,SAAE3C,Mf5ac,Ie4aS,qBAGpCpsB,KAAK6uB,oBAAsB7uB,KAAK6jB,WAChC7jB,KAAK+B,KAAK,CACR6gB,MAAO,UACPC,MAAO,YACPC,QAAS,CAAC,EACVllB,IAAKoC,KAAK6uB,sBAEZ7uB,KAAKurB,QAAQvrB,KAAKkrB,aACpB,GAEA,uBACQ,SACNrf,GAC4D,WAA5DsjB,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAiCnvB,KAAKmvB,uBAEtC,OAAO,WACL,QAAI,EAAKC,aAETvjB,IAEIsjB,EAAyB,IAC3B,EAAKC,YAAa,EAElBpN,YAAW,WACT,EAAKoN,YAAa,CACpB,GAAGD,KAGE,EACT,CACF,KAAC,EA9agC,GCvCtB2C,GAAa,8BAGxB,WAAY3jB,GAAe,MAEC,OAFD,WACzB,cAAMA,IAHE4jB,kBAAmB,EAI3B,EAAKlqB,KAAO,eAAc,CAC5B,CAAC,YANuB,CAMvB,EAN+BrH,QAS5B,SAAUwxB,GAAe1oB,GAC7B,MAAwB,kBAAVA,GAAgC,OAAVA,GAAkB,qBAAsBA,CAC9E,CAEO,IAAM2oB,GAAgB,8BAG3B,WAAY9jB,EAAiBV,GAAc,MAGrB,OAHqB,WACzC,cAAMU,IACDtG,KAAO,kBACZ,EAAK4F,OAASA,EAAM,CACtB,CAQC,OARA,yBAED,WACE,MAAO,CACL5F,KAAM7H,KAAK6H,KACXsG,QAASnO,KAAKmO,QACdV,OAAQzN,KAAKyN,OAEjB,KAAC,EAf0B,CAAQqkB,IAkBxBI,GAAoB,8BAG/B,WAAY/jB,EAAiBgkB,GAAsB,MAGf,OAHe,WACjD,cAAMhkB,IACDtG,KAAO,sBACZ,EAAKsqB,cAAgBA,EAAa,CACpC,CAAC,YAP8B,CAAQL,2SC7B5BlZ,GAAe,SAACC,GAC3B,IAAIC,EAQJ,OANEA,EADED,IAEwB,qBAAVhS,MACP,sCAAUkS,EAAI,yBAAJA,EAAI,uBAAIC,QAAAA,OAAAA,OAAAA,EAAAA,IAAAA,MAAAA,SAAAA,IAAA,uEAAQ,OAAR,SAAc,2CAAqB,OAAlC,OAAkC,UAAlC,UAAoCnS,MAAK,QAAIkS,GAAK,oFAErElS,OAEJ,kBAAaiS,EAAM,uBAAS,CACrC,ySCGMsZ,GAAmB,SAAClkB,GAAQ,OAChCA,EAAIuiB,KAAOviB,EAAIC,SAAWD,EAAImkB,mBAAqBnkB,EAAI5E,OAASmC,KAAKmQ,UAAU1N,EAAI,EAE/EokB,GAAc,SAAOhpB,EAAgBP,GAA8B,OAAIiQ,QAAAA,OAAAA,OAAAA,EAAAA,IAAAA,MAAAA,SAAAA,IAAA,uEAC/D,OAD+D,SDJnCA,QAAAA,OAAAA,OAAAA,EAAAA,IAAAA,MAAAA,SAAAA,IAAA,oEAChB,qBAAbzL,SAAwB,gBACzB,OADyB,SACnB,2CAAqB,uCAAEA,UAAQ,gCAGxCA,UAAQ,2CCAoB,OAA7BglB,EAAM,EAAH,KAELjpB,aAAiBipB,EACnBjpB,EAAMkC,OAAO7I,MAAK,SAACuL,GACjBnF,EAAO,IAAIkpB,GAAgBG,GAAiBlkB,GAAM5E,EAAMmE,QAAU,KACpE,IAEA1E,EAAO,IAAImpB,GAAoBE,GAAiB9oB,GAAQA,IACzD,0CACF,EAEKkpB,GAAoB,SACxBjmB,EACAH,EACAqmB,EACA7pB,GAEA,IAAM4gB,EAA+B,CAAEjd,OAAAA,EAAQhE,SAAgB,OAAP6D,QAAO,IAAPA,OAAO,EAAPA,EAAS7D,UAAW,CAAC,GAE7E,MAAe,QAAXgE,EACKid,GAGTA,EAAOjhB,QAAU,OAAH,QAAK,eAAgB,oBAA8B,OAAP6D,QAAO,IAAPA,OAAO,EAAPA,EAAS7D,SACnEihB,EAAO5gB,KAAO6C,KAAKmQ,UAAUhT,GACtB,OAAP,wBAAY4gB,GAAWiJ,GACzB,EAEA,SAAeC,GACbC,EACApmB,EACAF,EACAD,EACAqmB,EACA7pB,iJAEO,IAAIE,SAAQ,SAACI,EAASH,GAC3B4pB,EAAQtmB,EAAKmmB,GAAkBjmB,EAAQH,EAASqmB,EAAY7pB,IACzDjG,MAAK,SAACyG,GACL,IAAKA,EAAOsE,GAAI,MAAMtE,EACtB,OAAW,OAAPgD,QAAO,IAAPA,OAAO,EAAPA,EAASwmB,eAAsBxpB,EAC5BA,EAAOoC,MAChB,IACC7I,MAAK,SAACqZ,GAAI,OAAK9S,EAAQ8S,EAAK,IAC5BH,OAAM,SAACvS,GAAK,OAAKgpB,GAAYhpB,EAAOP,EAAO,GAChD,KAAE,2CAGE,SAAgB+B,GACpB6nB,EACAtmB,EACAD,EACAqmB,iJAEOC,GAAeC,EAAS,MAAOtmB,EAAKD,EAASqmB,IAAW,2CAG3D,SAAgBI,GACpBF,EACAtmB,EACAzD,EACAwD,EACAqmB,iJAEOC,GAAeC,EAAS,OAAQtmB,EAAKD,EAASqmB,EAAY7pB,IAAK,2CAGlE,SAAgBkqB,GACpBH,EACAtmB,EACAzD,EACAwD,EACAqmB,iJAEOC,GAAeC,EAAS,MAAOtmB,EAAKD,EAASqmB,EAAY7pB,IAAK,2CAGjE,SAAgBmqB,GACpBJ,EACAtmB,EACAzD,EACAwD,EACAqmB,iJAEOC,GAAeC,EAAS,SAAUtmB,EAAKD,EAASqmB,EAAY7pB,IAAK,sVC5FpEoqB,GAAyB,CAC7BC,MAAO,IACPtQ,OAAQ,EACRuQ,OAAQ,CACNpU,OAAQ,OACRqU,MAAO,QAILC,GAAoC,CACxCC,aAAc,OACdC,YAAa,2BACbC,QAAQ,GAGWC,GAAc,WAMjC,WACEnnB,GAGa,IAFb9D,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAqC,CAAC,EACtCkrB,EAAiB,uCACjB5sB,EAAa,iDAEb7G,KAAKqM,IAAMA,EACXrM,KAAKuI,QAAUA,EACfvI,KAAKyzB,SAAWA,EAChBzzB,KAAK6G,MAAQ+R,GAAa/R,EAC5B,CAkjBC,OAhjBD,iCAOc,SACZ0F,EACAmnB,EACAC,EAWAC,0IAkCc,gBArBNxnB,EAAU,OAAH,wBAAQgnB,IAAyBQ,GACxCrrB,EAAO,+BACRvI,KAAKuI,SACO,SAAXgE,GAAqB,CAAE,WAAYnK,OAAOgK,EAAQmnB,UAGpC,qBAATpsB,MAAwBwsB,aAAoBxsB,OACrDyB,EAAO,IAAI6B,UACNjC,OAAO,eAAgB4D,EAAQinB,cACpCzqB,EAAKJ,OAAO,GAAImrB,IACa,qBAAblpB,UAA4BkpB,aAAoBlpB,UAChE7B,EAAO+qB,GACFnrB,OAAO,eAAgB4D,EAAQinB,eAEpCzqB,EAAO+qB,EACPprB,EAAQ,iBAAmB,WAAH,OAAc6D,EAAQinB,cAC9C9qB,EAAQ,gBAAkB6D,EAAQknB,aAG9BO,EAAY7zB,KAAK8zB,oBAAoBJ,GACrCK,EAAQ/zB,KAAKg0B,cAAcH,GAAU,SACzB7zB,KAAK6G,MAAM,GAAD,OAAI7G,KAAKqM,IAAG,mBAAW0nB,GAAS,CAC1DxnB,OAAAA,EACA3D,KAAMA,EACNL,QAAAA,IACA,OAJO,KAAH6P,EAAM,EAAH,MAMD1K,GAAI,CAAF,yCACD,CACLsO,KAAM,CAAE0X,KAAMG,GACdvqB,MAAO,OACR,QAEa,OAFb,UAEmB8O,EAAI5M,OAAM,QAAnB,OAALlC,EAAQ,EAAH,uBACJ,CAAE0S,KAAM,KAAM1S,MAAAA,IAAO,8DAG1B0oB,GAAe,EAAD,IAAS,CAAF,yCAChB,CAAEhW,KAAM,KAAM1S,MAAK,OAAE,+EAOlC,oBAMM,SACJoqB,EACAC,EAWAC,iJAWO5zB,KAAKi0B,eAAe,OAAQP,EAAMC,EAAUC,IAAY,kDAGjE,oBAMM,SACJF,EACAC,EAWAC,iJAWO5zB,KAAKi0B,eAAe,MAAOP,EAAMC,EAAUC,IAAY,kDAGhE,kBAMM,SACJM,EACAC,8HAYe,yBAAMtB,GACjB7yB,KAAK6G,MAAK,UACP7G,KAAKqM,IAAG,gBACX,CAAEonB,SAAUzzB,KAAKyzB,SAAUW,UAAWF,EAAUG,eAAgBF,GAChE,CAAE5rB,QAASvI,KAAKuI,UACjB,OALS,OAAJyT,EAAO,EAAH,uBAMH,CAAEA,KAAAA,EAAM1S,MAAO,OAAM,oCAExB0oB,GAAe,EAAD,IAAS,CAAF,yCAChB,CAAEhW,KAAM,KAAM1S,MAAK,OAAE,8EAOlC,kBAMM,SACJ4qB,EACAC,8HAYe,yBAAMtB,GACjB7yB,KAAK6G,MAAK,UACP7G,KAAKqM,IAAG,gBACX,CAAEonB,SAAUzzB,KAAKyzB,SAAUW,UAAWF,EAAUG,eAAgBF,GAChE,CAAE5rB,QAASvI,KAAKuI,UACjB,OALS,OAAJyT,EAAO,EAAH,uBAMH,CAAEA,KAAM,CAAE0X,KAAM1X,EAAKsY,KAAOhrB,MAAO,OAAM,oCAE5C0oB,GAAe,EAAD,IAAS,CAAF,yCAChB,CAAEhW,KAAM,KAAM1S,MAAK,OAAE,8EAOlC,6BAQM,SACJoqB,EACAa,EACAnoB,oIAca,gBAFP2nB,EAAQ/zB,KAAKg0B,cAAcN,GAAK,SAEnBb,GACf7yB,KAAK6G,MAAK,UACP7G,KAAKqM,IAAG,wBAAgB0nB,GAAO32B,OAAAA,OAAAA,CAChCm3B,UAAAA,IAAsB,OAAPnoB,QAAO,IAAPA,OAAO,EAAPA,EAASooB,WAAY,CAAEA,UAAWpoB,EAAQooB,WAAc,CAAC,GAC1E,CAAEjsB,QAASvI,KAAKuI,UACjB,OAKmB,OAVhByT,EAAO,EAAH,KAMFyY,GAA4B,OAAProB,QAAO,IAAPA,OAAO,EAAPA,EAASsoB,UAAQ,qBACN,IAArBtoB,EAAQsoB,SAAoB,GAAKtoB,EAAQsoB,UACtD,GACEC,EAAYC,UAAU,GAAD,OAAI50B,KAAKqM,KAAG,OAAG2P,EAAK6Y,WAAS,OAAGJ,IAC3DzY,EAAO,CAAE2Y,UAAAA,GAAW,kBACb,CAAE3Y,KAAAA,EAAM1S,MAAO,OAAM,sCAExB0oB,GAAe,EAAD,IAAS,CAAF,yCAChB,CAAEhW,KAAM,KAAM1S,MAAK,OAAE,+EAOlC,8BAOM,SACJwrB,EACAP,EACAnoB,uIAYe,yBAAMymB,GACjB7yB,KAAK6G,MAAK,UACP7G,KAAKqM,IAAG,wBAAgBrM,KAAKyzB,UAChC,CAAEc,UAAAA,EAAWO,MAAAA,GACb,CAAEvsB,QAASvI,KAAKuI,UACjB,OAIK,OATAyT,EAAO,EAAH,KAOJyY,GAA4B,OAAProB,QAAO,IAAPA,OAAO,EAAPA,EAASsoB,UAAQ,qBACN,IAArBtoB,EAAQsoB,SAAoB,GAAKtoB,EAAQsoB,UACtD,GAAE,kBACC,CACL1Y,KAAMA,EAAK3Y,KAAI,SAAC0xB,GAA4B,OAAK33B,OAAAA,OAAAA,OAAAA,OAAAA,CAAAA,EAC5C23B,GAAK,CACRJ,UAAWI,EAAMF,UACbD,UAAU,GAAD,OAAI,EAAKvoB,KAAG,OAAG0oB,EAAMF,WAAS,OAAGJ,IAC1C,MAAI,IAEVnrB,MAAO,OACR,oCAEG0oB,GAAe,EAAD,IAAS,CAAF,yCAChB,CAAEhW,KAAM,KAAM1S,MAAK,OAAE,8EAOlC,sBAMM,SACJoqB,EACAtnB,0IAkBc,OAPR4oB,EAAoD,qBAAhB,OAAP5oB,QAAO,IAAPA,OAAO,EAAPA,EAASooB,WACtCS,EAAaD,EAAsB,6BAA+B,SAClEE,EAAsBl1B,KAAKm1B,4BAAkC,OAAP/oB,QAAO,IAAPA,OAAO,EAAPA,EAASooB,YAAa,CAAC,GAC7EY,EAAcF,EAAsB,IAAH,OAAOA,GAAwB,GAAE,SAGhEnB,EAAQ/zB,KAAKg0B,cAAcN,GAAK,SACpB5oB,GAAI9K,KAAK6G,MAAO,GAAF,OAAK7G,KAAKqM,IAAG,YAAI4oB,EAAU,YAAIlB,GAAK,OAAGqB,GAAe,CACpF7sB,QAASvI,KAAKuI,QACdqqB,eAAe,IACf,OACW,OAJPxa,EAAM,EAAH,eAIUA,EAAIlR,OAAM,QAAnB,OAAJ8U,EAAO,EAAH,uBACH,CAAEA,KAAAA,EAAM1S,MAAO,OAAM,sCAExB0oB,GAAe,EAAD,IAAS,CAAF,yCAChB,CAAEhW,KAAM,KAAM1S,MAAK,OAAE,+EAOlC,0BAQA,SACEoqB,EACAtnB,GAEA,IAAM2nB,EAAQ/zB,KAAKg0B,cAAcN,GAC3B2B,EAAe,GAEfZ,GAA4B,OAAProB,QAAO,IAAPA,OAAO,EAAPA,EAASsoB,UAAQ,oBACP,IAArBtoB,EAAQsoB,SAAoB,GAAKtoB,EAAQsoB,UACrD,GAEuB,KAAvBD,GACFY,EAAatzB,KAAK0yB,GAGpB,IACMQ,EADoD,qBAAhB,OAAP7oB,QAAO,IAAPA,OAAO,EAAPA,EAASooB,WACH,eAAiB,SACpDU,EAAsBl1B,KAAKm1B,4BAAkC,OAAP/oB,QAAO,IAAPA,OAAO,EAAPA,EAASooB,YAAa,CAAC,GAEvD,KAAxBU,GACFG,EAAatzB,KAAKmzB,GAGpB,IAAIE,EAAcC,EAAa/yB,KAAK,KAKpC,MAJoB,KAAhB8yB,IACFA,EAAc,IAAH,OAAOA,IAGb,CACLpZ,KAAM,CAAEsZ,UAAWV,UAAU,GAAD,OAAI50B,KAAKqM,IAAG,YAAI4oB,EAAU,mBAAWlB,GAAK,OAAGqB,KAE7E,GAEA,oBAKM,SACJN,8HAYe,yBAAM/B,GACjB/yB,KAAK6G,MAAK,UACP7G,KAAKqM,IAAG,mBAAWrM,KAAKyzB,UAC3B,CAAE8B,SAAUT,GACZ,CAAEvsB,QAASvI,KAAKuI,UACjB,OALS,OAAJyT,EAAO,EAAH,uBAMH,CAAEA,KAAAA,EAAM1S,MAAO,OAAM,oCAExB0oB,GAAe,EAAD,IAAS,CAAF,yCAChB,CAAEhW,KAAM,KAAM1S,MAAK,OAAE,8EAsElC,kBAIM,SACJoqB,EACAtnB,EACAqmB,gIAae,gBADP7pB,EAAO,OAAH,sCAAQoqB,IAA2B5mB,GAAO,CAAEylB,OAAQ6B,GAAQ,KAAI,SACvDb,GACjB7yB,KAAK6G,MAAK,UACP7G,KAAKqM,IAAG,wBAAgBrM,KAAKyzB,UAChC7qB,EACA,CAAEL,QAASvI,KAAKuI,SAChBkqB,GACD,OANS,OAAJzW,EAAO,EAAH,uBAOH,CAAEA,KAAAA,EAAM1S,MAAO,OAAM,oCAExB0oB,GAAe,EAAD,IAAS,CAAF,yCAChB,CAAEhW,KAAM,KAAM1S,MAAK,OAAE,8EAKjC,2BAEO,SAAcoqB,GACpB,MAAO,GAAP,OAAU1zB,KAAKyzB,SAAQ,YAAIC,EAC7B,GAAC,iCAEO,SAAoBA,GAC1B,OAAOA,EAAKhyB,QAAQ,WAAY,IAAIA,QAAQ,OAAQ,IACtD,GAAC,wCAEO,SAA2B8yB,GACjC,IAAMhL,EAAS,GAqBf,OApBIgL,EAAUgB,OACZhM,EAAOznB,KAAK,SAAD,OAAUyyB,EAAUgB,QAG7BhB,EAAUiB,QACZjM,EAAOznB,KAAK,UAAD,OAAWyyB,EAAUiB,SAG9BjB,EAAUkB,QACZlM,EAAOznB,KAAK,UAAD,OAAWyyB,EAAUkB,SAG9BlB,EAAU7U,QACZ6J,EAAOznB,KAAK,UAAD,OAAWyyB,EAAU7U,SAG9B6U,EAAUmB,SACZnM,EAAOznB,KAAK,WAAD,OAAYyyB,EAAUmB,UAG5BnM,EAAOlnB,KAAK,IACrB,KAAC,EAlkBgC,GCzBtB+e,GAAkB,CAAE,gBAAiB,cAAF,OCAzB,iTCKFuU,GAAgB,WAKnC,WAAYvpB,GAAmE,IAAtD9D,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAqC,CAAC,EAAG1B,EAAa,iDAC7E7G,KAAKqM,IAAMA,EACXrM,KAAKuI,QAAU,OAAH,wBAAQ8Y,IAAoB9Y,GACxCvI,KAAK6G,MAAQ+R,GAAa/R,EAC5B,CAoMC,OAlMD,8BAGM,sIAWW,yBAAMiE,GAAI9K,KAAK6G,MAAO,GAAF,OAAK7G,KAAKqM,IAAG,WAAW,CAAE9D,QAASvI,KAAKuI,UAAU,OAAzE,OAAJyT,EAAO,EAAH,uBACH,CAAEA,KAAAA,EAAM1S,MAAO,OAAM,oCAExB0oB,GAAe,EAAD,IAAS,CAAF,yCAChB,CAAEhW,KAAM,KAAM1S,MAAK,OAAE,8EAOlC,uBAKM,SACJyiB,8HAYe,yBAAMjhB,GAAI9K,KAAK6G,MAAO,GAAF,OAAK7G,KAAKqM,IAAG,mBAAW0f,GAAM,CAAExjB,QAASvI,KAAKuI,UAAU,OAA/E,OAAJyT,EAAO,EAAH,uBACH,CAAEA,KAAAA,EAAM1S,MAAO,OAAM,oCAExB0oB,GAAe,EAAD,IAAS,CAAF,yCAChB,CAAEhW,KAAM,KAAM1S,MAAK,OAAE,8EAOlC,0BAOM,SACJyiB,GACgD,IAAhD3f,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAA+B,CAAEypB,QAAQ,8HAY1B,yBAAMhD,GACjB7yB,KAAK6G,MAAK,UACP7G,KAAKqM,IAAG,WACX,CAAE0f,GAAAA,EAAIlkB,KAAMkkB,EAAI8J,OAAQzpB,EAAQypB,QAChC,CAAEttB,QAASvI,KAAKuI,UACjB,OALS,OAAJyT,EAAO,EAAH,uBAMH,CAAEA,KAAAA,EAAM1S,MAAO,OAAM,oCAExB0oB,GAAe,EAAD,IAAS,CAAF,yCAChB,CAAEhW,KAAM,KAAM1S,MAAK,OAAE,8EAOlC,0BAMM,SACJyiB,EACA3f,8HAYe,yBAAM0mB,GACjB9yB,KAAK6G,MAAK,UACP7G,KAAKqM,IAAG,mBAAW0f,GACtB,CAAEA,GAAAA,EAAIlkB,KAAMkkB,EAAI8J,OAAQzpB,EAAQypB,QAChC,CAAEttB,QAASvI,KAAKuI,UACjB,OALS,OAAJyT,EAAO,EAAH,uBAMH,CAAEA,KAAAA,EAAM1S,MAAO,OAAM,oCAExB0oB,GAAe,EAAD,IAAS,CAAF,yCAChB,CAAEhW,KAAM,KAAM1S,MAAK,OAAE,8EAOlC,yBAKM,SACJyiB,8HAYe,yBAAM8G,GACjB7yB,KAAK6G,MAAK,UACP7G,KAAKqM,IAAG,mBAAW0f,EAAE,UACxB,CAAC,EACD,CAAExjB,QAASvI,KAAKuI,UACjB,OALS,OAAJyT,EAAO,EAAH,uBAMH,CAAEA,KAAAA,EAAM1S,MAAO,OAAM,oCAExB0oB,GAAe,EAAD,IAAS,CAAF,yCAChB,CAAEhW,KAAM,KAAM1S,MAAK,OAAE,8EAOlC,0BAMM,SACJyiB,8HAYe,yBAAMgH,GACjB/yB,KAAK6G,MAAK,UACP7G,KAAKqM,IAAG,mBAAW0f,GACtB,CAAC,EACD,CAAExjB,QAASvI,KAAKuI,UACjB,OALS,OAAJyT,EAAO,EAAH,uBAMH,CAAEA,KAAAA,EAAM1S,MAAO,OAAM,oCAExB0oB,GAAe,EAAD,IAAS,CAAF,yCAChB,CAAEhW,KAAM,KAAM1S,MAAK,OAAE,gFAKjC,EA7MkC,GCFxBwsB,GAAc,8BACzB,WAAYzpB,GAAmE,IAAtD9D,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAqC,CAAC,EAAG1B,EAAa,oEACvEwF,EAAK9D,EAAS1B,EACtB,CASC,OAPD,uBAKA,SAAKklB,GACH,OAAO,IAAIyH,GAAexzB,KAAKqM,IAAKrM,KAAKuI,QAASwjB,EAAI/rB,KAAK6G,MAC7D,KAAC,EAZwB,CAAQ+uB,ICFtBvU,GAAkB,CAAE,gBAAiB,eAAF,OCFzB,iTCIVzI,GAAe,SAACC,GAC3B,IAAIC,EAQJ,OANEA,EADED,IAEwB,qBAAVhS,MACPkX,IAEAlX,OAEJ,kBAAaiS,EAAM,uBAAS,CACrC,EAUaid,GAAgB,SAC3BC,EACAC,EACApd,GAEA,IAAMhS,EAAQ+R,GAAaC,GACrBqd,EAbiB,qBAAZ5tB,QACF6tB,EAAAA,QAGF7tB,QAWP,OAAO,SAAO6D,EAAOmC,GAAI,OAAI0K,QAAAA,OAAAA,OAAAA,EAAAA,IAAAA,MAAAA,SAAAA,IAAA,2EACN,OADM,SACAid,IAAgB,OAAC,GAAD,KAAvBG,EAAAA,EAAAA,KAAA,KAAwB,OAAxB,MAAwB,0GAAIJ,EAAW,QAS1D,OATK9K,EAAc,EAAH,IACb3iB,EAAU,IAAI2tB,EAAuB,OAAJ5nB,QAAI,IAAJA,OAAI,EAAJA,EAAM/F,UAE9BqD,IAAI,WACfrD,EAAQ0B,IAAI,SAAU+rB,GAGnBztB,EAAQqD,IAAI,kBACfrD,EAAQ0B,IAAI,gBAAiB,UAAF,OAAYihB,IACxC,kBAEMrkB,EAAMsF,EAAO,OAAF,wBAAOmC,GAAI,CAAE/F,QAAAA,MAAU,2CAC1C,CACH,6SC/BO,IAAM8tB,GAAY,WAAH,MAA6B,qBAAbC,QAAwB,EAExDC,GAAyB,CAC7BC,QAAQ,EACRhkB,UAAU,GAMCikB,GAAuB,WAClC,IAAKJ,KACH,OAAO,EAGT,IACE,GAAuC,kBAA5BpmB,WAAWymB,aACpB,OAAO,EAET,MAAOr4B,GAEP,OAAO,EAGT,GAAIk4B,GAAuBC,OACzB,OAAOD,GAAuB/jB,SAGhC,IAAMmkB,EAAY,QAAH,OAAWpH,KAAKqH,UAAQ,OAAGrH,KAAKqH,UAE/C,IACE3mB,WAAWymB,aAAaG,QAAQF,EAAWA,GAC3C1mB,WAAWymB,aAAaI,WAAWH,GAEnCJ,GAAuBC,QAAS,EAChCD,GAAuB/jB,UAAW,EAClC,MAAOnU,GAIPk4B,GAAuBC,QAAS,EAChCD,GAAuB/jB,UAAW,EAGpC,OAAO+jB,GAAuB/jB,QAChC,EAEM,SAAUukB,GAAmBlvB,EAAcwE,SAC1CA,IAAKA,GAAsB,QAAhB,EAAM,OAAN2D,aAAM,IAANA,YAAM,EAANA,OAAQ/B,gBAAQ,eAAE+oB,OAAQ,IAE1CnvB,EAAOA,EAAKnG,QAAQ,UAAW,QAC/B,IACEu1B,EADY,IAAI/W,OAAO,QAAUrY,EAAO,qBACxBqvB,KAAK7qB,GACvB,OAAK4qB,EACAA,EAAQ,GACN/pB,mBAAmB+pB,EAAQ,GAAGv1B,QAAQ,MAAO,MAD5B,GADH,IAGvB,CAIO,IAAMkX,GAAe,SAACC,GAC3B,IAAIC,EAQJ,OANEA,EADED,IAEwB,qBAAVhS,MACP,sCAAUkS,EAAI,yBAAJA,EAAI,uBAAIC,QAAAA,OAAAA,OAAAA,EAAAA,IAAAA,MAAAA,SAAAA,IAAA,uEAAQ,OAAR,SAAc,2CAAqB,OAAlC,OAAkC,UAAlC,UAAoCnS,MAAK,QAAIkS,GAAK,oFAErElS,OAEJ,kBAAaiS,EAAM,uBAAS,CACrC,EAsBaqe,GAAe,SAAOC,EAA2Bz5B,GAAW,OAAsBqb,QAAAA,OAAAA,OAAAA,EAAAA,IAAAA,MAAAA,SAAAA,IAAA,uEAC/E,OAD+E,SACzEoe,EAAQC,QAAQ15B,GAAI,OAA7B,GAALwE,EAAQ,EAAH,KAEC,CAAF,wCACD,MAAI,yCAIJsJ,KAAKC,MAAMvJ,IAAM,yDAEjBA,GAAK,wDAEf,EAEYm1B,GAAkB,SAAOF,EAA2Bz5B,GAAW,OAAmBqb,QAAAA,OAAAA,OAAAA,EAAAA,IAAAA,MAAAA,SAAAA,IAAA,iEAC7F,OAD6F,SACvFoe,EAAQN,WAAWn5B,GAAI,0CAC9B,EAmCM,IAAM45B,GAAQ,GASnB,kCAEIv3B,KAAayJ,QAAU,IAAI8tB,EAASC,oBAAmB,SAACpf,EAAKqf,GAE3D,EAAavuB,QAAUkP,EAEvB,EAAarP,OAAS0uB,CAC1B,GACF,IAII,SAAUC,GAAiBpc,GAE/B,IAEMhO,EAAQgO,EAAMtO,MAAM,KAE1B,GAAqB,IAAjBM,EAAMjM,OACR,MAAM,IAAIb,MAAM,yCAGlB,IARuB,8DAQHsH,KAAKwF,EAAM,IAC7B,MAAM,IAAI9M,MAAM,wDAGlB,IAAMm3B,EAAYrqB,EAAM,GACxB,OAAO7B,KAAKC,MArER,SAA0BvJ,GAC9B,IAEIy1B,EAAMC,EAAMC,EACNC,EAAMC,EAAMC,EAHhBt6B,EAAM,oEACRu6B,EAAS,GAGT9sB,EAAI,EAGR,IAFAjJ,EAAQA,EAAMT,QAAQ,IAAK,KAAKA,QAAQ,IAAK,KAEtC0J,EAAIjJ,EAAMd,QAKfu2B,EAJOj6B,EAAIgK,QAAQxF,EAAM2U,OAAO1L,OAIhB,GAHhB2sB,EAAOp6B,EAAIgK,QAAQxF,EAAM2U,OAAO1L,QAGF,EAC9BysB,GAAgB,GAAPE,IAAc,GAHvBC,EAAOr6B,EAAIgK,QAAQxF,EAAM2U,OAAO1L,QAGK,EACrC0sB,GAAgB,EAAPE,IAAa,GAHtBC,EAAOt6B,EAAIgK,QAAQxF,EAAM2U,OAAO1L,OAIhC8sB,GAAkB91B,OAAOiJ,aAAausB,GAE1B,IAARI,GAAsB,GAARH,IAChBK,GAAkB91B,OAAOiJ,aAAawsB,IAE5B,IAARI,GAAsB,GAARH,IAChBI,GAAkB91B,OAAOiJ,aAAaysB,IAG1C,OAAOI,CACT,CA2CoBC,CAAgBR,GACpC,CAKM,SAAUS,GAAM1P,GACpB,OAAO,IAAI5f,SAAQ,SAACuvB,GAClBrW,YAAW,kBAAMqW,EAAO,KAAK,GAAE3P,EACjC,GACF,CAOM,SAAU4P,GACdnlB,EACAolB,GAAwE,WAuBxE,OArBgB,IAAIzvB,SAAW,SAACuvB,EAAQtvB,GAEzBiQ,GAAAA,OAAAA,OAAAA,EAAAA,IAAAA,MAAAA,SAAAA,IAAA,yEACFwf,EAAU,EAAC,YAAEA,EAAUC,KAAQ,iBAErB,OAFqB,kBAEftlB,EAAGqlB,GAAQ,OAApB,GAANpvB,EAAS,EAAH,KAEPmvB,EAAYC,EAAS,KAAMpvB,GAAS,CAAF,eACvB,OAAdivB,EAAOjvB,GAAO,+EAIXmvB,EAAYC,EAAS,EAAF,IAAM,CAAF,gBACjB,OAATzvB,EAAO,EAAD,IAAG,2BAV2ByvB,IAAS,wEAgBvD,GAGF,CA9EgBjB,GAAAA,mBAAyCzuB,QC/JlD,IAAM4vB,GAAU,8BAIrB,WAAYvqB,EAAiBV,GAAe,MAGtB,OAHsB,WAC1C,cAAMU,IAHEwqB,eAAgB,EAIxB,EAAK9wB,KAAO,YACZ,EAAK4F,OAASA,EAAM,CACtB,CAAC,YARoB,CAQpB,EAR4BjN,QAWzB,SAAUo4B,GAAYtvB,GAC1B,MAAwB,kBAAVA,GAAgC,OAAVA,GAAkB,kBAAmBA,CAC3E,CAEO,IAAMuvB,GAAa,8BAGxB,WAAY1qB,EAAiBV,GAAc,MAGrB,OAHqB,WACzC,cAAMU,EAASV,IACV5F,KAAO,eACZ,EAAK4F,OAASA,EAAM,CACtB,CAQC,OARA,yBAED,WACE,MAAO,CACL5F,KAAM7H,KAAK6H,KACXsG,QAASnO,KAAKmO,QACdV,OAAQzN,KAAKyN,OAEjB,KAAC,EAfuB,CAAQirB,IAkB5B,SAAUI,GAAexvB,GAC7B,OAAOsvB,GAAYtvB,IAAyB,iBAAfA,EAAMzB,IACrC,CAEO,IAAMkxB,GAAiB,8BAG5B,WAAY5qB,EAAiBgkB,GAAsB,MAGf,OAHe,WACjD,cAAMhkB,IACDtG,KAAO,mBACZ,EAAKsqB,cAAgBA,EAAa,CACpC,CAAC,YAP2B,CAAQuG,IAUzBM,GAAgB,8BAG3B,WAAY7qB,EAAiBtG,EAAc4F,GAAc,MAGnC,OAHmC,WACvD,cAAMU,IACDtG,KAAOA,EACZ,EAAK4F,OAASA,EAAM,CACtB,CAQC,OARA,yBAED,WACE,MAAO,CACL5F,KAAM7H,KAAK6H,KACXsG,QAASnO,KAAKmO,QACdV,OAAQzN,KAAKyN,OAEjB,KAAC,EAf0B,CAAQirB,IAkBxBO,GAAwB,8BACnC,0CACQ,wBAAyB,0BAA2B,IAC5D,CAAC,YAHkC,CAAQD,IAMhCE,GAA4B,8BACvC,WAAY/qB,GAAe,6BACnBA,EAAS,8BAA+B,IAChD,CAAC,YAHsC,CAAQ6qB,IAMpCG,GAA+B,8BAE1C,WAAYhrB,GAAuE,MAAtDoQ,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAkD,KAEvD,OAF2D,WACjF,cAAMpQ,EAAS,iCAAkC,MAFnDoQ,QAAkD,KAGhD,EAAKA,QAAUA,EAAO,CACxB,CASC,OATA,yBAED,WACE,MAAO,CACL1W,KAAM7H,KAAK6H,KACXsG,QAASnO,KAAKmO,QACdV,OAAQzN,KAAKyN,OACb8Q,QAASve,KAAKue,QAElB,KAAC,EAdyC,CAAQya,IAiBvCI,GAAwB,8BACnC,WAAYjrB,EAAiBV,GAAc,6BACnCU,EAAS,0BAA2BV,EAC5C,CAAC,YAHkC,CAAQurB,ynBCpEvC5G,GAAmB,SAAClkB,GAAQ,OAChCA,EAAIuiB,KAAOviB,EAAIC,SAAWD,EAAImkB,mBAAqBnkB,EAAI5E,OAASmC,KAAKmQ,UAAU1N,EAAI,EAE/EokB,GAAc,SAAOhpB,EAAgBP,GAA8B,OAAIiQ,QAAAA,OAAAA,OAAAA,EAAAA,IAAAA,MAAAA,SAAAA,IAAA,uEACrEqgB,EAAsB,CAAC,IAAK,IAAK,KF2DZ,kBAFUC,EExDThwB,IF2DR,OAAlBgwB,GACA,WAAYA,GACZ,OAAQA,GACR,SAAUA,GAC6B,oBAA/BA,EAAsB9tB,KE7DrB6tB,EAAoBnb,SAAS5U,EAAMmE,QAE5C1E,EAAO,IAAIqwB,GAAwBhH,GAAiB9oB,GAAQA,EAAMmE,SAGlEnE,EACGkC,OACA7I,MAAK,SAACuL,GACLnF,EAAO,IAAI8vB,GAAazG,GAAiBlkB,GAAM5E,EAAMmE,QAAU,KACjE,IACCoO,OAAM,SAACxd,GAEN0K,EAAO,IAAIgwB,GAAiB3G,GAAiB/zB,GAAIA,GACnD,IAdF0K,EAAO,IAAIqwB,GAAwBhH,GAAiB9oB,GAAQ,IAe7D,iCFwCmC,IAACgwB,CExCpC,SACF,EAEK9G,GAAoB,SACxBjmB,EACAH,EACAqmB,EACA7pB,GAEA,IAAM4gB,EAA+B,CAAEjd,OAAAA,EAAQhE,SAAgB,OAAP6D,QAAO,IAAPA,OAAO,EAAPA,EAAS7D,UAAW,CAAC,GAE7E,MAAe,QAAXgE,EACKid,GAGTA,EAAOjhB,QAAU,OAAH,QAAK,eAAgB,kCAA4C,OAAP6D,QAAO,IAAPA,OAAO,EAAPA,EAAS7D,SACjFihB,EAAO5gB,KAAO6C,KAAKmQ,UAAUhT,GACtB,OAAP,wBAAY4gB,GAAWiJ,GACzB,EAaM,SAAgB8G,GACpB5G,EACApmB,EACAF,EACAD,0IAWa,OATP7D,EAAU,OAAH,UAAe,OAAP6D,QAAO,IAAPA,OAAO,EAAPA,EAAS7D,UACnB,OAAP6D,QAAO,IAAPA,OAAO,EAAPA,EAASotB,OACXjxB,EAAuB,cAAI,UAAH,OAAa6D,EAAQotB,MAEzCC,EAAmB,QAAd,EAAO,OAAPrtB,QAAO,IAAPA,OAAO,EAAPA,EAASgU,aAAK,QAAI,CAAC,GACnB,OAAPhU,QAAO,IAAPA,OAAO,EAAPA,EAASstB,cACXD,EAAgB,YAAIrtB,EAAQstB,YAExBtE,EAAch4B,OAAOiF,KAAKo3B,GAAIp4B,OAAS,IAAM,IAAIsJ,gBAAgB8uB,GAAI73B,WAAa,GAAE,SACvE8wB,GACjBC,EACApmB,EACAF,EAAM+oB,EACN,CAAE7sB,QAAAA,EAASqqB,cAAsB,OAAPxmB,QAAO,IAAPA,OAAO,EAAPA,EAASwmB,eACnC,CAAC,EACM,OAAPxmB,QAAO,IAAPA,OAAO,EAAPA,EAASxD,MACV,OAPS,OAAJoT,EAAO,EAAH,wBAQI,OAAP5P,QAAO,IAAPA,OAAO,EAAPA,EAASutB,OAAe,OAAPvtB,QAAO,IAAPA,OAAO,EAAPA,EAASutB,MAAM3d,GAAQ,CAAEA,KAAM,OAAF,UAAOA,GAAQ1S,MAAO,OAAM,2CAGnF,SAAeopB,GACbC,EACApmB,EACAF,EACAD,EACAqmB,EACA7pB,iJAEO,IAAIE,SAAQ,SAACI,EAASH,GAC3B4pB,EAAQtmB,EAAKmmB,GAAkBjmB,EAAQH,EAASqmB,EAAY7pB,IACzDjG,MAAK,SAACyG,GACL,IAAKA,EAAOsE,GAAI,MAAMtE,EACtB,OAAW,OAAPgD,QAAO,IAAPA,OAAO,EAAPA,EAASwmB,eAAsBxpB,EAC5BA,EAAOoC,MAChB,IACC7I,MAAK,SAACqZ,GAAI,OAAK9S,EAAQ8S,EAAK,IAC5BH,OAAM,SAACvS,GAAK,OAAKgpB,GAAYhpB,EAAOP,EAAO,GAChD,KAAE,2CAGE,SAAU6wB,GAAiB5d,SF1HPuY,EE2HpBsF,EAAU,KAMd,OA0CF,SAAoB7d,GAClB,OAAOA,EAAKmP,cAAgBnP,EAAK8d,eAAiB9d,EAAK+d,UACzD,CAjDMC,CAAWhe,MACb6d,EAAU,OAAH,UAAQ7d,IACPie,YF9Hc1F,EE8HSvY,EAAK+d,WF7HtBxK,KAAK2K,MAAMC,KAAKC,MAAQ,KACvB7F,IE+HV,CAAEvY,KAAM,CAAE6d,QAAAA,EAASQ,KADE,QAAT,EAAAre,EAAKqe,YAAI,QAAKre,GACC1S,MAAO,KAC3C,CAEM,SAAUgxB,GAActe,SAE5B,MAAO,CAAEA,KAAM,CAAEqe,KADW,QAAT,EAAAre,EAAKqe,YAAI,QAAKre,GACR1S,MAAO,KAClC,CAEM,SAAUixB,GAAave,GAC3B,MAAO,CAAEA,KAAAA,EAAM1S,MAAO,KACxB,CAEM,SAAUkxB,GAAsBxe,GACpC,IAAQye,EAAkFze,EAAlFye,YAAaC,EAAqE1e,EAArE0e,UAAWC,EAA0D3e,EAA1D2e,aAAcC,EAA4C5e,EAA5C4e,YAAaC,EAA+B7e,EAA/B6e,kBAAsBC,EAAI,GAAK9e,EAApF,8EAWN,MAAO,CACLA,KAAM,CACJ+e,WAXuC,CACzCN,YAAAA,EACAC,UAAAA,EACAC,aAAAA,EACAC,YAAAA,EACAC,kBAAAA,GAOER,KAJM,iBAAcS,IAMtBxxB,MAAO,KAEX,CAEM,SAAU0xB,GAAuBhf,GACrC,OAAOA,CACT,0nBC9IqBif,GAAc,WAUjC,cAUC,QATC5uB,IAAAA,OAAG,IAAG,KAAE,MACR9D,QAAAA,OAAO,IAAG,GAAC,EAAC,EACZ1B,EAAK,EAALA,MAAK,UAQL7G,KAAKqM,IAAMA,EACXrM,KAAKuI,QAAUA,EACfvI,KAAK6G,MAAQ+R,GAAa/R,GAC1B7G,KAAKk7B,IAAM,CACTC,YAAan7B,KAAKo7B,aAAav2B,KAAK7E,MACpCq7B,aAAcr7B,KAAKs7B,cAAcz2B,KAAK7E,MAE1C,CAiRC,OA/QD,0BAIM,SAAQw5B,wHAEV,yBAAMD,GAASv5B,KAAK6G,MAAO,OAAQ,GAAF,OAAK7G,KAAKqM,IAAG,WAAW,CACvD9D,QAASvI,KAAKuI,QACdixB,IAAAA,EACA5G,eAAe,IACf,gCACK,CAAE5W,KAAM,KAAM1S,MAAO,OAAM,oCAE9BsvB,GAAY,EAAD,IAAS,CAAF,yCACb,CAAE5c,KAAM,KAAM1S,MAAK,OAAE,8EAOlC,+BAMM,SACJiyB,GAIM,IAHNnvB,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAGI,CAAC,uHAGI,yBAAMmtB,GAASv5B,KAAK6G,MAAO,OAAQ,GAAF,OAAK7G,KAAKqM,IAAG,WAAW,CAC9DzD,KAAM,CAAE2yB,MAAAA,EAAOvf,KAAM5P,EAAQ4P,MAC7BzT,QAASvI,KAAKuI,QACdmxB,WAAYttB,EAAQstB,WACpBC,MAAOW,KACP,4EAEE1B,GAAY,EAAD,IAAS,CAAF,yCACb,CAAE5c,KAAM,CAAEqe,KAAM,MAAQ/wB,MAAK,OAAE,8EAO5C,0BAOM,SAAakgB,kIASR,gBAPCpd,EAAqBod,EAArBpd,QAAY0uB,EAAI,GAAKtR,EAAvB,aACA5gB,EAAI,+BAAakyB,GAAS1uB,GAC5B,aAAc0uB,IAEhBlyB,EAAK4yB,UAAgB,OAAJV,QAAI,IAAJA,OAAI,EAAJA,EAAMW,gBAChB7yB,EAAe,UACvB,SACY2wB,GAASv5B,KAAK6G,MAAO,OAAQ,GAAF,OAAK7G,KAAKqM,IAAG,wBAAwB,CAC3EzD,KAAMA,EACNL,QAASvI,KAAKuI,QACdoxB,MAAOa,GACPd,WAAmB,OAAPttB,QAAO,IAAPA,OAAO,EAAPA,EAASstB,aACrB,4EAEEd,GAAY,EAAD,IAAS,CAAF,yCACb,CACL5c,KAAM,CACJ+e,WAAY,KACZV,KAAM,MAER/wB,MAAK,OACN,8EAOP,wBAIM,SAAWoyB,wHAEN,yBAAMnC,GAASv5B,KAAK6G,MAAO,OAAQ,GAAF,OAAK7G,KAAKqM,IAAG,gBAAgB,CACnEzD,KAAM8yB,EACNnzB,QAASvI,KAAKuI,QACdoxB,MAAOW,KACP,4EAEE1B,GAAY,EAAD,IAAS,CAAF,yCACb,CAAE5c,KAAM,CAAEqe,KAAM,MAAQ/wB,MAAK,OAAE,8EAO5C,uBAMM,SACJkgB,wJAOmB,gBADXmS,EAAyB,CAAEC,SAAU,KAAMC,SAAU,EAAGC,MAAO,GAAG,SACjDvC,GAASv5B,KAAK6G,MAAO,MAAO,GAAF,OAAK7G,KAAKqM,IAAG,gBAAgB,CAC5E9D,QAASvI,KAAKuI,QACdqqB,eAAe,EACfxS,MAAO,CACL2b,KAA8B,QAAxB,EAAY,QAAZ,EAAM,OAANvS,QAAM,IAANA,OAAM,EAANA,EAAQuS,YAAI,eAAEn6B,kBAAU,QAAI,GAClCo6B,SAAqC,QAA3B,EAAe,QAAf,EAAM,OAANxS,QAAM,IAANA,OAAM,EAANA,EAAQyS,eAAO,eAAEr6B,kBAAU,QAAI,IAE3C+3B,MAAOqB,KACP,OARY,KAARntB,EAAW,EAAH,MASDvE,MAAO,CAAF,qBAAQuE,EAASvE,MAAK,OAE1B,OAF0B,SAEpBuE,EAASrC,OAAM,OAWlC,OAXK0wB,EAAQ,EAAH,KACLJ,EAA6C,QAArC,EAAAjuB,EAAStF,QAAQuC,IAAI,wBAAgB,QAAI,GACjDqxB,EAAgD,QAAxC,EAA4B,QAA5B,EAAAtuB,EAAStF,QAAQuC,IAAI,eAAO,eAAEkC,MAAM,YAAI,QAAI,IAChD3L,OAAS,IACjB86B,EAAM74B,SAAQ,SAAC84B,GACb,IAAML,EAAOzd,SAAS8d,EAAKpvB,MAAM,KAAK,GAAGA,MAAM,KAAK,GAAGqvB,UAAU,EAAG,IAC9DC,EAAM7wB,KAAKC,MAAM0wB,EAAKpvB,MAAM,KAAK,GAAGA,MAAM,KAAK,IACrD2uB,EAAW,GAAD,OAAIW,EAAG,SAAUP,CAC7B,IAEAJ,EAAWG,MAAQxd,SAASwd,IAC7B,kBACM,CAAE9f,KAAM,OAAF,wBAAOkgB,GAAUP,GAAcryB,MAAO,OAAM,sCAErDsvB,GAAY,EAAD,IAAS,CAAF,yCACb,CAAE5c,KAAM,CAAEkgB,MAAO,IAAM5yB,MAAK,OAAE,+EAM3C,yBAOM,SAAYizB,wHAEP,yBAAMhD,GAASv5B,KAAK6G,MAAO,MAAO,GAAF,OAAK7G,KAAKqM,IAAG,wBAAgBkwB,GAAO,CACzEh0B,QAASvI,KAAKuI,QACdoxB,MAAOW,KACP,4EAEE1B,GAAY,EAAD,IAAS,CAAF,yCACb,CAAE5c,KAAM,CAAEqe,KAAM,MAAQ/wB,MAAK,OAAE,8EAO5C,4BAOM,SAAeizB,EAAab,wHAEvB,yBAAMnC,GAASv5B,KAAK6G,MAAO,MAAO,GAAF,OAAK7G,KAAKqM,IAAG,wBAAgBkwB,GAAO,CACzE3zB,KAAM8yB,EACNnzB,QAASvI,KAAKuI,QACdoxB,MAAOW,KACP,4EAEE1B,GAAY,EAAD,IAAS,CAAF,yCACb,CAAE5c,KAAM,CAAEqe,KAAM,MAAQ/wB,MAAK,OAAE,8EAO5C,wBASM,SAAWyiB,GAAoC,IAAxByQ,EAAmB,UAAH,mKAElC,yBAAMjD,GAASv5B,KAAK6G,MAAO,SAAU,GAAF,OAAK7G,KAAKqM,IAAG,wBAAgB0f,GAAM,CAC3ExjB,QAASvI,KAAKuI,QACdK,KAAM,CACJ6zB,mBAAoBD,GAEtB7C,MAAOW,KACP,4EAEE1B,GAAY,EAAD,IAAS,CAAF,yCACb,CAAE5c,KAAM,CAAEqe,KAAM,MAAQ/wB,MAAK,OAAE,8EAK3C,0BAEa,SACZkgB,kIAG0B,yBAAM+P,GAC5Bv5B,KAAK6G,MACL,MAAK,UACF7G,KAAKqM,IAAG,wBAAgBmd,EAAOkT,OAAM,YACxC,CACEn0B,QAASvI,KAAKuI,QACdoxB,MAAO,SAACgD,GACN,MAAO,CAAE3gB,KAAM,CAAE2gB,QAAAA,GAAWrzB,MAAO,KACrC,IAEH,OAVkB,OAUlB,SAVO0S,EAAI,EAAJA,KAAM1S,EAAK,EAALA,MAAK,kBAWZ,CAAE0S,KAAAA,EAAM1S,MAAAA,IAAO,oCAElBsvB,GAAY,EAAD,IAAS,CAAF,yCACb,CAAE5c,KAAM,KAAM1S,MAAK,OAAE,8EAKjC,2BAEa,SACZkgB,8HAGe,yBAAM+P,GACjBv5B,KAAK6G,MACL,SAAQ,UACL7G,KAAKqM,IAAG,wBAAgBmd,EAAOkT,OAAM,oBAAYlT,EAAOuC,IAC3D,CACExjB,QAASvI,KAAKuI,UAEjB,OAPS,OAAJyT,EAAO,EAAH,uBASH,CAAEA,KAAAA,EAAM1S,MAAO,OAAM,oCAExBsvB,GAAY,EAAD,IAAS,CAAF,yCACb,CAAE5c,KAAM,KAAM1S,MAAK,OAAE,gFAKjC,EA7SgC,GCpBtB+X,GAAkB,CAAE,gBAAiB,aAAF,OCHzB,WC0BvB,GAxB8C,CAC5CgW,QAAS,SAAC15B,GACR,OAAK84B,KAIExmB,WAAWymB,aAAaW,QAAQ15B,GAH9B,IAIX,EACAk5B,QAAS,SAACl5B,EAAKwE,GACRs0B,MAILxmB,WAAWymB,aAAaG,QAAQl5B,EAAKwE,EACvC,EACA20B,WAAY,SAACn5B,GACN84B,MAILxmB,WAAWymB,aAAaI,WAAWn5B,EACrC,+SCrBI,WACJ,GAA0B,kBAAfsS,WACX,IACE7S,OAAOwS,eAAexS,OAAOC,UAAW,YAAa,CACnDyN,IAAK,WACH,OAAO9K,IACT,EACAkQ,cAAc,IAGhB0sB,UAAU3sB,WAAa2sB,iBAEhBx/B,OAAOC,UAAUu/B,UACxB,MAAOv+B,GACa,qBAATsI,OAETA,KAAKsJ,WAAatJ,MAGxB,CC6CAk2B,GAEA,IAAMC,GAA4E,CAChFzwB,IJrEwB,wBIsExB0wB,WJrEyB,sBIsEzBC,kBAAkB,EAClBC,gBAAgB,EAChBC,oBAAoB,EACpB30B,QAAS8Y,IAIL8b,GAA6B,IAMdC,GAAY,WAkD/B,WAAYhxB,GAA4B,qBA1B9B,KAAAixB,oBAAiD,IAAIviB,IACrD,KAAAwiB,kBAA2D,KAC3D,KAAAC,0BAAyD,KACzD,KAAAC,mBAA8D,KAO9D,KAAAC,kBAAsD,KACtD,KAAAP,oBAAqB,EAUrB,KAAAQ,iBAA4C,KAMpD,IAAMle,EAAW,OAAH,wBAAQsd,IAAoB1wB,GAC1CpM,KAAK29B,gBAAkB,KACvB39B,KAAK+8B,WAAavd,EAASud,WAC3B/8B,KAAKg9B,iBAAmBxd,EAASwd,iBACjCh9B,KAAKi9B,eAAiBzd,EAASyd,eAC/Bj9B,KAAKo3B,QAAU5X,EAAS4X,SAAWwG,GACnC59B,KAAK69B,MAAQ,IAAI5C,GAAe,CAC9B5uB,IAAKmT,EAASnT,IACd9D,QAASiX,EAASjX,QAClB1B,MAAO2Y,EAAS3Y,QAGlB7G,KAAKqM,IAAMmT,EAASnT,IACpBrM,KAAKuI,QAAUiX,EAASjX,QACxBvI,KAAK6G,MAAQ+R,GAAa4G,EAAS3Y,OACnC7G,KAAKk9B,mBAAqB1d,EAAS0d,mBAEnCl9B,KAAKk7B,IAAM,CACT4C,OAAQ99B,KAAK+9B,QAAQl5B,KAAK7E,MAC1Bg+B,OAAQh+B,KAAKi+B,QAAQp5B,KAAK7E,MAC1Bk+B,SAAUl+B,KAAKm+B,UAAUt5B,KAAK7E,MAC9Bo+B,UAAWp+B,KAAKq+B,WAAWx5B,KAAK7E,MAChCm7B,YAAan7B,KAAKo7B,aAAav2B,KAAK7E,MACpCs+B,mBAAoBt+B,KAAKu+B,oBAAoB15B,KAAK7E,MAClDw+B,+BAAgCx+B,KAAKy+B,gCAAgC55B,KAAK7E,OAGxEq2B,MAAepmB,WAAWyuB,kBAAoB1+B,KAAKi9B,gBAAkBj9B,KAAK+8B,aAC5E/8B,KAAK09B,iBAAmB,IAAIztB,WAAWyuB,iBAAiB1+B,KAAK+8B,YAC7D/8B,KAAK09B,iBAAiBpuB,iBAAiB,WAAW,SAACuT,GACjD,EAAK8b,sBAAsB9b,EAAM7G,KAAK6G,MAAOA,EAAM7G,KAAK6d,SAAS,EACnE,KAGF75B,KAAK4+B,YACP,CAk2CC,OAh2CD,6BAKA,WAKE,OAJK5+B,KAAKy9B,oBACRz9B,KAAKy9B,kBAAoBz9B,KAAK6+B,eAGzB7+B,KAAKy9B,iBACd,GAEA,yBAMc,kJACRz9B,KAAKy9B,kBAAmB,CAAF,wCACjBz9B,KAAKy9B,mBAAiB,oBAIzBz9B,KAAKk9B,qBAAsBl9B,KAAK8+B,uBAAsB,iBAChC,OADgC,SAC1B9+B,KAAK++B,qBAAoB,OAApC,GAAoC,SAA/C/iB,EAAI,EAAJA,OAAM1S,EAAK,EAALA,OAEH,CAAF,gBAGP,OAHO,UAGDtJ,KAAKg/B,iBAAgB,iCAEpB,CAAE11B,MAAAA,IAAO,QAKlB,OAFQuwB,EAA0B7d,EAA1B6d,QAASoF,EAAiBjjB,EAAjBijB,aAAY,UAEvBj/B,KAAKk/B,aAAarF,GAAQ,QAI/B,OAHD75B,KAAK2+B,sBAAsB,YAAa9E,GACnB,aAAjBoF,GACFj/B,KAAK2+B,sBAAsB,oBAAqB9E,GACjD,kBAEM,CAAEvwB,MAAO,OAAM,QAIxB,OAJwB,UAIlBtJ,KAAKm/B,qBAAoB,iCACxB,CAAE71B,MAAO,OAAM,sCAElBsvB,GAAY,EAAD,IAAS,CAAF,yCACb,CAAEtvB,MAAK,OAAE,iCAGX,CACLA,MAAO,IAAIyvB,GAAiB,yCAA0C,EAAF,MACrE,QAED,OAFC,oBAEK/4B,KAAKo/B,0BAAyB,8FAIxC,oBASM,SAAO9yB,4JAET,yBAAMtM,KAAKg/B,iBAAgB,YAGvB,UAAW1yB,GAAW,iBAElB,OADEivB,EAA6BjvB,EAA7BivB,MAAO8D,EAAsB/yB,EAAtB+yB,SAAUjzB,EAAYE,EAAZF,QAAO,SACpBmtB,GAASv5B,KAAK6G,MAAO,OAAQ,GAAF,OAAK7G,KAAKqM,IAAG,WAAW,CAC7D9D,QAASvI,KAAKuI,QACdmxB,WAAmB,OAAPttB,QAAO,IAAPA,OAAO,EAAPA,EAASkzB,gBACrB12B,KAAM,CACJ2yB,MAAAA,EACA8D,SAAAA,EACArjB,KAAmB,QAAb,EAAO,OAAP5P,QAAO,IAAPA,OAAO,EAAPA,EAAS4P,YAAI,QAAI,CAAC,EACxBujB,qBAAsB,CAAEC,cAAsB,OAAPpzB,QAAO,IAAPA,OAAO,EAAPA,EAASqzB,eAElD9F,MAAOC,KACP,OAVFxhB,EAAM,EAAH,kCAWM,UAAW9L,GAAW,iBAEzB,OADEozB,EAA6BpzB,EAA7BozB,MAAOL,EAAsB/yB,EAAtB+yB,SAAUjzB,EAAYE,EAAZF,QAAO,UACpBmtB,GAASv5B,KAAK6G,MAAO,OAAQ,GAAF,OAAK7G,KAAKqM,IAAG,WAAW,CAC7D9D,QAASvI,KAAKuI,QACdK,KAAM,CACJ82B,MAAAA,EACAL,SAAAA,EACArjB,KAAmB,QAAb,EAAO,OAAP,QAAO,IAAP5P,OAAO,EAAPA,EAAS4P,YAAI,QAAI,CAAC,EACxBujB,qBAAsB,CAAEC,cAAsB,OAAPpzB,QAAO,IAAPA,OAAO,EAAPA,EAASqzB,eAElD9F,MAAOC,KACP,QATFxhB,EAAM,EAAH,mCAWG,IAAI8gB,GACR,mEACD,QAGgB,GAAXld,GAHL,EAGqB5D,GAAhB4D,OAAM1S,EAAK,EAALA,QAEA0S,EAAI,0CACT,CAAEA,KAAM,CAAEqe,KAAM,KAAMR,QAAS,MAAQvwB,MAAOA,IAAO,QAI3B,GAD7BuwB,EAA0B7d,EAAK6d,QAC/BQ,EAAoBre,EAAKqe,MAE3Bre,EAAK6d,QAAS,CAAF,gBACd,OADc,UACR75B,KAAKk/B,aAAaljB,EAAK6d,SAAQ,QACrC75B,KAAK2+B,sBAAsB,YAAa9E,GAAQ,iCAG3C,CAAE7d,KAAM,CAAEqe,KAAAA,EAAMR,QAAAA,GAAWvwB,MAAO,OAAM,sCAE3CsvB,GAAY,EAAD,IAAS,CAAF,yCACb,CAAE5c,KAAM,CAAEqe,KAAM,KAAMR,QAAS,MAAQvwB,MAAK,OAAE,+EAO3D,gCAQM,SAAmBgD,wJAErB,yBAAMtM,KAAKg/B,iBAAgB,YAGvB,UAAW1yB,GAAW,iBAElB,OADEivB,EAA6BjvB,EAA7BivB,MAAO8D,EAAsB/yB,EAAtB+yB,SAAUjzB,EAAYE,EAAZF,QAAO,SACpBmtB,GAASv5B,KAAK6G,MAAO,OAAQ,GAAF,OAAK7G,KAAKqM,IAAG,8BAA8B,CAChF9D,QAASvI,KAAKuI,QACdK,KAAM,CACJ2yB,MAAAA,EACA8D,SAAAA,EACArjB,KAAmB,QAAb,EAAO,OAAP5P,QAAO,IAAPA,OAAO,EAAPA,EAAS4P,YAAI,QAAI,CAAC,EACxBujB,qBAAsB,CAAEC,cAAsB,OAAPpzB,QAAO,IAAPA,OAAO,EAAPA,EAASqzB,eAElD9F,MAAOC,KACP,OATFxhB,EAAM,EAAH,kCAUM,UAAW9L,GAAW,iBAEzB,OADEozB,EAA6BpzB,EAA7BozB,MAAOL,EAAsB/yB,EAAtB+yB,SAAUjzB,EAAYE,EAAZF,QAAO,UACpBmtB,GAASv5B,KAAK6G,MAAO,OAAQ,GAAF,OAAK7G,KAAKqM,IAAG,8BAA8B,CAChF9D,QAASvI,KAAKuI,QACdK,KAAM,CACJ82B,MAAAA,EACAL,SAAAA,EACArjB,KAAmB,QAAb,EAAO,OAAP,QAAO,IAAP5P,OAAO,EAAPA,EAAS4P,YAAI,QAAI,CAAC,EACxBujB,qBAAsB,CAAEC,cAAsB,OAAPpzB,QAAO,IAAPA,OAAO,EAAPA,EAASqzB,eAElD9F,MAAOC,KACP,QATFxhB,EAAM,EAAH,mCAWG,IAAI8gB,GACR,mEACD,QAEgB,GAAXld,GAFL,EAEqB5D,GAAhB4D,OAAM1S,EAAK,EAALA,QACA0S,EAAI,0CAAS,CAAEA,KAAM,CAAEqe,KAAM,KAAMR,QAAS,MAAQvwB,MAAAA,IAAO,YACrE0S,EAAK6d,QAAS,CAAF,gBACd,OADc,UACR75B,KAAKk/B,aAAaljB,EAAK6d,SAAQ,QACrC75B,KAAK2+B,sBAAsB,YAAa3iB,EAAK6d,SAAQ,iCAEhD,CAAE7d,KAAAA,EAAM1S,MAAAA,IAAO,sCAElBsvB,GAAY,EAAD,IAAS,CAAF,yCACb,CAAE5c,KAAM,CAAEqe,KAAM,KAAMR,QAAS,MAAQvwB,MAAK,OAAE,+EAM3D,6BAGM,SAAgBgD,oIACpB,gBAAMtM,KAAKg/B,iBAAgB,gCACpBh/B,KAAK2/B,sBAAsBrzB,EAAYszB,SAAU,CACtDlG,WAA+B,QAAnB,EAAAptB,EAAYF,eAAO,eAAEstB,WACjCmG,OAA2B,QAAnB,EAAAvzB,EAAYF,eAAO,eAAEyzB,OAC7BC,YAAgC,QAAnB,EAAAxzB,EAAYF,eAAO,eAAE0zB,YAClCC,oBAAwC,QAAnB,EAAAzzB,EAAYF,eAAO,eAAE2zB,uBAC1C,kDAGJ,+BAMM,SAAkBzzB,0IACtB,gBAAMtM,KAAKg/B,iBAAgB,OAKb,OALa,SAGjB5yB,EAAoCE,EAApCF,QAASwzB,EAA2BtzB,EAA3BszB,SAAUtkB,EAAiBhP,EAAjBgP,MAAO0kB,EAAU1zB,EAAV0zB,MAAK,SAErBzG,GAASv5B,KAAK6G,MAAO,OAAQ,GAAF,OAAK7G,KAAKqM,IAAG,8BAA8B,CACtF9D,QAASvI,KAAKuI,QACdK,KAAM,CACJg3B,SAAAA,EACAK,SAAU3kB,EACV0kB,MAAAA,EACAT,qBAAsB,CAAEC,cAAsB,OAAPpzB,QAAO,IAAPA,OAAO,EAAPA,EAASqzB,eAElD9F,MAAOC,KACP,OAEiB,GAXbxhB,EAAM,EAAH,KAWD4D,EAAgB5D,EAAhB4D,OAAM1S,EAAU8O,EAAV9O,QACA0S,EAAI,0CAAS,CAAEA,KAAM,CAAEqe,KAAM,KAAMR,QAAS,MAAQvwB,MAAAA,IAAO,YACrE0S,EAAK6d,QAAS,CAAF,gBACd,OADc,UACR75B,KAAKk/B,aAAaljB,EAAK6d,SAAQ,QACrC75B,KAAK2+B,sBAAsB,YAAa3iB,EAAK6d,SAAQ,iCAEhD,CAAE7d,KAAAA,EAAM1S,MAAAA,IAAO,sCAElBsvB,GAAY,EAAD,IAAS,CAAF,yCACb,CAAE5c,KAAM,CAAEqe,KAAM,KAAMR,QAAS,MAAQvwB,MAAK,OAAE,+EAM3D,2BAWM,SAAcgD,wJAEhB,yBAAMtM,KAAKg/B,iBAAgB,YAEvB,UAAW1yB,GAAW,iBAEN,OADVivB,EAAmBjvB,EAAnBivB,MAAOnvB,EAAYE,EAAZF,QAAO,SACEmtB,GAASv5B,KAAK6G,MAAO,OAAQ,GAAF,OAAK7G,KAAKqM,IAAG,QAAQ,CACtE9D,QAASvI,KAAKuI,QACdK,KAAM,CACJ2yB,MAAAA,EACAvf,KAAmB,QAAb,EAAO,OAAP5P,QAAO,IAAPA,OAAO,EAAPA,EAAS4P,YAAI,QAAI,CAAC,EACxBkkB,YAAsC,QAAzB,EAAO,OAAP9zB,QAAO,IAAPA,OAAO,EAAPA,EAAS+zB,wBAAgB,SACtCZ,qBAAsB,CAAEC,cAAsB,OAAPpzB,QAAO,IAAPA,OAAO,EAAPA,EAASqzB,eAElD/F,WAAmB,OAAPttB,QAAO,IAAPA,OAAO,EAAPA,EAASkzB,kBACrB,OATW,OASX,SATMh2B,EAAK,EAALA,MAAK,kBAUN,CAAE0S,KAAM,CAAEqe,KAAM,KAAMR,QAAS,MAAQvwB,MAAAA,IAAO,aAEnD,UAAWgD,GAAW,iBAEN,OADVozB,EAAmBpzB,EAAnBozB,MAAOtzB,EAAYE,EAAZF,QAAO,UACEmtB,GAASv5B,KAAK6G,MAAO,OAAQ,GAAF,OAAK7G,KAAKqM,IAAG,QAAQ,CACtE9D,QAASvI,KAAKuI,QACdK,KAAM,CACJ82B,MAAAA,EACA1jB,KAAmB,QAAb,EAAO,OAAP,QAAO,IAAP5P,OAAO,EAAPA,EAAS4P,YAAI,QAAI,CAAC,EACxBkkB,YAAsC,QAAzB,EAAO,OAAP,QAAO,IAAP9zB,OAAO,EAAPA,EAAS+zB,wBAAgB,SACtCZ,qBAAsB,CAAEC,cAAsB,OAAPpzB,QAAO,IAAPA,OAAO,EAAPA,EAASqzB,iBAElD,QARW,OAQX,SARMn2B,EAAK,EAALA,MAAK,kBASN,CAAE0S,KAAM,CAAEqe,KAAM,KAAMR,QAAS,MAAQvwB,MAAAA,IAAO,cAEjD,IAAI4vB,GAA4B,qDAAoD,sCAEtFN,GAAY,EAAD,IAAS,CAAF,yCACb,CAAE5c,KAAM,CAAEqe,KAAM,KAAMR,QAAS,MAAQvwB,MAAK,OAAE,+EAO3D,uBAGM,SAAUkgB,8IAEZ,yBAAMxpB,KAAKg/B,iBAAgB,OAEH,OAFG,SAEGzF,GAASv5B,KAAK6G,MAAO,OAAQ,GAAF,OAAK7G,KAAKqM,IAAG,WAAW,CAC/E9D,QAASvI,KAAKuI,QACdK,KAAM,OAAF,wBACC4gB,GAAM,CACT+V,qBAAsB,CAAEC,cAA6B,QAAd,EAAAhW,EAAOpd,eAAO,eAAEqzB,gBAEzD/F,WAA0B,QAAd,EAAAlQ,EAAOpd,eAAO,eAAEstB,WAC5BC,MAAOC,KACP,OARiB,GAQjB,SARM5d,EAAI,EAAJA,OAAM1S,EAAK,EAALA,OAUH,CAAF,sBACDA,EAAK,WAGR0S,EAAM,CAAF,qBACD,2CAA0C,QAItB,GADtB6d,EAA0B7d,EAAK6d,QAC/BQ,EAAare,EAAKqe,OAEb,OAAPR,QAAO,IAAPA,OAAO,EAAPA,EAAS1O,cAAY,iBACvB,OADuB,UACjBnrB,KAAKk/B,aAAarF,GAAmB,QAC3C75B,KAAK2+B,sBAAsB,YAAa9E,GAAQ,iCAG3C,CAAE7d,KAAM,CAAEqe,KAAAA,EAAMR,QAAAA,GAAWvwB,MAAO,OAAM,sCAE3CsvB,GAAY,EAAD,IAAS,CAAF,yCACb,CAAE5c,KAAM,CAAEqe,KAAM,KAAMR,QAAS,MAAQvwB,MAAK,OAAE,+EAO3D,2BAmBM,SAAckgB,kIAEhB,yBAAMxpB,KAAKg/B,iBAAgB,OAEpB,OAFoB,SAEdzF,GAASv5B,KAAK6G,MAAO,OAAQ,GAAF,OAAK7G,KAAKqM,IAAG,QAAQ,CAC3DzD,KAAM,OAAF,kEACE,eAAgB4gB,EAAS,CAAE4W,YAAa5W,EAAO6W,YAAe,MAC9D,WAAY7W,EAAS,CAAE8W,OAAQ9W,EAAO8W,QAAW,MAAK,CAC1D1F,YAAuC,QAA1B,EAAc,QAAd,EAAApR,EAAOpd,eAAO,eAAEstB,kBAAU,aAAIrxB,KACxB,QAAf,EAAM,OAANmhB,QAAM,IAANA,OAAM,EAANA,EAAQpd,eAAO,eAAEqzB,cACjB,CAAEF,qBAAsB,CAAEC,cAAehW,EAAOpd,QAAQqzB,eACxD,MAAK,CACTc,oBAAoB,IAEtBh4B,QAASvI,KAAKuI,QACdoxB,MAAOY,KACP,4EAEE3B,GAAY,EAAD,IAAS,CAAF,yCACb,CAAE5c,KAAM,KAAM1S,MAAK,OAAE,8EAMlC,wBAIM,8IAsBJ,gBAAMtJ,KAAKy9B,kBAAiB,OAEa,GAArC+C,EAAiC,MAEjCxgC,KAAKi9B,eAAgB,CAAF,gBACA,OADA,SACM9F,GAAan3B,KAAKo3B,QAASp3B,KAAK+8B,YAAW,OAApD,GAEG,QAFf0D,EAAe,EAAH,MAEO,qBACnBzgC,KAAK0gC,gBAAgBD,GAAe,CAAF,gBACpCD,EAAiBC,EAAY,wBAE7B,OAF6B,UAEvBzgC,KAAKg/B,iBAAgB,gCAI/BwB,EAAiBxgC,KAAK29B,gBAAe,WAGlC6C,EAAgB,CAAF,yCACV,CAAExkB,KAAM,CAAE6d,QAAS,MAAQvwB,MAAO,OAAM,QAKxC,KAFUk3B,EAAevG,YAC9BuG,EAAevG,YAAcE,KAAKC,MAAQ,IAE7B,CAAF,yCACN,CAAEpe,KAAM,CAAE6d,QAAS2G,GAAkBl3B,MAAO,OAAM,QAGhC,OAHgC,UAG1BtJ,KAAK2gC,kBAAkBH,EAAe1G,eAAc,QAA/D,GAA+D,SAA7ED,EAAO,EAAPA,UAASvwB,EAAK,EAALA,OACN,CAAF,yCACA,CAAE0S,KAAM,CAAE6d,QAAS,MAAQvwB,MAAAA,IAAO,iCAGpC,CAAE0S,KAAM,CAAE6d,QAAAA,GAAWvwB,MAAO,OAAM,mDAG3C,qBAIM,SAAQkwB,sJAELA,EAAK,CAAF,gBACkB,OADlB,SACwBx5B,KAAK4gC,aAAY,OAA5B,GAA4B,SAAvC5kB,EAAI,EAAJA,OAAM1S,EAAK,EAALA,OACH,CAAF,qBACDA,EAAK,OAIbkwB,EAAgC,QAA1B,EAAY,QAAZ,EAAAxd,EAAK6d,eAAO,eAAE1O,oBAAY,aAAI9iB,EAAS,QAGxC,OAHwC,UAGlCkxB,GAASv5B,KAAK6G,MAAO,MAAO,GAAF,OAAK7G,KAAKqM,IAAG,SAAS,CAC3D9D,QAASvI,KAAKuI,QACdixB,IAAKA,EACLG,MAAOW,KACP,+EAEE1B,GAAY,EAAD,IAAS,CAAF,yCACb,CAAE5c,KAAM,CAAEqe,KAAM,MAAQ/wB,MAAK,OAAE,+EAO5C,wBAGM,SACJoyB,GAGM,IAFNtvB,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAEI,CAAC,yIAGgD,yBAAMpM,KAAK4gC,aAAY,OAA1C,GAA0C,SAA5DC,EAAW,EAAjB7kB,OAA0B8kB,EAAY,EAAnBx3B,OACT,CAAF,qBACRw3B,EAAY,UAEfD,EAAYhH,QAAS,CAAF,sBAChB,IAAIZ,GAAyB,QAGF,OAD7BY,EAAmBgH,EAAYhH,QAAO,UACHN,GAASv5B,KAAK6G,MAAO,MAAO,GAAF,OAAK7G,KAAKqM,IAAG,SAAS,CACvF9D,QAASvI,KAAKuI,QACdmxB,WAAmB,OAAPttB,QAAO,IAAPA,OAAO,EAAPA,EAASkzB,gBACrB12B,KAAM8yB,EACNlC,IAAKK,EAAQ1O,aACbwO,MAAOW,KACP,QANiB,GAMjB,SANMte,EAAI,EAAJA,OAAa+kB,EAAS,EAAhBz3B,OAOC,CAAF,sBAAQy3B,EAAS,QAE9B,OADAlH,EAAQQ,KAAOre,EAAKqe,KAAY,UAC1Br6B,KAAKk/B,aAAarF,GAAQ,QACmB,OAAnD75B,KAAK2+B,sBAAsB,eAAgB9E,GAAQ,kBAE5C,CAAE7d,KAAM,CAAEqe,KAAMR,EAAQQ,MAAQ/wB,MAAO,OAAM,sCAEhDsvB,GAAY,EAAD,IAAS,CAAF,yCACb,CAAE5c,KAAM,CAAEqe,KAAM,MAAQ/wB,MAAK,OAAE,+EAO5C,wBAGQ,SAAWkwB,GAKjB,OAAO9B,GAAiB8B,EAC1B,GAEA,wBAKM,SAAWgH,8JAKRA,EAAerV,cAAiBqV,EAAe1G,cAAa,sBACzD,IAAIb,GAAyB,OAWpC,GARK+H,EAAU7G,KAAKC,MAAQ,IACzB6G,EAAYD,EACZE,GAAa,EACbrH,EAA0B,MACxB/W,EAAU4U,GAAiB8I,EAAerV,eACpCgW,MACVF,EAAYne,EAAQqe,IACpBD,EAAaD,GAAaD,IAGxBE,EAAY,CAAF,gBACiC,OADjC,UACuClhC,KAAK2gC,kBACtDH,EAAe1G,eAChB,QAFuC,GAEvC,SAFgBsH,EAAgB,EAAzBvH,UAA2BvwB,EAAK,EAALA,OAGxB,CAAF,yCACA,CAAE0S,KAAM,CAAEqe,KAAM,KAAMR,QAAS,MAAQvwB,MAAOA,IAAO,WAGzD83B,EAAkB,CAAF,yCACZ,CAAEplB,KAAM,CAAEqe,KAAM,KAAMR,QAAS,MAAQvwB,MAAO,OAAM,QAE7DuwB,EAAUuH,EAAgB,wBAEF,OAFE,UAEIphC,KAAKqhC,QAAQb,EAAerV,cAAa,QAApD,GAAoD,SAA/DnP,EAAI,EAAJA,OAAM1S,EAAK,EAALA,OACH,CAAF,sBACDA,EAAK,QAUb,OARAuwB,EAAU,CACR1O,aAAcqV,EAAerV,aAC7B2O,cAAe0G,EAAe1G,cAC9BO,KAAMre,EAAKqe,KACXiH,WAAY,SACZvH,WAAYkH,EAAYD,EACxB/G,WAAYgH,GACb,UACKjhC,KAAKk/B,aAAarF,GAAQ,QAChC75B,KAAK2+B,sBAAsB,YAAa9E,GAAQ,iCAG3C,CAAE7d,KAAM,CAAEqe,KAAMR,EAAQQ,KAAMR,QAAAA,GAAWvwB,MAAO,OAAM,sCAEzDsvB,GAAY,EAAD,IAAS,CAAF,yCACb,CAAE5c,KAAM,CAAE6d,QAAS,KAAMQ,KAAM,MAAQ/wB,MAAK,OAAE,+EAO3D,4BAMM,SAAek3B,0JAEZA,EAAgB,CAAF,gBACO,OADP,SACaxgC,KAAK4gC,aAAY,OAA5B,GAA4B,SAAvC5kB,EAAI,EAAJA,OAAM1S,EAAK,EAALA,OACH,CAAF,qBACDA,EAAK,OAGbk3B,EAA6B,QAAZ,EAAAxkB,EAAK6d,eAAO,aAAIxxB,EAAS,WAGzB,OAAdm4B,QAAc,IAAdA,OAAc,EAAdA,EAAgB1G,cAAe,CAAF,sBAC1B,IAAIb,GAAyB,QAGV,OAHU,UAGJj5B,KAAK2gC,kBAAkBH,EAAe1G,eAAc,QAA/D,GAA+D,SAA7ED,EAAO,EAAPA,UAASvwB,EAAK,EAALA,OACN,CAAF,yCACA,CAAE0S,KAAM,CAAEqe,KAAM,KAAMR,QAAS,MAAQvwB,MAAOA,IAAO,WAGzDuwB,EAAS,CAAF,yCACH,CAAE7d,KAAM,CAAEqe,KAAM,KAAMR,QAAS,MAAQvwB,MAAO,OAAM,iCAGtD,CAAE0S,KAAM,CAAEqe,KAAMR,EAAQQ,KAAMR,QAAAA,GAAWvwB,MAAO,OAAM,sCAEzDsvB,GAAY,EAAD,IAAS,CAAF,yCACb,CAAE5c,KAAM,CAAEqe,KAAM,KAAMR,QAAS,MAAQvwB,MAAK,OAAE,+EAO3D,gCAGc,kLAQL+sB,KAAa,CAAF,qBAAQ,IAAI8C,GAA+B,wBAAuB,UAC7En5B,KAAK8+B,uBAAwB,CAAF,qBACxB,IAAI3F,GAA+B,wCAAuC,OAGjB,KAA3D9G,EAAoB0E,GAAmB,sBACtB,CAAF,gBACgC,GAA7CwK,EAAaxK,GAAmB,cACrB,CAAF,sBAAQ,IAAIoC,GAA+B,2BAA0B,QAC3C,GAAnC7vB,EAAQytB,GAAmB,SACrB,CAAF,sBAAQ,IAAIoC,GAA+B,sBAAqB,cAEpE,IAAIA,GAA+B9G,EAAmB,CAAE/oB,MAAAA,EAAOmV,KAAM8iB,IAAa,QAKnC,GAFjDC,EAAiBzK,GAAmB,kBACpC0K,EAAyB1K,GAAmB,0BAC5C5L,EAAe4L,GAAmB,gBACrB,CAAF,sBAAQ,IAAIoC,GAA+B,6BAA4B,QACrC,GAA7CY,EAAahD,GAAmB,cACrB,CAAF,sBAAQ,IAAIoC,GAA+B,2BAA0B,QAC3B,GAAnDW,EAAgB/C,GAAmB,iBACrB,CAAF,sBAAQ,IAAIoC,GAA+B,8BAA6B,QACvC,GAA7CmI,EAAavK,GAAmB,cACrB,CAAF,sBAAQ,IAAIoC,GAA+B,2BAA0B,QAK5D,OAHlB6H,EAAUzR,KAAK2K,MAAMC,KAAKC,MAAQ,KAClCH,EAAa+G,EAAU1iB,SAASyb,GAAW,UAEnB/5B,KAAKqhC,QAAQlW,GAAa,QAArC,GAAqC,SAAhDnP,EAAI,EAAJA,OAAM1S,EAAK,EAALA,OACH,CAAF,sBAAQA,EAAK,QAeG,OAdnB+wB,EAAare,EAAKqe,KAClBR,EAAmB,CACvB2H,eAAAA,EACAC,uBAAAA,EACAtW,aAAAA,EACA4O,WAAYzb,SAASyb,GACrBE,WAAAA,EACAH,cAAAA,EACAwH,WAAAA,EACAjH,KAAAA,GAEI4E,EAAelI,GAAmB,QAGxC/mB,OAAO/B,SAASyzB,KAAO,GAAE,kBAElB,CAAE1lB,KAAM,CAAE6d,QAAAA,EAASoF,aAAAA,GAAgB31B,MAAO,OAAM,sCAEnDsvB,GAAY,EAAD,IAAS,CAAF,yCACb,CAAE5c,KAAM,CAAE6d,QAAS,KAAMoF,aAAc,MAAQ31B,MAAK,OAAE,+EAOnE,kCAGQ,WACN,OACE+sB,OACCxc,QAAQkd,GAAmB,kBAC1Bld,QAAQkd,GAAmB,sBAEjC,GAEA,qBAOM,sJACkC,gBAAM/2B,KAAK4gC,aAAY,OAA1C,GAA0C,SAArD5kB,EAAI,EAAJA,OAAa8kB,EAAY,EAAnBx3B,OACI,CAAF,wCACP,CAAEA,MAAOw3B,IAAc,OAEc,KAAxC5V,EAA0B,QAAZ,EAAAlP,EAAK6d,eAAO,eAAE1O,cACjB,CAAF,gBACK,OADL,UACWnrB,KAAK69B,MAAM8D,QAAQzW,GAAY,QAA1C,GAA0C,WAA/C5hB,EAAK,EAALA,OACG,CAAF,mBAGDwvB,GAAexvB,KAA4B,MAAjBA,EAAMmE,QAAmC,MAAjBnE,EAAMmE,QAAe,0CACpE,CAAEnE,MAAAA,IAAO,QAItB,OAJsB,UAIhBtJ,KAAKg/B,iBAAgB,QACmB,OAA9Ch/B,KAAK2+B,sBAAsB,aAAc,MAAK,kBACvC,CAAEr1B,MAAO,OAAM,mDAGxB,+BAIA,SAAkBuC,GAAmE,WAG7EkgB,ERz4BD,uCAAuCrqB,QAAQ,SAAS,SAAU1D,GACvE,IAAMc,EAAqB,GAAhBywB,KAAKqH,SAAiB,EAEjC,OADW,KAAL54B,EAAWc,EAAS,EAAJA,EAAW,GACxB8C,SAAS,GACpB,IQs4BQggC,EAA6B,CACjC7V,GAAAA,EACAlgB,SAAAA,EACAigB,YAAa,WACX,EAAKuR,oBAAoBwE,OAAO9V,EAClC,GAKF,OAFA/rB,KAAKq9B,oBAAoBpzB,IAAI8hB,EAAI6V,GAE1B,CAAE5lB,KAAM,CAAE4lB,aAAAA,GACnB,GAEA,mCAMM,SACJrG,GAIM,IAHNnvB,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAGI,CAAC,uHASI,yBAAMmtB,GAASv5B,KAAK6G,MAAO,OAAQ,GAAF,OAAK7G,KAAKqM,IAAG,YAAY,CAC/DzD,KAAM,CAAE2yB,MAAAA,EAAOgE,qBAAsB,CAAEC,cAAepzB,EAAQqzB,eAC9Dl3B,QAASvI,KAAKuI,QACdmxB,WAAYttB,EAAQstB,aACpB,4EAEEd,GAAY,EAAD,IAAS,CAAF,yCACb,CAAE5c,KAAM,KAAM1S,MAAK,OAAE,8EAOlC,iCAIc,SAAoBw4B,qIAKvB,gBAHDC,EAAY5H,KAAKC,MAEvB,SACa9B,IACX,SAAOE,GAAO,OAAIxf,GAAAA,OAAAA,OAAAA,EAAAA,IAAAA,MAAAA,SAAAA,IAAA,iEAChB,OADgB,SACVof,GAAgB,IAAVI,GAAc,OAEnB,OAFmB,SAEbe,GAASv5B,KAAK6G,MAAO,OAAQ,GAAF,OAAK7G,KAAKqM,IAAG,mCAAmC,CACtFzD,KAAM,CAAEkxB,cAAegI,GACvBv5B,QAASvI,KAAKuI,QACdoxB,MAAOC,KACP,uFACH,IACD,SAACpB,EAASlP,EAAGlgB,GAAM,OACjBA,GACAA,EAAOE,OACPF,EAAOE,iBAAiB8vB,IAExBe,KAAKC,MAAwB,KAAf5B,EAAU,GAAWuJ,EAAY5E,EAA0B,IAC5E,4EAEGvE,GAAY,EAAD,IAAS,CAAF,yCACb,CAAE5c,KAAM,CAAE6d,QAAS,KAAMQ,KAAM,MAAQ/wB,MAAK,OAAE,8EAI1D,6BAEO,SAAgBm3B,GAQtB,MAN0B,kBAAjBA,GACU,OAAjBA,GACA,iBAAkBA,GAClB,kBAAmBA,GACnB,eAAgBA,CAGpB,GAAC,mCAEO,SACNb,GAMM,IALNxzB,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAKI,CAAC,EAECC,EAAcrM,KAAKgiC,mBAAmBpC,EAAU,CACpDlG,WAAYttB,EAAQstB,WACpBmG,OAAQzzB,EAAQyzB,OAChBC,YAAa1zB,EAAQ0zB,cAMvB,OAHIzJ,OAAgBjqB,EAAQ2zB,qBAC1B/vB,OAAO/B,SAASpO,OAAOwM,GAElB,CAAE2P,KAAM,CAAE4jB,SAAAA,EAAUvzB,IAAAA,GAAO/C,MAAO,KAC3C,GAEA,gCAIc,kJAEa,yBAAM6tB,GAAan3B,KAAKo3B,QAASp3B,KAAK+8B,YAAW,OAApD,GAAdyD,EAAiB,EAAH,KACfxgC,KAAK0gC,gBAAgBF,GAAiB,CAAF,kBAChB,OAAnBA,EAAuB,gBACzB,OADyB,SACnBxgC,KAAKg/B,iBAAgB,wCAMc,GAAvCgC,EAAUzR,KAAK2K,MAAMC,KAAKC,MAAQ,QAEV,QAAzB,EAAAoG,EAAevG,kBAAU,QAAIxB,KAAYuI,EJ/gCvB,II+gC8C,qBAC/DhhC,KAAKg9B,mBAAoBwD,EAAe1G,cAAa,iBACrC,OADqC,UAC/B95B,KAAK2gC,kBAAkBH,EAAe1G,eAAc,QAA/D,GAA+D,WAApExwB,EAAK,EAALA,OAEG,CAAF,gBAEP,OADA2f,QAAQC,IAAI5f,EAAM6E,SAAQ,UACpBnO,KAAKg/B,iBAAgB,gCAG7B,OAH6B,UAGvBh/B,KAAKg/B,iBAAgB,oCAGzBh/B,KAAKi9B,eAAgB,CAAF,gBACrB,OADqB,UACfj9B,KAAKk/B,aAAasB,GAAe,QAEzCxgC,KAAK2+B,sBAAsB,YAAa6B,GAAe,gCAGvC,OAHuC,0BAGzDvX,QAAQ3f,MAAM,EAAD,IAAK,+EAGrB,+BAEa,SAAkBw4B,kJAE1B9hC,KAAKw9B,mBAAoB,CAAF,wCAClBx9B,KAAKw9B,mBAAmB/zB,SAAO,OAI0B,GAJ1B,SAItCzJ,KAAKw9B,mBAAqB,IAAIjG,GAEzBuK,EAAc,CAAF,qBACT,IAAI7I,GAAyB,OAEb,OAFa,SAEPj5B,KAAKiiC,oBAAoBH,GAAa,OAAjD,GAAiD,SAA5D9lB,EAAI,EAAJA,OAAM1S,EAAK,EAALA,OACH,CAAF,sBAAQA,EAAK,WACjB0S,EAAK6d,QAAS,CAAF,sBAAQ,IAAIZ,GAAyB,QAEtD,OAFsD,UAEhDj5B,KAAKk/B,aAAaljB,EAAK6d,SAAQ,QAKE,OAJvC75B,KAAK2+B,sBAAsB,kBAAmB3iB,EAAK6d,SAE7CzwB,EAAS,CAAEywB,QAAS7d,EAAK6d,QAASvwB,MAAO,MAE/CtJ,KAAKw9B,mBAAmBt0B,QAAQE,GAAO,kBAEhCA,GAAM,sCAETwvB,GAAY,EAAD,IAAS,CAAF,gBAGoB,OAFlCxvB,EAAS,CAAEywB,QAAS,KAAMvwB,MAAK,MAEd,QAAvB,EAAAtJ,KAAKw9B,0BAAkB,SAAEt0B,QAAQE,GAAO,kBAEjCA,GAAM,QAGuB,MAAf,QAAvB,EAAApJ,KAAKw9B,0BAAkB,SAAEz0B,OAAO,EAAD,IAAO,aAGR,OAHQ,UAGtC/I,KAAKw9B,mBAAqB,KAAI,+EAEjC,mCAEO,SAAsB3a,EAAwBgX,GAAyC,IAAhBhQ,IAAY,UAAH,+CAClF7pB,KAAK09B,kBAAoB7T,GAC3B7pB,KAAK09B,iBAAiBwE,YAAY,CAAErf,MAAAA,EAAOgX,QAAAA,IAG7C75B,KAAKq9B,oBAAoB/5B,SAAQ,SAACnE,GAAC,OAAKA,EAAE0M,SAASgX,EAAOgX,EAAQ,GACpE,GAEA,0BAIc,SAAaA,wHAGxB,GAFI75B,KAAKi9B,iBACRj9B,KAAK29B,gBAAkB9D,IAGrB75B,KAAKi9B,iBAAkBpD,EAAQI,WAAU,gBAC3C,OAD2C,SACrCj6B,KAAKmiC,gBAAgBtI,GAAQ,kDAEtC,6BAEO,SAAgB2G,GACtB,ORtgCFpJ,EQsgCsBp3B,KAAKo3B,QRrgC3Bz5B,EQqgCoCqC,KAAK+8B,WRpgCzC/gB,EQogCqDwkB,ERngCpCxnB,QAAAA,OAAAA,OAAAA,EAAAA,IAAAA,MAAAA,SAAAA,IAAA,iEACjB,OADiB,SACXoe,EAAQP,QAAQl5B,EAAK8N,KAAKmQ,UAAUI,IAAM,2CALtB,IAC1Bob,EACAz5B,EACAqe,CQqgCA,GAAC,4BAEa,oIACRhc,KAAKi9B,eAAgB,CAAF,eACrB,OADqB,SACf3F,GAAgBt3B,KAAKo3B,QAASp3B,KAAK+8B,YAAW,6BAEpD/8B,KAAK29B,gBAAkB,KAAI,kDAI/B,8CAMQ,WACN,IAAM9xB,EAAW7L,KAAKu9B,0BACtBv9B,KAAKu9B,0BAA4B,KAEjC,IACM1xB,GAAYwqB,OAAqB,OAANrmB,aAAM,IAANA,YAAM,EAANA,OAAQP,sBACrCO,OAAOP,oBAAoB,mBAAoB5D,GAEjD,MAAOxN,GACP4qB,QAAQ3f,MAAM,4CAA6CjL,GAE/D,GAEA,+BAIc,6IACZ,gBAAM2B,KAAKoiC,mBAAkB,OAgB7B,OAdMC,EAAS3Q,aAAY,kBAAM,EAAK4Q,uBAAuB,GAAEnF,IAC/Dn9B,KAAKs9B,kBAAoB+E,EAErBA,GAA4B,kBAAXA,GAA+C,oBAAjBA,EAAOE,OAOxDF,EAAOE,QAGT,SACMviC,KAAKsiC,wBAAuB,kDAGpC,8BAIc,sIACND,EAASriC,KAAKs9B,kBACpBt9B,KAAKs9B,kBAAoB,KAErB+E,GACF/R,cAAc+R,GACf,kDAGH,8BAsBM,gIAEJ,OADAriC,KAAKwiC,mCAAkC,SACjCxiC,KAAKyiC,oBAAmB,kDAGhC,6BAQM,gIAEJ,OADAziC,KAAKwiC,mCAAkC,SACjCxiC,KAAKoiC,mBAAkB,kDAG/B,mCAGc,0IAMN,OALAhI,EAAMD,KAAKC,MAAK,kBAKVp6B,KAAK4gC,aAAY,OADV,GACU,UADjB/G,EAAO,EAAf7d,KAAQ6d,UAGOA,EAAQC,eAAkBD,EAAQI,WAAU,iDAO5D,KAFsB1K,KAAKC,OACJ,IAArBqK,EAAQI,WAAoBG,GAAO+C,IAnpCR,GAspCkB,iBAC9C,OAD8C,UACxCn9B,KAAK2gC,kBAAkB9G,EAAQC,eAAc,0DAGrD7Q,QAAQ3f,MAAM,yEAA0E,EAAF,IAAI,4DAI9F,qCAKc,8IACP+sB,OAAsB,OAANrmB,aAAM,IAANA,YAAM,EAANA,OAAQV,kBAAgB,gBAI1C,OAHGtP,KAAKg9B,kBAEPh9B,KAAK0iC,mBACN,mBAEM,GAAK,OAUZ,OAVY,SAIZ1iC,KAAKu9B,0BAA4B,kBAAWvkB,GAAAA,OAAAA,OAAAA,EAAAA,IAAAA,MAAAA,SAAAA,IAAA,iEAAC,OAAD,SAAOhZ,KAAK2iC,sBAAqB,GAAM,yFAE7E,OAAN3yB,aAAM,IAANA,QAAAA,OAAQV,iBAAiB,mBAAoBtP,KAAKu9B,2BAGlD,SACMv9B,KAAK2iC,sBAAqB,GAAK,yDAErC1Z,QAAQ3f,MAAM,0BAA2B,EAAF,IAAQ,4DAInD,kCAGc,SAAqBs5B,2HACA,YAA7BtM,SAASuM,gBAA6B,mBACnCD,EAAW,CAAF,eAEZ,OAFY,SAEN5iC,KAAKy9B,kBAAiB,OAC5B,OAD4B,SACtBz9B,KAAKm/B,qBAAoB,OAG7Bn/B,KAAKg9B,kBAGPh9B,KAAKyiC,oBACN,uBACqC,WAA7BnM,SAASuM,iBACd7iC,KAAKg9B,kBACPh9B,KAAKoiC,mBAER,mDAGH,gCAMQ,SACNxC,EACAxzB,GAMA,IAAM02B,EAAsB,CAAC,YAAD,OAAaC,mBAAmBnD,KAO5D,IANW,OAAPxzB,QAAO,IAAPA,OAAO,EAAPA,EAASstB,aACXoJ,EAAU/gC,KAAK,eAAD,OAAgBghC,mBAAmB32B,EAAQstB,eAEhD,OAAPttB,QAAO,IAAPA,OAAO,EAAPA,EAASyzB,SACXiD,EAAU/gC,KAAK,UAAD,OAAWghC,mBAAmB32B,EAAQyzB,UAE3C,OAAPzzB,QAAO,IAAPA,OAAO,EAAPA,EAAS0zB,YAAa,CACxB,IAAM1f,EAAQ,IAAIzV,gBAAgByB,EAAQ0zB,aAC1CgD,EAAU/gC,KAAKqe,EAAMxe,YAEvB,MAAO,GAAP,OAAU5B,KAAKqM,IAAG,sBAAcy2B,EAAUxgC,KAAK,KACjD,GAAC,uBAEa,SAAUknB,wIAE+B,yBAAMxpB,KAAK4gC,aAAY,OAA1C,GAA0C,SAA5DC,EAAW,EAAjB7kB,OAA0B8kB,EAAY,EAAnBx3B,OACT,CAAF,wCACP,CAAE0S,KAAM,KAAM1S,MAAOw3B,IAAc,OAGrC,OAHqC,UAG/BvH,GAASv5B,KAAK6G,MAAO,SAAU,GAAF,OAAK7G,KAAKqM,IAAG,oBAAYmd,EAAOwZ,UAAY,CACpFz6B,QAASvI,KAAKuI,QACdixB,IAAyB,QAApB,EAAW,OAAXqH,QAAW,IAAXA,OAAW,EAAXA,EAAahH,eAAO,eAAE1O,eAC3B,+EAEEyN,GAAY,EAAD,IAAS,CAAF,yCACb,CAAE5c,KAAM,KAAM1S,MAAK,OAAE,+EAMlC,qBAGc,SAAQkgB,gJAEiC,yBAAMxpB,KAAK4gC,aAAY,OAA1C,GAA0C,SAA5DC,EAAW,EAAjB7kB,OAA0B8kB,EAAY,EAAnBx3B,OACT,CAAF,wCACP,CAAE0S,KAAM,KAAM1S,MAAOw3B,IAAc,OAGpB,OAHoB,UAGdvH,GAASv5B,KAAK6G,MAAO,OAAQ,GAAF,OAAK7G,KAAKqM,IAAG,YAAY,CAChFzD,KAAM,CACJq6B,cAAezZ,EAAO0Z,aACtBC,YAAa3Z,EAAO4Z,WACpBC,OAAQ7Z,EAAO6Z,QAEjB96B,QAASvI,KAAKuI,QACdixB,IAAyB,QAApB,EAAW,OAAXqH,QAAW,IAAXA,OAAW,EAAXA,EAAahH,eAAO,eAAE1O,eAC3B,QARiB,GAQjB,SARMnP,EAAI,EAAJA,OAAM1S,EAAK,EAALA,OAUH,CAAF,yCACA,CAAE0S,KAAM,KAAM1S,MAAAA,IAAO,QAK7B,OAFa,QAAV,EAAI,OAAJ0S,QAAI,IAAJA,OAAI,EAAJA,EAAMsnB,YAAI,eAAEC,WACdvnB,EAAKsnB,KAAKC,QAAU,4BAAH,OAA+BvnB,EAAKsnB,KAAKC,UAC3D,kBAEM,CAAEvnB,KAAAA,EAAM1S,MAAO,OAAM,sCAExBsvB,GAAY,EAAD,IAAS,CAAF,yCACb,CAAE5c,KAAM,KAAM1S,MAAK,OAAE,+EAMlC,qBAGc,SAAQkgB,8IAEiC,yBAAMxpB,KAAK4gC,aAAY,OAA1C,GAA0C,SAA5DC,EAAW,EAAjB7kB,OAA0B8kB,EAAY,EAAnBx3B,OACT,CAAF,wCACP,CAAE0S,KAAM,KAAM1S,MAAOw3B,IAAc,OAGpB,OAHoB,UAGdvH,GAC5Bv5B,KAAK6G,MACL,OAAM,UACH7G,KAAKqM,IAAG,oBAAYmd,EAAOwZ,SAAQ,WACtC,CACEp6B,KAAM,CAAE6V,KAAM+K,EAAO/K,KAAM+kB,aAAcha,EAAOia,aAChDl7B,QAASvI,KAAKuI,QACdixB,IAAyB,QAApB,EAAW,OAAXqH,QAAW,IAAXA,OAAW,EAAXA,EAAahH,eAAO,eAAE1O,eAE9B,QATkB,GASlB,SATOnP,EAAI,EAAJA,OAAM1S,EAAK,EAALA,OAUH,CAAF,yCACA,CAAE0S,KAAM,KAAM1S,MAAAA,IAAO,QAG9B,OAH8B,UAGxBtJ,KAAKk/B,aAAa,OAAD,QACrBjF,WAAY1K,KAAK2K,MAAMC,KAAKC,MAAQ,KAAQpe,EAAK+d,YAC9C/d,IACH,QACwD,OAA1Dhc,KAAK2+B,sBAAsB,yBAA0B3iB,GAAK,kBAEnD,CAAEA,KAAAA,EAAM1S,MAAAA,IAAO,sCAElBsvB,GAAY,EAAD,IAAS,CAAF,yCACb,CAAE5c,KAAM,KAAM1S,MAAK,OAAE,+EAMlC,wBAGc,SAAWkgB,wIAE8B,yBAAMxpB,KAAK4gC,aAAY,OAA1C,GAA0C,SAA5DC,EAAW,EAAjB7kB,OAA0B8kB,EAAY,EAAnBx3B,OACT,CAAF,wCACP,CAAE0S,KAAM,KAAM1S,MAAOw3B,IAAc,OAGrC,OAHqC,UAG/BvH,GACXv5B,KAAK6G,MACL,OAAM,UACH7G,KAAKqM,IAAG,oBAAYmd,EAAOwZ,SAAQ,cACtC,CACEz6B,QAASvI,KAAKuI,QACdixB,IAAyB,QAApB,EAAW,OAAXqH,QAAW,IAAXA,OAAW,EAAXA,EAAahH,eAAO,eAAE1O,eAE9B,+EAEGyN,GAAY,EAAD,IAAS,CAAF,yCACb,CAAE5c,KAAM,KAAM1S,MAAK,OAAE,+EAMlC,iCAGc,SACZkgB,kIAEuD,gBAAMxpB,KAAKq+B,WAAW,CAC3E2E,SAAUxZ,EAAOwZ,WACjB,OAFgC,GAEhC,SAFYU,EAAa,EAAnB1nB,OAA4B2nB,EAAc,EAArBr6B,OAGT,CAAF,wCACT,CAAE0S,KAAM,KAAM1S,MAAOq6B,IAAgB,OAEvC,OAFuC,SAEjC3jC,KAAK+9B,QAAQ,CACxBiF,SAAUxZ,EAAOwZ,SACjBS,YAAaC,EAAc3X,GAC3BtN,KAAM+K,EAAO/K,OACb,2FAGJ,0BAGc,8IAIR,gBAAMze,KAAKqhC,UAAS,OADjB,GACiB,SAFdhH,EAAI,EAAZre,KAAQqe,OACD0G,EAAS,EAAhBz3B,OAEa,CAAF,wCACJ,CAAE0S,KAAM,KAAM1S,MAAOy3B,IAAW,OAMxC,OAHKpE,GAAc,OAAJtC,QAAI,IAAJA,OAAI,EAAJA,EAAMsC,UAAW,GAC3B2G,EAAO3G,EAAQ/c,QACnB,SAACgkB,GAAM,MAA4B,SAAvBA,EAAOT,aAA4C,aAAlBS,EAAOn2B,MAAqB,IAC1E,kBAEM,CACLuO,KAAM,CACJuU,IAAKoM,EACL2G,KAAAA,GAEFh6B,MAAO,OACR,mDAGH,6CAGc,0JAIR,gBAAMtJ,KAAK4gC,aAAY,OADpB,GACoB,SAFjB/G,EAAO,EAAf7d,KAAQ6d,UACDiH,EAAY,EAAnBx3B,OAEgB,CAAF,wCACP,CAAE0S,KAAM,KAAM1S,MAAOw3B,IAAc,UAEvCjH,EAAS,CAAF,wCACH,CACL7d,KAAM,CAAE6nB,aAAc,KAAMC,UAAW,KAAMC,6BAA8B,IAC3Ez6B,MAAO,OACR,OAoBmD,OAjBhDwZ,EAAU9iB,KAAKgkC,WAAWnK,EAAQ1O,cAEpC0Y,EAAoD,KAEpD/gB,EAAQmhB,MACVJ,EAAe/gB,EAAQmhB,KAGrBH,EAAiDD,GAG2B,QAA9E,EAAoB,QAApB,EAAAhK,EAAQQ,KAAKsC,eAAO,eAAE/c,QAAO,SAACgkB,GAAc,MAAuB,aAAlBA,EAAOn2B,MAAqB,WAAC,QAAI,IAEhEpM,OAAS,IAC3ByiC,EAAY,QAGRC,EAA+BjhB,EAAQohB,KAAO,GAAE,kBAE/C,CAAEloB,KAAM,CAAE6nB,aAAAA,EAAcC,UAAAA,EAAWC,6BAAAA,GAAgCz6B,MAAO,OAAM,qDACxF,EAx7C8B,GClFpB66B,GAAmB,8BAC9B,WAAY/3B,GAAkC,6BACtCA,EACR,CAAC,YAH6B,CAAQgxB,2SCiBlCgH,GAAyB,CAC7B77B,QAAS8Y,IAGLgjB,GAAqB,CACzBxmB,OAAQ,UAGJymB,GAAkD,CACtDtH,kBAAkB,EAClBC,gBAAgB,EAChBC,oBAAoB,GAGhBqH,GAAkD,CAAC,EAOpCC,GAAc,WAwCjC,WACYC,EACAzO,EACV5pB,uBAEA,GAF2C,UAFjC,KAAAq4B,YAAAA,EACA,KAAAzO,YAAAA,GAGLyO,EAAa,MAAM,IAAIjkC,MAAM,4BAClC,IAAKw1B,EAAa,MAAM,IAAIx1B,MAAM,4BAElC,IAAMkkC,EAAkCD,EC7E/B/iC,QAAQ,MAAO,IDoFxB,GALA1B,KAAK2kC,YAAc,UAAGD,EAAY,gBAAehjC,QAAQ,SAAU,MACnE1B,KAAK4kC,QAAU,GAAH,OAAMF,EAAY,YAC9B1kC,KAAK6kC,WAAa,GAAH,OAAMH,EAAY,eAEdA,EAAatmB,MAAM,iCACtB,CACd,IAAM0mB,EAAWJ,EAAa13B,MAAM,KACpChN,KAAK+kC,aAAe,GAAH,OAAMD,EAAS,GAAE,sBAAcA,EAAS,GAAE,YAAIA,EAAS,SAExE9kC,KAAK+kC,aAAe,GAAH,OAAML,EAAY,iBAGrC,IAAMM,EAAoB,MAAH,OAAS,IAAIxjB,IAAIxhB,KAAK4kC,SAASK,SAASj4B,MAAM,KAAK,GAAE,eAQtEwS,EC9FJ,SAMJpT,EACA84B,GAEA,IACMC,EAIF/4B,EAJFg5B,GACMC,EAGJj5B,EAHFk5B,KACUC,EAERn5B,EAFFo5B,SACQC,EACNr5B,EADF1F,OAGI29B,EAIFa,EAJFE,GACMd,EAGJY,EAHFI,KACUf,EAERW,EAFFM,SACQpB,EACNc,EADFx+B,OAGF,MAAO,CACL0+B,GAAI,OAAF,wBACGf,GACAc,GAELG,KAAM,OAAF,wBACChB,GACAe,GAELG,SAAU,OAAF,wBACHjB,GACAgB,GAEL7+B,OAAQ,OAAF,wBACD09B,GACAqB,GAGT,CDsDqBC,CAA4B,OAAPt5B,QAAO,IAAPA,EAAAA,EAAW,CAAC,EAPjC,CACfg5B,GAAIf,GACJmB,SAAUjB,GACVe,KAAM,OAAF,wBAAOhB,IAAoB,CAAEvH,WAAYiI,IAC7Ct+B,OAAQ09B,KAKVpkC,KAAK+8B,WAAsC,QAAzB,EAAa,QAAb,EAAAvd,EAAS8lB,YAAI,eAAEvI,kBAAU,QAAI,GAC/C/8B,KAAKuI,QAAkC,QAAxB,EAAe,QAAf,EAAAiX,EAAS9Y,cAAM,eAAE6B,eAAO,QAAI,CAAC,EAE5CvI,KAAKslC,KAAOtlC,KAAK2lC,wBACF,QAAb,EAAAnmB,EAAS8lB,YAAI,QAAI,CAAC,EAClBtlC,KAAKuI,QACU,QAAf,EAAAiX,EAAS9Y,cAAM,eAAEG,OAEnB7G,KAAK6G,MAAQkvB,GAAcC,EAAah2B,KAAK4lC,gBAAgB/gC,KAAK7E,MAAsB,QAAf,EAAAwf,EAAS9Y,cAAM,eAAEG,OAE1F7G,KAAKwlC,SAAWxlC,KAAK6lC,oBAAoB,OAAD,QAAGt9B,QAASvI,KAAKuI,SAAYiX,EAASgmB,WAC9ExlC,KAAK86B,KAAO,IAAIxZ,EAAgB,GAAD,OAAIojB,EAAY,YAAY,CACzDn8B,QAASvI,KAAKuI,QACdsV,OAAmB,QAAX,EAAA2B,EAAS4lB,UAAE,eAAEvnB,OACrBhX,MAAO7G,KAAK6G,QAGd7G,KAAK8lC,sBACP,CAwKC,OAtKD,0BAGA,WACE,OAAO,IAAIzqB,EAAgBrb,KAAK+kC,aAAc,CAC5Cx8B,QAASvI,KAAKuI,QACdsQ,YAAa7Y,KAAK6G,OAEtB,GAEA,mBAGA,WACE,OAAO,IAAIk/B,GAAsB/lC,KAAK6kC,WAAY7kC,KAAKuI,QAASvI,KAAK6G,MACvE,GAAC,kBAeD,SAAK0a,GACH,OAAOvhB,KAAK86B,KAAKve,KAAKgF,EACxB,GAEA,iBASA,SAIEpO,GAKC,IAJD4F,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAA0B,CAAC,EAC3B3M,EAGC,uCAUD,OAAOpM,KAAK86B,KAAKkL,IAAI7yB,EAAI4F,EAAM3M,EACjC,GAEA,qBAOA,SAAQvE,GAA2D,IAA7C0c,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAA+B,CAAElE,OAAQ,CAAC,GAC9D,OAAOrgB,KAAKwlC,SAASxiB,QAAQnb,EAAM0c,EACrC,GAEA,yBAGA,WACE,OAAOvkB,KAAKwlC,SAASS,aACvB,GAEA,2BAMA,SAAcjjB,GACZ,OAAOhjB,KAAKwlC,SAASU,cAAcljB,EACrC,GAEA,+BAGA,WACE,OAAOhjB,KAAKwlC,SAASW,mBACvB,GAAC,6BAEa,gJACK,gBAAMnmC,KAAKslC,KAAK1E,aAAY,OAAjC,OAAiC,SAArC5kB,EAAI,EAAJA,KAAI,kBAEqB,QAA1B,EAAY,QAAZ,EAAAA,EAAK6d,eAAO,eAAE1O,oBAAY,QAAI,MAAI,kDAC1C,qCAEO,WAQN5iB,EACA1B,GAAa,IAPXm2B,EAAgB,EAAhBA,iBACAC,EAAc,EAAdA,eACAC,EAAkB,EAAlBA,mBACA9F,EAAO,EAAPA,QACA2F,EAAU,EAAVA,WAKIqJ,EAAc,CAClB7qB,cAAe,UAAF,OAAYvb,KAAKg2B,aAC9BqQ,OAAQ,GAAF,OAAKrmC,KAAKg2B,cAElB,OAAO,IAAImO,GAAmB,CAC5B93B,IAAKrM,KAAK4kC,QACVr8B,QAAS,OAAF,wBAAO69B,GAAgB79B,GAC9Bw0B,WAAYA,EACZC,iBAAAA,EACAC,eAAAA,EACAC,mBAAAA,EACA9F,QAAAA,EACAvwB,MAAAA,GAEJ,GAAC,iCAEO,SAAoBuF,GAC1B,OAAO,IAAIkiB,GAAetuB,KAAK2kC,YAAa,OAAF,wBACrCv4B,GAAO,CACVod,OAAQ,OAAF,OAAO,CAAE6c,OAAQrmC,KAAKg2B,aAAyB,OAAP5pB,QAAO,IAAPA,OAAO,EAAPA,EAASod,UAE3D,GAAC,kCAEO,WAAoB,WAI1B,OAHWxpB,KAAKslC,KAAKgB,mBAAkB,SAACzjB,EAAOgX,GAC7C,EAAK0M,oBAAoB1jB,EAAc,OAAPgX,QAAO,IAAPA,OAAO,EAAPA,EAAS1O,aAAc,SACzD,GAEF,GAAC,iCAEO,SACNtI,EACAvH,EACAkrB,GAGa,oBAAV3jB,GAAyC,cAAVA,GAChC7iB,KAAKymC,qBAAuBnrB,EAMT,eAAVuH,GAAoC,iBAAVA,IAEnC7iB,KAAKwlC,SAASja,QAAQvrB,KAAKg2B,aACb,WAAVwQ,GAAqBxmC,KAAKslC,KAAK3D,UACnC3hC,KAAKymC,wBAAqBp+B,IAP1BrI,KAAKwlC,SAASja,QAAa,OAALjQ,QAAK,IAALA,EAAAA,EAAS,MAE/Btb,KAAKymC,mBAAqBnrB,EAO9B,KAAC,EAlQgC,IEjBP,SAS1BmpB,EACAzO,EACA5pB,GAEO,IAAIo4B,GAAeC,EAAazO,EAAa5pB,EACtD,ECjCwBs6B,CAHJC,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYC,uBACRD,CAAAA,SAAAA,aAAAA,WAAAA,GAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,qBAAAA,EAAAA,cAAAA,GAAYE","sources":["../node_modules/react/cjs/react-jsx-runtime.production.min.js","../node_modules/react/cjs/react.production.min.js","../node_modules/react/index.js","../node_modules/react/jsx-runtime.js","../../node_modules/cross-fetch/dist/browser-ponyfill.js","../../node_modules/es5-ext/global.js","../../node_modules/websocket/lib/browser.js","../../node_modules/websocket/lib/version.js","../webpack/bootstrap","../webpack/runtime/compat get default export","../webpack/runtime/create fake namespace object","../webpack/runtime/define property getters","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/make namespace object","../node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js","../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/toPropertyKey.js","../node_modules/@babel/runtime/helpers/esm/toPrimitive.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../../node_modules/@supabase/functions-js/src/helper.ts","../node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/@babel/runtime/helpers/esm/isNativeReflectConstruct.js","../node_modules/@babel/runtime/helpers/esm/createSuper.js","../node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/@babel/runtime/helpers/esm/set.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/construct.js","../node_modules/@babel/runtime/helpers/esm/wrapNativeSuper.js","../node_modules/@babel/runtime/helpers/esm/isNativeFunction.js","../../node_modules/@supabase/functions-js/src/types.ts","../../node_modules/@supabase/functions-js/src/FunctionsClient.ts","../node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","../node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../../node_modules/@supabase/realtime-js/src/lib/constants.ts","../../node_modules/@supabase/postgrest-js/src/PostgrestBuilder.ts","../../node_modules/@supabase/postgrest-js/src/PostgrestTransformBuilder.ts","../../node_modules/@supabase/postgrest-js/src/PostgrestFilterBuilder.ts","../../node_modules/@supabase/postgrest-js/src/PostgrestQueryBuilder.ts","../../node_modules/@supabase/postgrest-js/src/constants.ts","../../node_modules/@supabase/postgrest-js/src/version.ts","../../node_modules/@supabase/postgrest-js/src/PostgrestClient.ts","../../node_modules/@supabase/realtime-js/src/lib/version.ts","../../node_modules/@supabase/realtime-js/src/lib/timer.ts","../../node_modules/@supabase/realtime-js/src/RealtimePresence.ts","../../node_modules/@supabase/realtime-js/src/lib/serializer.ts","../../node_modules/@supabase/realtime-js/src/lib/push.ts","../../node_modules/@supabase/realtime-js/src/lib/transformers.ts","../../node_modules/@supabase/realtime-js/src/RealtimeChannel.ts","../../node_modules/@supabase/realtime-js/src/RealtimeClient.ts","../../node_modules/@supabase/storage-js/src/lib/errors.ts","../../node_modules/@supabase/storage-js/src/lib/helpers.ts","../../node_modules/@supabase/storage-js/src/lib/fetch.ts","../../node_modules/@supabase/storage-js/src/packages/StorageFileApi.ts","../../node_modules/@supabase/storage-js/src/lib/constants.ts","../../node_modules/@supabase/storage-js/src/lib/version.ts","../../node_modules/@supabase/storage-js/src/packages/StorageBucketApi.ts","../../node_modules/@supabase/storage-js/src/StorageClient.ts","../../node_modules/@supabase/supabase-js/src/lib/constants.ts","../../node_modules/@supabase/supabase-js/src/lib/version.ts","../../node_modules/@supabase/supabase-js/src/lib/fetch.ts","../../node_modules/@supabase/gotrue-js/src/lib/helpers.ts","../../node_modules/@supabase/gotrue-js/src/lib/errors.ts","../../node_modules/@supabase/gotrue-js/src/lib/fetch.ts","../../node_modules/@supabase/gotrue-js/src/GoTrueAdminApi.ts","../../node_modules/@supabase/gotrue-js/src/lib/constants.ts","../../node_modules/@supabase/gotrue-js/src/lib/version.ts","../../node_modules/@supabase/gotrue-js/src/lib/local-storage.ts","../../node_modules/@supabase/gotrue-js/src/lib/polyfills.ts","../../node_modules/@supabase/gotrue-js/src/GoTrueClient.ts","../../node_modules/@supabase/supabase-js/src/lib/SupabaseAuthClient.ts","../../node_modules/@supabase/supabase-js/src/SupabaseClient.ts","../../node_modules/@supabase/supabase-js/src/lib/helpers.ts","../../node_modules/@supabase/supabase-js/src/index.ts","supabaseClient.js"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","/**\n * @license React\n * react.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var l=Symbol.for(\"react.element\"),n=Symbol.for(\"react.portal\"),p=Symbol.for(\"react.fragment\"),q=Symbol.for(\"react.strict_mode\"),r=Symbol.for(\"react.profiler\"),t=Symbol.for(\"react.provider\"),u=Symbol.for(\"react.context\"),v=Symbol.for(\"react.forward_ref\"),w=Symbol.for(\"react.suspense\"),x=Symbol.for(\"react.memo\"),y=Symbol.for(\"react.lazy\"),z=Symbol.iterator;function A(a){if(null===a||\"object\"!==typeof a)return null;a=z&&a[z]||a[\"@@iterator\"];return\"function\"===typeof a?a:null}\nvar B={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},C=Object.assign,D={};function E(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}E.prototype.isReactComponent={};\nE.prototype.setState=function(a,b){if(\"object\"!==typeof a&&\"function\"!==typeof a&&null!=a)throw Error(\"setState(...): takes an object of state variables to update or a function which returns an object of state variables.\");this.updater.enqueueSetState(this,a,b,\"setState\")};E.prototype.forceUpdate=function(a){this.updater.enqueueForceUpdate(this,a,\"forceUpdate\")};function F(){}F.prototype=E.prototype;function G(a,b,e){this.props=a;this.context=b;this.refs=D;this.updater=e||B}var H=G.prototype=new F;\nH.constructor=G;C(H,E.prototype);H.isPureReactComponent=!0;var I=Array.isArray,J=Object.prototype.hasOwnProperty,K={current:null},L={key:!0,ref:!0,__self:!0,__source:!0};\nfunction M(a,b,e){var d,c={},k=null,h=null;if(null!=b)for(d in void 0!==b.ref&&(h=b.ref),void 0!==b.key&&(k=\"\"+b.key),b)J.call(b,d)&&!L.hasOwnProperty(d)&&(c[d]=b[d]);var g=arguments.length-2;if(1===g)c.children=e;else if(1<g){for(var f=Array(g),m=0;m<g;m++)f[m]=arguments[m+2];c.children=f}if(a&&a.defaultProps)for(d in g=a.defaultProps,g)void 0===c[d]&&(c[d]=g[d]);return{$$typeof:l,type:a,key:k,ref:h,props:c,_owner:K.current}}\nfunction N(a,b){return{$$typeof:l,type:a.type,key:b,ref:a.ref,props:a.props,_owner:a._owner}}function O(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===l}function escape(a){var b={\"=\":\"=0\",\":\":\"=2\"};return\"$\"+a.replace(/[=:]/g,function(a){return b[a]})}var P=/\\/+/g;function Q(a,b){return\"object\"===typeof a&&null!==a&&null!=a.key?escape(\"\"+a.key):b.toString(36)}\nfunction R(a,b,e,d,c){var k=typeof a;if(\"undefined\"===k||\"boolean\"===k)a=null;var h=!1;if(null===a)h=!0;else switch(k){case \"string\":case \"number\":h=!0;break;case \"object\":switch(a.$$typeof){case l:case n:h=!0}}if(h)return h=a,c=c(h),a=\"\"===d?\".\"+Q(h,0):d,I(c)?(e=\"\",null!=a&&(e=a.replace(P,\"$&/\")+\"/\"),R(c,b,e,\"\",function(a){return a})):null!=c&&(O(c)&&(c=N(c,e+(!c.key||h&&h.key===c.key?\"\":(\"\"+c.key).replace(P,\"$&/\")+\"/\")+a)),b.push(c)),1;h=0;d=\"\"===d?\".\":d+\":\";if(I(a))for(var g=0;g<a.length;g++){k=\na[g];var f=d+Q(k,g);h+=R(k,b,e,f,c)}else if(f=A(a),\"function\"===typeof f)for(a=f.call(a),g=0;!(k=a.next()).done;)k=k.value,f=d+Q(k,g++),h+=R(k,b,e,f,c);else if(\"object\"===k)throw b=String(a),Error(\"Objects are not valid as a React child (found: \"+(\"[object Object]\"===b?\"object with keys {\"+Object.keys(a).join(\", \")+\"}\":b)+\"). If you meant to render a collection of children, use an array instead.\");return h}\nfunction S(a,b,e){if(null==a)return a;var d=[],c=0;R(a,d,\"\",\"\",function(a){return b.call(e,a,c++)});return d}function T(a){if(-1===a._status){var b=a._result;b=b();b.then(function(b){if(0===a._status||-1===a._status)a._status=1,a._result=b},function(b){if(0===a._status||-1===a._status)a._status=2,a._result=b});-1===a._status&&(a._status=0,a._result=b)}if(1===a._status)return a._result.default;throw a._result;}\nvar U={current:null},V={transition:null},W={ReactCurrentDispatcher:U,ReactCurrentBatchConfig:V,ReactCurrentOwner:K};exports.Children={map:S,forEach:function(a,b,e){S(a,function(){b.apply(this,arguments)},e)},count:function(a){var b=0;S(a,function(){b++});return b},toArray:function(a){return S(a,function(a){return a})||[]},only:function(a){if(!O(a))throw Error(\"React.Children.only expected to receive a single React element child.\");return a}};exports.Component=E;exports.Fragment=p;\nexports.Profiler=r;exports.PureComponent=G;exports.StrictMode=q;exports.Suspense=w;exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=W;\nexports.cloneElement=function(a,b,e){if(null===a||void 0===a)throw Error(\"React.cloneElement(...): The argument must be a React element, but you passed \"+a+\".\");var d=C({},a.props),c=a.key,k=a.ref,h=a._owner;if(null!=b){void 0!==b.ref&&(k=b.ref,h=K.current);void 0!==b.key&&(c=\"\"+b.key);if(a.type&&a.type.defaultProps)var g=a.type.defaultProps;for(f in b)J.call(b,f)&&!L.hasOwnProperty(f)&&(d[f]=void 0===b[f]&&void 0!==g?g[f]:b[f])}var f=arguments.length-2;if(1===f)d.children=e;else if(1<f){g=Array(f);\nfor(var m=0;m<f;m++)g[m]=arguments[m+2];d.children=g}return{$$typeof:l,type:a.type,key:c,ref:k,props:d,_owner:h}};exports.createContext=function(a){a={$$typeof:u,_currentValue:a,_currentValue2:a,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null};a.Provider={$$typeof:t,_context:a};return a.Consumer=a};exports.createElement=M;exports.createFactory=function(a){var b=M.bind(null,a);b.type=a;return b};exports.createRef=function(){return{current:null}};\nexports.forwardRef=function(a){return{$$typeof:v,render:a}};exports.isValidElement=O;exports.lazy=function(a){return{$$typeof:y,_payload:{_status:-1,_result:a},_init:T}};exports.memo=function(a,b){return{$$typeof:x,type:a,compare:void 0===b?null:b}};exports.startTransition=function(a){var b=V.transition;V.transition={};try{a()}finally{V.transition=b}};exports.unstable_act=function(){throw Error(\"act(...) is not supported in production builds of React.\");};\nexports.useCallback=function(a,b){return U.current.useCallback(a,b)};exports.useContext=function(a){return U.current.useContext(a)};exports.useDebugValue=function(){};exports.useDeferredValue=function(a){return U.current.useDeferredValue(a)};exports.useEffect=function(a,b){return U.current.useEffect(a,b)};exports.useId=function(){return U.current.useId()};exports.useImperativeHandle=function(a,b,e){return U.current.useImperativeHandle(a,b,e)};\nexports.useInsertionEffect=function(a,b){return U.current.useInsertionEffect(a,b)};exports.useLayoutEffect=function(a,b){return U.current.useLayoutEffect(a,b)};exports.useMemo=function(a,b){return U.current.useMemo(a,b)};exports.useReducer=function(a,b,e){return U.current.useReducer(a,b,e)};exports.useRef=function(a){return U.current.useRef(a)};exports.useState=function(a){return U.current.useState(a)};exports.useSyncExternalStore=function(a,b,e){return U.current.useSyncExternalStore(a,b,e)};\nexports.useTransition=function(){return U.current.useTransition()};exports.version=\"18.2.0\";\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react.production.min.js');\n} else {\n  module.exports = require('./cjs/react.development.js');\n}\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","var naiveFallback = function () {\n\tif (typeof self === \"object\" && self) return self;\n\tif (typeof window === \"object\" && window) return window;\n\tthrow new Error(\"Unable to resolve global `this`\");\n};\n\nmodule.exports = (function () {\n\tif (this) return this;\n\n\t// Unexpected strict mode (may happen if e.g. bundled into ESM module)\n\n\t// Fallback to standard globalThis if available\n\tif (typeof globalThis === \"object\" && globalThis) return globalThis;\n\n\t// Thanks @mathiasbynens -> https://mathiasbynens.be/notes/globalthis\n\t// In all ES5+ engines global object inherits from Object.prototype\n\t// (if you approached one that doesn't please report)\n\ttry {\n\t\tObject.defineProperty(Object.prototype, \"__global__\", {\n\t\t\tget: function () { return this; },\n\t\t\tconfigurable: true\n\t\t});\n\t} catch (error) {\n\t\t// Unfortunate case of updates to Object.prototype being restricted\n\t\t// via preventExtensions, seal or freeze\n\t\treturn naiveFallback();\n\t}\n\ttry {\n\t\t// Safari case (window.__global__ works, but __global__ does not)\n\t\tif (!__global__) return naiveFallback();\n\t\treturn __global__;\n\t} finally {\n\t\tdelete Object.prototype.__global__;\n\t}\n})();\n","var _globalThis;\nif (typeof globalThis === 'object') {\n\t_globalThis = globalThis;\n} else {\n\ttry {\n\t\t_globalThis = require('es5-ext/global');\n\t} catch (error) {\n\t} finally {\n\t\tif (!_globalThis && typeof window !== 'undefined') { _globalThis = window; }\n\t\tif (!_globalThis) { throw new Error('Could not determine global this'); }\n\t}\n}\n\nvar NativeWebSocket = _globalThis.WebSocket || _globalThis.MozWebSocket;\nvar websocket_version = require('./version');\n\n\n/**\n * Expose a W3C WebSocket class with just one or two arguments.\n */\nfunction W3CWebSocket(uri, protocols) {\n\tvar native_instance;\n\n\tif (protocols) {\n\t\tnative_instance = new NativeWebSocket(uri, protocols);\n\t}\n\telse {\n\t\tnative_instance = new NativeWebSocket(uri);\n\t}\n\n\t/**\n\t * 'native_instance' is an instance of nativeWebSocket (the browser's WebSocket\n\t * class). Since it is an Object it will be returned as it is when creating an\n\t * instance of W3CWebSocket via 'new W3CWebSocket()'.\n\t *\n\t * ECMAScript 5: http://bclary.com/2004/11/07/#a-13.2.2\n\t */\n\treturn native_instance;\n}\nif (NativeWebSocket) {\n\t['CONNECTING', 'OPEN', 'CLOSING', 'CLOSED'].forEach(function(prop) {\n\t\tObject.defineProperty(W3CWebSocket, prop, {\n\t\t\tget: function() { return NativeWebSocket[prop]; }\n\t\t});\n\t});\n}\n\n/**\n * Module exports.\n */\nmodule.exports = {\n    'w3cwebsocket' : NativeWebSocket ? W3CWebSocket : null,\n    'version'      : websocket_version\n};\n","module.exports = require('../package.json').version;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? function(obj) { return Object.getPrototypeOf(obj); } : function(obj) { return obj.__proto__; };\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach(function(key) { def[key] = function() { return value[key]; }; });\n\t}\n\tdef['default'] = function() { return value; };\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export default function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}","import _typeof from \"./typeof.js\";\nexport default function _regeneratorRuntime() {\n  \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */\n  _regeneratorRuntime = function _regeneratorRuntime() {\n    return exports;\n  };\n  var exports = {},\n    Op = Object.prototype,\n    hasOwn = Op.hasOwnProperty,\n    defineProperty = Object.defineProperty || function (obj, key, desc) {\n      obj[key] = desc.value;\n    },\n    $Symbol = \"function\" == typeof Symbol ? Symbol : {},\n    iteratorSymbol = $Symbol.iterator || \"@@iterator\",\n    asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\",\n    toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n  function define(obj, key, value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: !0,\n      configurable: !0,\n      writable: !0\n    }), obj[key];\n  }\n  try {\n    define({}, \"\");\n  } catch (err) {\n    define = function define(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator,\n      generator = Object.create(protoGenerator.prototype),\n      context = new Context(tryLocsList || []);\n    return defineProperty(generator, \"_invoke\", {\n      value: makeInvokeMethod(innerFn, self, context)\n    }), generator;\n  }\n  function tryCatch(fn, obj, arg) {\n    try {\n      return {\n        type: \"normal\",\n        arg: fn.call(obj, arg)\n      };\n    } catch (err) {\n      return {\n        type: \"throw\",\n        arg: err\n      };\n    }\n  }\n  exports.wrap = wrap;\n  var ContinueSentinel = {};\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n  var getProto = Object.getPrototypeOf,\n    NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype);\n  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function (method) {\n      define(prototype, method, function (arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (\"throw\" !== record.type) {\n        var result = record.arg,\n          value = result.value;\n        return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) {\n          invoke(\"next\", value, resolve, reject);\n        }, function (err) {\n          invoke(\"throw\", err, resolve, reject);\n        }) : PromiseImpl.resolve(value).then(function (unwrapped) {\n          result.value = unwrapped, resolve(result);\n        }, function (error) {\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n      reject(record.arg);\n    }\n    var previousPromise;\n    defineProperty(this, \"_invoke\", {\n      value: function value(method, arg) {\n        function callInvokeWithMethodAndArg() {\n          return new PromiseImpl(function (resolve, reject) {\n            invoke(method, arg, resolve, reject);\n          });\n        }\n        return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n      }\n    });\n  }\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = \"suspendedStart\";\n    return function (method, arg) {\n      if (\"executing\" === state) throw new Error(\"Generator is already running\");\n      if (\"completed\" === state) {\n        if (\"throw\" === method) throw arg;\n        return doneResult();\n      }\n      for (context.method = method, context.arg = arg;;) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n        if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) {\n          if (\"suspendedStart\" === state) throw state = \"completed\", context.arg;\n          context.dispatchException(context.arg);\n        } else \"return\" === context.method && context.abrupt(\"return\", context.arg);\n        state = \"executing\";\n        var record = tryCatch(innerFn, self, context);\n        if (\"normal\" === record.type) {\n          if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue;\n          return {\n            value: record.arg,\n            done: context.done\n          };\n        }\n        \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg);\n      }\n    };\n  }\n  function maybeInvokeDelegate(delegate, context) {\n    var methodName = context.method,\n      method = delegate.iterator[methodName];\n    if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator[\"return\"] && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel;\n    var record = tryCatch(method, delegate.iterator, context.arg);\n    if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel;\n    var info = record.arg;\n    return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel);\n  }\n  function pushTryEntry(locs) {\n    var entry = {\n      tryLoc: locs[0]\n    };\n    1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry);\n  }\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\", delete record.arg, entry.completion = record;\n  }\n  function Context(tryLocsList) {\n    this.tryEntries = [{\n      tryLoc: \"root\"\n    }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0);\n  }\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) return iteratorMethod.call(iterable);\n      if (\"function\" == typeof iterable.next) return iterable;\n      if (!isNaN(iterable.length)) {\n        var i = -1,\n          next = function next() {\n            for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next;\n            return next.value = undefined, next.done = !0, next;\n          };\n        return next.next = next;\n      }\n    }\n    return {\n      next: doneResult\n    };\n  }\n  function doneResult() {\n    return {\n      value: undefined,\n      done: !0\n    };\n  }\n  return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", {\n    value: GeneratorFunctionPrototype,\n    configurable: !0\n  }), defineProperty(GeneratorFunctionPrototype, \"constructor\", {\n    value: GeneratorFunction,\n    configurable: !0\n  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) {\n    var ctor = \"function\" == typeof genFun && genFun.constructor;\n    return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name));\n  }, exports.mark = function (genFun) {\n    return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun;\n  }, exports.awrap = function (arg) {\n    return {\n      __await: arg\n    };\n  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    void 0 === PromiseImpl && (PromiseImpl = Promise);\n    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);\n    return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) {\n      return result.done ? result.value : iter.next();\n    });\n  }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () {\n    return this;\n  }), define(Gp, \"toString\", function () {\n    return \"[object Generator]\";\n  }), exports.keys = function (val) {\n    var object = Object(val),\n      keys = [];\n    for (var key in object) keys.push(key);\n    return keys.reverse(), function next() {\n      for (; keys.length;) {\n        var key = keys.pop();\n        if (key in object) return next.value = key, next.done = !1, next;\n      }\n      return next.done = !0, next;\n    };\n  }, exports.values = values, Context.prototype = {\n    constructor: Context,\n    reset: function reset(skipTempReset) {\n      if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined);\n    },\n    stop: function stop() {\n      this.done = !0;\n      var rootRecord = this.tryEntries[0].completion;\n      if (\"throw\" === rootRecord.type) throw rootRecord.arg;\n      return this.rval;\n    },\n    dispatchException: function dispatchException(exception) {\n      if (this.done) throw exception;\n      var context = this;\n      function handle(loc, caught) {\n        return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught;\n      }\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i],\n          record = entry.completion;\n        if (\"root\" === entry.tryLoc) return handle(\"end\");\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\"),\n            hasFinally = hasOwn.call(entry, \"finallyLoc\");\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0);\n          } else {\n            if (!hasFinally) throw new Error(\"try statement without catch or finally\");\n            if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc);\n          }\n        }\n      }\n    },\n    abrupt: function abrupt(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n      finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null);\n      var record = finallyEntry ? finallyEntry.completion : {};\n      return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record);\n    },\n    complete: function complete(record, afterLoc) {\n      if (\"throw\" === record.type) throw record.arg;\n      return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel;\n    },\n    finish: function finish(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel;\n      }\n    },\n    \"catch\": function _catch(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (\"throw\" === record.type) {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n      throw new Error(\"illegal catch attempt\");\n    },\n    delegateYield: function delegateYield(iterable, resultName, nextLoc) {\n      return this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel;\n    }\n  }, exports;\n}","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","import _typeof from \"./typeof.js\";\nimport toPrimitive from \"./toPrimitive.js\";\nexport default function _toPropertyKey(arg) {\n  var key = toPrimitive(arg, \"string\");\n  return _typeof(key) === \"symbol\" ? key : String(key);\n}","import _typeof from \"./typeof.js\";\nexport default function _toPrimitive(input, hint) {\n  if (_typeof(input) !== \"object\" || input === null) return input;\n  var prim = input[Symbol.toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}","import toPropertyKey from \"./toPropertyKey.js\";\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, toPropertyKey(descriptor.key), descriptor);\n  }\n}\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}","import { Fetch } from './types'\n\nexport const resolveFetch = (customFetch?: Fetch): Fetch => {\n  let _fetch: Fetch\n  if (customFetch) {\n    _fetch = customFetch\n  } else if (typeof fetch === 'undefined') {\n    _fetch = async (...args) => await (await import('cross-fetch')).fetch(...args)\n  } else {\n    _fetch = fetch\n  }\n  return (...args) => _fetch(...args)\n}\n","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","export default function _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nimport possibleConstructorReturn from \"./possibleConstructorReturn.js\";\nexport default function _createSuper(Derived) {\n  var hasNativeReflectConstruct = isNativeReflectConstruct();\n  return function _createSuperInternal() {\n    var Super = getPrototypeOf(Derived),\n      result;\n    if (hasNativeReflectConstruct) {\n      var NewTarget = getPrototypeOf(this).constructor;\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n    return possibleConstructorReturn(this, result);\n  };\n}","import _typeof from \"./typeof.js\";\nimport assertThisInitialized from \"./assertThisInitialized.js\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return assertThisInitialized(self);\n}","import superPropBase from \"./superPropBase.js\";\nimport defineProperty from \"./defineProperty.js\";\nfunction set(target, property, value, receiver) {\n  if (typeof Reflect !== \"undefined\" && Reflect.set) {\n    set = Reflect.set;\n  } else {\n    set = function set(target, property, value, receiver) {\n      var base = superPropBase(target, property);\n      var desc;\n      if (base) {\n        desc = Object.getOwnPropertyDescriptor(base, property);\n        if (desc.set) {\n          desc.set.call(receiver, value);\n          return true;\n        } else if (!desc.writable) {\n          return false;\n        }\n      }\n      desc = Object.getOwnPropertyDescriptor(receiver, property);\n      if (desc) {\n        if (!desc.writable) {\n          return false;\n        }\n        desc.value = value;\n        Object.defineProperty(receiver, property, desc);\n      } else {\n        defineProperty(receiver, property, value);\n      }\n      return true;\n    };\n  }\n  return set(target, property, value, receiver);\n}\nexport default function _set(target, property, value, receiver, isStrict) {\n  var s = set(target, property, value, receiver || target);\n  if (!s && isStrict) {\n    throw new TypeError('failed to set property');\n  }\n  return value;\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","import toPropertyKey from \"./toPropertyKey.js\";\nexport default function _defineProperty(obj, key, value) {\n  key = toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeReflectConstruct from \"./isNativeReflectConstruct.js\";\nexport default function _construct(Parent, args, Class) {\n  if (isNativeReflectConstruct()) {\n    _construct = Reflect.construct.bind();\n  } else {\n    _construct = function _construct(Parent, args, Class) {\n      var a = [null];\n      a.push.apply(a, args);\n      var Constructor = Function.bind.apply(Parent, a);\n      var instance = new Constructor();\n      if (Class) setPrototypeOf(instance, Class.prototype);\n      return instance;\n    };\n  }\n  return _construct.apply(null, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nimport setPrototypeOf from \"./setPrototypeOf.js\";\nimport isNativeFunction from \"./isNativeFunction.js\";\nimport construct from \"./construct.js\";\nexport default function _wrapNativeSuper(Class) {\n  var _cache = typeof Map === \"function\" ? new Map() : undefined;\n  _wrapNativeSuper = function _wrapNativeSuper(Class) {\n    if (Class === null || !isNativeFunction(Class)) return Class;\n    if (typeof Class !== \"function\") {\n      throw new TypeError(\"Super expression must either be null or a function\");\n    }\n    if (typeof _cache !== \"undefined\") {\n      if (_cache.has(Class)) return _cache.get(Class);\n      _cache.set(Class, Wrapper);\n    }\n    function Wrapper() {\n      return construct(Class, arguments, getPrototypeOf(this).constructor);\n    }\n    Wrapper.prototype = Object.create(Class.prototype, {\n      constructor: {\n        value: Wrapper,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n    return setPrototypeOf(Wrapper, Class);\n  };\n  return _wrapNativeSuper(Class);\n}","export default function _isNativeFunction(fn) {\n  return Function.toString.call(fn).indexOf(\"[native code]\") !== -1;\n}","export type Fetch = typeof fetch\n\n/**\n * Response format\n *\n */\nexport interface FunctionsResponseSuccess<T> {\n  data: T\n  error: null\n}\nexport interface FunctionsResponseFailure {\n  data: null\n  error: any\n}\nexport type FunctionsResponse<T> = FunctionsResponseSuccess<T> | FunctionsResponseFailure\n\nexport class FunctionsError extends Error {\n  context: any\n  constructor(message: string, name = 'FunctionsError', context?: any) {\n    super(message)\n    super.name = name\n    this.context = context\n  }\n}\n\nexport class FunctionsFetchError extends FunctionsError {\n  constructor(context: any) {\n    super('Failed to send a request to the Edge Function', 'FunctionsFetchError', context)\n  }\n}\n\nexport class FunctionsRelayError extends FunctionsError {\n  constructor(context: any) {\n    super('Relay Error invoking the Edge Function', 'FunctionsRelayError', context)\n  }\n}\n\nexport class FunctionsHttpError extends FunctionsError {\n  constructor(context: any) {\n    super('Edge Function returned a non-2xx status code', 'FunctionsHttpError', context)\n  }\n}\n\nexport type FunctionInvokeOptions = {\n  /**\n   * object representing the headers to send with the request\n   * */\n  headers?: { [key: string]: string }\n  /**\n   * the body of the request\n   */\n  body?:\n    | File\n    | Blob\n    | ArrayBuffer\n    | FormData\n    | ReadableStream<Uint8Array>\n    | Record<string, any>\n    | string\n}\n","import { resolveFetch } from './helper'\nimport {\n  Fetch,\n  FunctionsFetchError,\n  FunctionsHttpError,\n  FunctionsRelayError,\n  FunctionsResponse,\n  FunctionInvokeOptions,\n} from './types'\n\nexport class FunctionsClient {\n  protected url: string\n  protected headers: Record<string, string>\n  protected fetch: Fetch\n\n  constructor(\n    url: string,\n    {\n      headers = {},\n      customFetch,\n    }: {\n      headers?: Record<string, string>\n      customFetch?: Fetch\n    } = {}\n  ) {\n    this.url = url\n    this.headers = headers\n    this.fetch = resolveFetch(customFetch)\n  }\n\n  /**\n   * Updates the authorization header\n   * @param token - the new jwt token sent in the authorisation header\n   */\n  setAuth(token: string) {\n    this.headers.Authorization = `Bearer ${token}`\n  }\n\n  /**\n   * Invokes a function\n   * @param functionName - the name of the function to invoke\n   */\n  async invoke<T = any>(\n    functionName: string,\n    invokeOptions: FunctionInvokeOptions = {}\n  ): Promise<FunctionsResponse<T>> {\n    try {\n      const { headers, body: functionArgs } = invokeOptions\n\n      let _headers: Record<string, string> = {}\n      let body: any\n      if (\n        functionArgs &&\n        ((headers && !Object.prototype.hasOwnProperty.call(headers, 'Content-Type')) || !headers)\n      ) {\n        if (\n          (typeof Blob !== 'undefined' && functionArgs instanceof Blob) ||\n          functionArgs instanceof ArrayBuffer\n        ) {\n          // will work for File as File inherits Blob\n          // also works for ArrayBuffer as it is the same underlying structure as a Blob\n          _headers['Content-Type'] = 'application/octet-stream'\n          body = functionArgs\n        } else if (typeof functionArgs === 'string') {\n          // plain string\n          _headers['Content-Type'] = 'text/plain'\n          body = functionArgs\n        } else if (typeof FormData !== 'undefined' && functionArgs instanceof FormData) {\n          // don't set content-type headers\n          // Request will automatically add the right boundary value\n          body = functionArgs\n        } else {\n          // default, assume this is JSON\n          _headers['Content-Type'] = 'application/json'\n          body = JSON.stringify(functionArgs)\n        }\n      }\n\n      const response = await this.fetch(`${this.url}/${functionName}`, {\n        method: 'POST',\n        // headers priority is (high to low):\n        // 1. invoke-level headers\n        // 2. client-level headers\n        // 3. default Content-Type header\n        headers: { ..._headers, ...this.headers, ...headers },\n        body,\n      }).catch((fetchError) => {\n        throw new FunctionsFetchError(fetchError)\n      })\n\n      const isRelayError = response.headers.get('x-relay-error')\n      if (isRelayError && isRelayError === 'true') {\n        throw new FunctionsRelayError(response)\n      }\n\n      if (!response.ok) {\n        throw new FunctionsHttpError(response)\n      }\n\n      let responseType = (response.headers.get('Content-Type') ?? 'text/plain').split(';')[0].trim()\n      let data: any\n      if (responseType === 'application/json') {\n        data = await response.json()\n      } else if (responseType === 'application/octet-stream') {\n        data = await response.blob()\n      } else if (responseType === 'multipart/form-data') {\n        data = await response.formData()\n      } else {\n        // default to text\n        data = await response.text()\n      }\n\n      return { data, error: null }\n    } catch (error) {\n      return { data: null, error }\n    }\n  }\n}\n","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = null == arr ? null : \"undefined\" != typeof Symbol && arr[Symbol.iterator] || arr[\"@@iterator\"];\n  if (null != _i) {\n    var _s,\n      _e,\n      _x,\n      _r,\n      _arr = [],\n      _n = !0,\n      _d = !1;\n    try {\n      if (_x = (_i = _i.call(arr)).next, 0 === i) {\n        if (Object(_i) !== _i) return;\n        _n = !1;\n      } else for (; !(_n = (_s = _x.call(_i)).done) && (_arr.push(_s.value), _arr.length !== i); _n = !0);\n    } catch (err) {\n      _d = !0, _e = err;\n    } finally {\n      try {\n        if (!_n && null != _i[\"return\"] && (_r = _i[\"return\"](), Object(_r) !== _r)) return;\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n      args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n      _next(undefined);\n    });\n  };\n}","import { version } from './version'\n\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `realtime-js/${version}` }\n\nexport const VSN: string = '1.0.0'\n\nexport const DEFAULT_TIMEOUT = 10000\n\nexport const WS_CLOSE_NORMAL = 1000\n\nexport enum SOCKET_STATES {\n  connecting = 0,\n  open = 1,\n  closing = 2,\n  closed = 3,\n}\n\nexport enum CHANNEL_STATES {\n  closed = 'closed',\n  errored = 'errored',\n  joined = 'joined',\n  joining = 'joining',\n  leaving = 'leaving',\n}\n\nexport enum CHANNEL_EVENTS {\n  close = 'phx_close',\n  error = 'phx_error',\n  join = 'phx_join',\n  reply = 'phx_reply',\n  leave = 'phx_leave',\n  access_token = 'access_token',\n}\n\nexport enum TRANSPORTS {\n  websocket = 'websocket',\n}\n\nexport enum CONNECTION_STATE {\n  Connecting = 'connecting',\n  Open = 'open',\n  Closing = 'closing',\n  Closed = 'closed',\n}\n","import crossFetch from 'cross-fetch'\n\nimport type { Fetch, PostgrestSingleResponse } from './types'\n\nexport default abstract class PostgrestBuilder<Result>\n  implements PromiseLike<PostgrestSingleResponse<Result>>\n{\n  protected method: 'GET' | 'HEAD' | 'POST' | 'PATCH' | 'DELETE'\n  protected url: URL\n  protected headers: Record<string, string>\n  protected schema?: string\n  protected body?: unknown\n  protected shouldThrowOnError = false\n  protected signal?: AbortSignal\n  protected fetch: Fetch\n  protected allowEmpty: boolean\n\n  constructor(builder: PostgrestBuilder<Result>) {\n    this.method = builder.method\n    this.url = builder.url\n    this.headers = builder.headers\n    this.schema = builder.schema\n    this.body = builder.body\n    this.shouldThrowOnError = builder.shouldThrowOnError\n    this.signal = builder.signal\n    this.allowEmpty = builder.allowEmpty\n\n    if (builder.fetch) {\n      this.fetch = builder.fetch\n    } else if (typeof fetch === 'undefined') {\n      this.fetch = crossFetch\n    } else {\n      this.fetch = fetch\n    }\n  }\n\n  /**\n   * If there's an error with the query, throwOnError will reject the promise by\n   * throwing the error instead of returning it as part of a successful response.\n   *\n   * {@link https://github.com/supabase/supabase-js/issues/92}\n   */\n  throwOnError(): this {\n    this.shouldThrowOnError = true\n    return this\n  }\n\n  then<TResult1 = PostgrestSingleResponse<Result>, TResult2 = never>(\n    onfulfilled?:\n      | ((value: PostgrestSingleResponse<Result>) => TResult1 | PromiseLike<TResult1>)\n      | undefined\n      | null,\n    onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null\n  ): PromiseLike<TResult1 | TResult2> {\n    // https://postgrest.org/en/stable/api.html#switching-schemas\n    if (this.schema === undefined) {\n      // skip\n    } else if (['GET', 'HEAD'].includes(this.method)) {\n      this.headers['Accept-Profile'] = this.schema\n    } else {\n      this.headers['Content-Profile'] = this.schema\n    }\n    if (this.method !== 'GET' && this.method !== 'HEAD') {\n      this.headers['Content-Type'] = 'application/json'\n    }\n\n    // NOTE: Invoke w/o `this` to avoid illegal invocation error.\n    // https://github.com/supabase/postgrest-js/pull/247\n    const _fetch = this.fetch\n    let res = _fetch(this.url.toString(), {\n      method: this.method,\n      headers: this.headers,\n      body: JSON.stringify(this.body),\n      signal: this.signal,\n    }).then(async (res) => {\n      let error = null\n      let data = null\n      let count: number | null = null\n      let status = res.status\n      let statusText = res.statusText\n\n      if (res.ok) {\n        if (this.method !== 'HEAD') {\n          const body = await res.text()\n          if (body === '') {\n            // Prefer: return=minimal\n          } else if (this.headers['Accept'] === 'text/csv') {\n            data = body\n          } else if (\n            this.headers['Accept'] &&\n            this.headers['Accept'].includes('application/vnd.pgrst.plan+text')\n          ) {\n            data = body\n          } else {\n            data = JSON.parse(body)\n          }\n        }\n\n        const countHeader = this.headers['Prefer']?.match(/count=(exact|planned|estimated)/)\n        const contentRange = res.headers.get('content-range')?.split('/')\n        if (countHeader && contentRange && contentRange.length > 1) {\n          count = parseInt(contentRange[1])\n        }\n      } else {\n        const body = await res.text()\n\n        try {\n          error = JSON.parse(body)\n\n          // Workaround for https://github.com/supabase/postgrest-js/issues/295\n          if (Array.isArray(error) && res.status === 404) {\n            data = []\n            error = null\n            status = 200\n            statusText = 'OK'\n          }\n        } catch {\n          // Workaround for https://github.com/supabase/postgrest-js/issues/295\n          if (res.status === 404 && body === '') {\n            status = 204\n            statusText = 'No Content'\n          } else {\n            error = {\n              message: body,\n            }\n          }\n        }\n\n        if (error && this.allowEmpty && error?.details?.includes('Results contain 0 rows')) {\n          error = null\n          status = 200\n          statusText = 'OK'\n        }\n\n        if (error && this.shouldThrowOnError) {\n          throw error\n        }\n      }\n\n      const postgrestResponse = {\n        error,\n        data,\n        count,\n        status,\n        statusText,\n      }\n\n      return postgrestResponse\n    })\n    if (!this.shouldThrowOnError) {\n      res = res.catch((fetchError) => ({\n        error: {\n          message: `FetchError: ${fetchError.message}`,\n          details: '',\n          hint: '',\n          code: fetchError.code || '',\n        },\n        data: null,\n        count: null,\n        status: 0,\n        statusText: '',\n      }))\n    }\n\n    return res.then(onfulfilled, onrejected)\n  }\n}\n","import PostgrestBuilder from './PostgrestBuilder'\nimport { GetResult } from './select-query-parser'\nimport { GenericSchema } from './types'\n\nexport default class PostgrestTransformBuilder<\n  Schema extends GenericSchema,\n  Row extends Record<string, unknown>,\n  Result\n> extends PostgrestBuilder<Result> {\n  /**\n   * Perform a SELECT on the query result.\n   *\n   * By default, `.insert()`, `.update()`, `.upsert()`, and `.delete()` do not\n   * return modified rows. By calling this method, modified rows are returned in\n   * `data`.\n   *\n   * @param columns - The columns to retrieve, separated by commas\n   */\n  select<Query extends string = '*', NewResultOne = GetResult<Schema, Row, Query>>(\n    columns?: Query\n  ): PostgrestTransformBuilder<Schema, Row, NewResultOne[]> {\n    // Remove whitespaces except when quoted\n    let quoted = false\n    const cleanedColumns = (columns ?? '*')\n      .split('')\n      .map((c) => {\n        if (/\\s/.test(c) && !quoted) {\n          return ''\n        }\n        if (c === '\"') {\n          quoted = !quoted\n        }\n        return c\n      })\n      .join('')\n    this.url.searchParams.set('select', cleanedColumns)\n    if (this.headers['Prefer']) {\n      this.headers['Prefer'] += ','\n    }\n    this.headers['Prefer'] += 'return=representation'\n    return this as unknown as PostgrestTransformBuilder<Schema, Row, NewResultOne[]>\n  }\n\n  order<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    options?: { ascending?: boolean; nullsFirst?: boolean; foreignTable?: undefined }\n  ): this\n  order(\n    column: string,\n    options?: { ascending?: boolean; nullsFirst?: boolean; foreignTable: string }\n  ): this\n  /**\n   * Order the query result by `column`.\n   *\n   * You can call this method multiple times to order by multiple columns.\n   *\n   * You can order foreign tables, but it doesn't affect the ordering of the\n   * current table.\n   *\n   * @param column - The column to order by\n   * @param options - Named parameters\n   * @param options.ascending - If `true`, the result will be in ascending order\n   * @param options.nullsFirst - If `true`, `null`s appear first. If `false`,\n   * `null`s appear last.\n   * @param options.foreignTable - Set this to order a foreign table by foreign\n   * columns\n   */\n  order(\n    column: string,\n    {\n      ascending = true,\n      nullsFirst,\n      foreignTable,\n    }: { ascending?: boolean; nullsFirst?: boolean; foreignTable?: string } = {}\n  ): this {\n    const key = foreignTable ? `${foreignTable}.order` : 'order'\n    const existingOrder = this.url.searchParams.get(key)\n\n    this.url.searchParams.set(\n      key,\n      `${existingOrder ? `${existingOrder},` : ''}${column}.${ascending ? 'asc' : 'desc'}${\n        nullsFirst === undefined ? '' : nullsFirst ? '.nullsfirst' : '.nullslast'\n      }`\n    )\n    return this\n  }\n\n  /**\n   * Limit the query result by `count`.\n   *\n   * @param count - The maximum number of rows to return\n   * @param options - Named parameters\n   * @param options.foreignTable - Set this to limit rows of foreign tables\n   * instead of the current table\n   */\n  limit(count: number, { foreignTable }: { foreignTable?: string } = {}): this {\n    const key = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`\n    this.url.searchParams.set(key, `${count}`)\n    return this\n  }\n\n  /**\n   * Limit the query result by `from` and `to` inclusively.\n   *\n   * @param from - The starting index from which to limit the result\n   * @param to - The last index to which to limit the result\n   * @param options - Named parameters\n   * @param options.foreignTable - Set this to limit rows of foreign tables\n   * instead of the current table\n   */\n  range(from: number, to: number, { foreignTable }: { foreignTable?: string } = {}): this {\n    const keyOffset = typeof foreignTable === 'undefined' ? 'offset' : `${foreignTable}.offset`\n    const keyLimit = typeof foreignTable === 'undefined' ? 'limit' : `${foreignTable}.limit`\n    this.url.searchParams.set(keyOffset, `${from}`)\n    // Range is inclusive, so add 1\n    this.url.searchParams.set(keyLimit, `${to - from + 1}`)\n    return this\n  }\n\n  /**\n   * Set the AbortSignal for the fetch request.\n   *\n   * @param signal - The AbortSignal to use for the fetch request\n   */\n  abortSignal(signal: AbortSignal): this {\n    this.signal = signal\n    return this\n  }\n\n  /**\n   * Return `data` as a single object instead of an array of objects.\n   *\n   * Query result must be one row (e.g. using `.limit(1)`), otherwise this\n   * returns an error.\n   */\n  single<\n    ResultOne = Result extends (infer ResultOne)[] ? ResultOne : never\n  >(): PostgrestBuilder<ResultOne> {\n    this.headers['Accept'] = 'application/vnd.pgrst.object+json'\n    return this as PostgrestBuilder<ResultOne>\n  }\n\n  /**\n   * Return `data` as a single object instead of an array of objects.\n   *\n   * Query result must be zero or one row (e.g. using `.limit(1)`), otherwise\n   * this returns an error.\n   */\n  maybeSingle<\n    ResultOne = Result extends (infer ResultOne)[] ? ResultOne : never\n  >(): PostgrestBuilder<ResultOne | null> {\n    this.headers['Accept'] = 'application/vnd.pgrst.object+json'\n    this.allowEmpty = true\n    return this as PostgrestBuilder<ResultOne | null>\n  }\n\n  /**\n   * Return `data` as a string in CSV format.\n   */\n  csv(): PostgrestBuilder<string> {\n    this.headers['Accept'] = 'text/csv'\n    return this as PostgrestBuilder<string>\n  }\n\n  /**\n   * Return `data` as an object in [GeoJSON](https://geojson.org) format.\n   */\n  geojson(): PostgrestBuilder<Record<string, unknown>> {\n    this.headers['Accept'] = 'application/geo+json'\n    return this as PostgrestBuilder<Record<string, unknown>>\n  }\n\n  /**\n   * Return `data` as the EXPLAIN plan for the query.\n   *\n   * @param options - Named parameters\n   *\n   * @param options.analyze - If `true`, the query will be executed and the\n   * actual run time will be returned\n   *\n   * @param options.verbose - If `true`, the query identifier will be returned\n   * and `data` will include the output columns of the query\n   *\n   * @param options.settings - If `true`, include information on configuration\n   * parameters that affect query planning\n   *\n   * @param options.buffers - If `true`, include information on buffer usage\n   *\n   * @param options.wal - If `true`, include information on WAL record generation\n   *\n   * @param options.format - The format of the output, can be `\"text\"` (default)\n   * or `\"json\"`\n   */\n  explain({\n    analyze = false,\n    verbose = false,\n    settings = false,\n    buffers = false,\n    wal = false,\n    format = 'text',\n  }: {\n    analyze?: boolean\n    verbose?: boolean\n    settings?: boolean\n    buffers?: boolean\n    wal?: boolean\n    format?: 'json' | 'text'\n  } = {}): PostgrestBuilder<Record<string, unknown>[]> | PostgrestBuilder<string> {\n    const options = [\n      analyze ? 'analyze' : null,\n      verbose ? 'verbose' : null,\n      settings ? 'settings' : null,\n      buffers ? 'buffers' : null,\n      wal ? 'wal' : null,\n    ]\n      .filter(Boolean)\n      .join('|')\n    // An Accept header can carry multiple media types but postgrest-js always sends one\n    const forMediatype = this.headers['Accept']\n    this.headers[\n      'Accept'\n    ] = `application/vnd.pgrst.plan+${format}; for=\"${forMediatype}\"; options=${options};`\n    if (format === 'json') return this as PostgrestBuilder<Record<string, unknown>[]>\n    else return this as PostgrestBuilder<string>\n  }\n\n  /**\n   * Rollback the query.\n   *\n   * `data` will still be returned, but the query is not committed.\n   */\n  rollback(): this {\n    if ((this.headers['Prefer'] ?? '').trim().length > 0) {\n      this.headers['Prefer'] += ',tx=rollback'\n    } else {\n      this.headers['Prefer'] = 'tx=rollback'\n    }\n    return this\n  }\n\n  /**\n   * Override the type of the returned `data`.\n   *\n   * @typeParam NewResult - The new result type to override with\n   */\n  returns<NewResult>(): PostgrestTransformBuilder<Schema, Row, NewResult> {\n    return this as unknown as PostgrestTransformBuilder<Schema, Row, NewResult>\n  }\n}\n","import PostgrestTransformBuilder from './PostgrestTransformBuilder'\nimport { GenericSchema } from './types'\n\ntype FilterOperator =\n  | 'eq'\n  | 'neq'\n  | 'gt'\n  | 'gte'\n  | 'lt'\n  | 'lte'\n  | 'like'\n  | 'ilike'\n  | 'is'\n  | 'in'\n  | 'cs'\n  | 'cd'\n  | 'sl'\n  | 'sr'\n  | 'nxl'\n  | 'nxr'\n  | 'adj'\n  | 'ov'\n  | 'fts'\n  | 'plfts'\n  | 'phfts'\n  | 'wfts'\n\nexport default class PostgrestFilterBuilder<\n  Schema extends GenericSchema,\n  Row extends Record<string, unknown>,\n  Result\n> extends PostgrestTransformBuilder<Schema, Row, Result> {\n  eq<ColumnName extends string & keyof Row>(column: ColumnName, value: Row[ColumnName]): this\n  eq(column: string, value: unknown): this\n  /**\n   * Match only rows where `column` is equal to `value`.\n   *\n   * To check if the value of `column` is NULL, you should use `.is()` instead.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  eq(column: string, value: unknown): this {\n    this.url.searchParams.append(column, `eq.${value}`)\n    return this\n  }\n\n  neq<ColumnName extends string & keyof Row>(column: ColumnName, value: Row[ColumnName]): this\n  neq(column: string, value: unknown): this\n  /**\n   * Match only rows where `column` is not equal to `value`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  neq(column: string, value: unknown): this {\n    this.url.searchParams.append(column, `neq.${value}`)\n    return this\n  }\n\n  gt<ColumnName extends string & keyof Row>(column: ColumnName, value: Row[ColumnName]): this\n  gt(column: string, value: unknown): this\n  /**\n   * Match only rows where `column` is greater than `value`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  gt(column: string, value: unknown): this {\n    this.url.searchParams.append(column, `gt.${value}`)\n    return this\n  }\n\n  gte<ColumnName extends string & keyof Row>(column: ColumnName, value: Row[ColumnName]): this\n  gte(column: string, value: unknown): this\n  /**\n   * Match only rows where `column` is greater than or equal to `value`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  gte(column: string, value: unknown): this {\n    this.url.searchParams.append(column, `gte.${value}`)\n    return this\n  }\n\n  lt<ColumnName extends string & keyof Row>(column: ColumnName, value: Row[ColumnName]): this\n  lt(column: string, value: unknown): this\n  /**\n   * Match only rows where `column` is less than `value`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  lt(column: string, value: unknown): this {\n    this.url.searchParams.append(column, `lt.${value}`)\n    return this\n  }\n\n  lte<ColumnName extends string & keyof Row>(column: ColumnName, value: Row[ColumnName]): this\n  lte(column: string, value: unknown): this\n  /**\n   * Match only rows where `column` is less than or equal to `value`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  lte(column: string, value: unknown): this {\n    this.url.searchParams.append(column, `lte.${value}`)\n    return this\n  }\n\n  like<ColumnName extends string & keyof Row>(column: ColumnName, pattern: string): this\n  like(column: string, pattern: string): this\n  /**\n   * Match only rows where `column` matches `pattern` case-sensitively.\n   *\n   * @param column - The column to filter on\n   * @param pattern - The pattern to match with\n   */\n  like(column: string, pattern: string): this {\n    this.url.searchParams.append(column, `like.${pattern}`)\n    return this\n  }\n\n  ilike<ColumnName extends string & keyof Row>(column: ColumnName, pattern: string): this\n  ilike(column: string, pattern: string): this\n  /**\n   * Match only rows where `column` matches `pattern` case-insensitively.\n   *\n   * @param column - The column to filter on\n   * @param pattern - The pattern to match with\n   */\n  ilike(column: string, pattern: string): this {\n    this.url.searchParams.append(column, `ilike.${pattern}`)\n    return this\n  }\n\n  is<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    value: Row[ColumnName] & (boolean | null)\n  ): this\n  is(column: string, value: boolean | null): this\n  /**\n   * Match only rows where `column` IS `value`.\n   *\n   * For non-boolean columns, this is only relevant for checking if the value of\n   * `column` is NULL by setting `value` to `null`.\n   *\n   * For boolean columns, you can also set `value` to `true` or `false` and it\n   * will behave the same way as `.eq()`.\n   *\n   * @param column - The column to filter on\n   * @param value - The value to filter with\n   */\n  is(column: string, value: boolean | null): this {\n    this.url.searchParams.append(column, `is.${value}`)\n    return this\n  }\n\n  in<ColumnName extends string & keyof Row>(column: ColumnName, values: Row[ColumnName][]): this\n  in(column: string, values: unknown[]): this\n  /**\n   * Match only rows where `column` is included in the `values` array.\n   *\n   * @param column - The column to filter on\n   * @param values - The values array to filter with\n   */\n  in(column: string, values: unknown[]): this {\n    const cleanedValues = values\n      .map((s) => {\n        // handle postgrest reserved characters\n        // https://postgrest.org/en/v7.0.0/api.html#reserved-characters\n        if (typeof s === 'string' && new RegExp('[,()]').test(s)) return `\"${s}\"`\n        else return `${s}`\n      })\n      .join(',')\n    this.url.searchParams.append(column, `in.(${cleanedValues})`)\n    return this\n  }\n\n  contains<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    value: string | Row[ColumnName][] | Record<string, unknown>\n  ): this\n  contains(column: string, value: string | unknown[] | Record<string, unknown>): this\n  /**\n   * Only relevant for jsonb, array, and range columns. Match only rows where\n   * `column` contains every element appearing in `value`.\n   *\n   * @param column - The jsonb, array, or range column to filter on\n   * @param value - The jsonb, array, or range value to filter with\n   */\n  contains(column: string, value: string | unknown[] | Record<string, unknown>): this {\n    if (typeof value === 'string') {\n      // range types can be inclusive '[', ']' or exclusive '(', ')' so just\n      // keep it simple and accept a string\n      this.url.searchParams.append(column, `cs.${value}`)\n    } else if (Array.isArray(value)) {\n      // array\n      this.url.searchParams.append(column, `cs.{${value.join(',')}}`)\n    } else {\n      // json\n      this.url.searchParams.append(column, `cs.${JSON.stringify(value)}`)\n    }\n    return this\n  }\n\n  containedBy<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    value: string | Row[ColumnName][] | Record<string, unknown>\n  ): this\n  containedBy(column: string, value: string | unknown[] | Record<string, unknown>): this\n  /**\n   * Only relevant for jsonb, array, and range columns. Match only rows where\n   * every element appearing in `column` is contained by `value`.\n   *\n   * @param column - The jsonb, array, or range column to filter on\n   * @param value - The jsonb, array, or range value to filter with\n   */\n  containedBy(column: string, value: string | unknown[] | Record<string, unknown>): this {\n    if (typeof value === 'string') {\n      // range\n      this.url.searchParams.append(column, `cd.${value}`)\n    } else if (Array.isArray(value)) {\n      // array\n      this.url.searchParams.append(column, `cd.{${value.join(',')}}`)\n    } else {\n      // json\n      this.url.searchParams.append(column, `cd.${JSON.stringify(value)}`)\n    }\n    return this\n  }\n\n  rangeGt<ColumnName extends string & keyof Row>(column: ColumnName, range: string): this\n  rangeGt(column: string, range: string): this\n  /**\n   * Only relevant for range columns. Match only rows where every element in\n   * `column` is greater than any element in `range`.\n   *\n   * @param column - The range column to filter on\n   * @param range - The range to filter with\n   */\n  rangeGt(column: string, range: string): this {\n    this.url.searchParams.append(column, `sr.${range}`)\n    return this\n  }\n\n  rangeGte<ColumnName extends string & keyof Row>(column: ColumnName, range: string): this\n  rangeGte(column: string, range: string): this\n  /**\n   * Only relevant for range columns. Match only rows where every element in\n   * `column` is either contained in `range` or greater than any element in\n   * `range`.\n   *\n   * @param column - The range column to filter on\n   * @param range - The range to filter with\n   */\n  rangeGte(column: string, range: string): this {\n    this.url.searchParams.append(column, `nxl.${range}`)\n    return this\n  }\n\n  rangeLt<ColumnName extends string & keyof Row>(column: ColumnName, range: string): this\n  rangeLt(column: string, range: string): this\n  /**\n   * Only relevant for range columns. Match only rows where every element in\n   * `column` is less than any element in `range`.\n   *\n   * @param column - The range column to filter on\n   * @param range - The range to filter with\n   */\n  rangeLt(column: string, range: string): this {\n    this.url.searchParams.append(column, `sl.${range}`)\n    return this\n  }\n\n  rangeLte<ColumnName extends string & keyof Row>(column: ColumnName, range: string): this\n  rangeLte(column: string, range: string): this\n  /**\n   * Only relevant for range columns. Match only rows where every element in\n   * `column` is either contained in `range` or less than any element in\n   * `range`.\n   *\n   * @param column - The range column to filter on\n   * @param range - The range to filter with\n   */\n  rangeLte(column: string, range: string): this {\n    this.url.searchParams.append(column, `nxr.${range}`)\n    return this\n  }\n\n  rangeAdjacent<ColumnName extends string & keyof Row>(column: ColumnName, range: string): this\n  rangeAdjacent(column: string, range: string): this\n  /**\n   * Only relevant for range columns. Match only rows where `column` is\n   * mutually exclusive to `range` and there can be no element between the two\n   * ranges.\n   *\n   * @param column - The range column to filter on\n   * @param range - The range to filter with\n   */\n  rangeAdjacent(column: string, range: string): this {\n    this.url.searchParams.append(column, `adj.${range}`)\n    return this\n  }\n\n  overlaps<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    value: string | Row[ColumnName][]\n  ): this\n  overlaps(column: string, value: string | unknown[]): this\n  /**\n   * Only relevant for array and range columns. Match only rows where\n   * `column` and `value` have an element in common.\n   *\n   * @param column - The array or range column to filter on\n   * @param value - The array or range value to filter with\n   */\n  overlaps(column: string, value: string | unknown[]): this {\n    if (typeof value === 'string') {\n      // range\n      this.url.searchParams.append(column, `ov.${value}`)\n    } else {\n      // array\n      this.url.searchParams.append(column, `ov.{${value.join(',')}}`)\n    }\n    return this\n  }\n\n  textSearch<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    query: string,\n    options?: { config?: string; type?: 'plain' | 'phrase' | 'websearch' }\n  ): this\n  textSearch(\n    column: string,\n    query: string,\n    options?: { config?: string; type?: 'plain' | 'phrase' | 'websearch' }\n  ): this\n  /**\n   * Only relevant for text and tsvector columns. Match only rows where\n   * `column` matches the query string in `query`.\n   *\n   * @param column - The text or tsvector column to filter on\n   * @param query - The query text to match with\n   * @param options - Named parameters\n   * @param options.config - The text search configuration to use\n   * @param options.type - Change how the `query` text is interpreted\n   */\n  textSearch(\n    column: string,\n    query: string,\n    { config, type }: { config?: string; type?: 'plain' | 'phrase' | 'websearch' } = {}\n  ): this {\n    let typePart = ''\n    if (type === 'plain') {\n      typePart = 'pl'\n    } else if (type === 'phrase') {\n      typePart = 'ph'\n    } else if (type === 'websearch') {\n      typePart = 'w'\n    }\n    const configPart = config === undefined ? '' : `(${config})`\n    this.url.searchParams.append(column, `${typePart}fts${configPart}.${query}`)\n    return this\n  }\n\n  match<ColumnName extends string & keyof Row>(query: Record<ColumnName, Row[ColumnName]>): this\n  match(query: Record<string, unknown>): this\n  /**\n   * Match only rows where each column in `query` keys is equal to its\n   * associated value. Shorthand for multiple `.eq()`s.\n   *\n   * @param query - The object to filter with, with column names as keys mapped\n   * to their filter values\n   */\n  match(query: Record<string, unknown>): this {\n    Object.entries(query).forEach(([column, value]) => {\n      this.url.searchParams.append(column, `eq.${value}`)\n    })\n    return this\n  }\n\n  not<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    operator: FilterOperator,\n    value: Row[ColumnName]\n  ): this\n  not(column: string, operator: string, value: unknown): this\n  /**\n   * Match only rows which doesn't satisfy the filter.\n   *\n   * Unlike most filters, `opearator` and `value` are used as-is and need to\n   * follow [PostgREST\n   * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n   * to make sure they are properly sanitized.\n   *\n   * @param column - The column to filter on\n   * @param operator - The operator to be negated to filter with, following\n   * PostgREST syntax\n   * @param value - The value to filter with, following PostgREST syntax\n   */\n  not(column: string, operator: string, value: unknown): this {\n    this.url.searchParams.append(column, `not.${operator}.${value}`)\n    return this\n  }\n\n  /**\n   * Match only rows which satisfy at least one of the filters.\n   *\n   * Unlike most filters, `filters` is used as-is and needs to follow [PostgREST\n   * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n   * to make sure it's properly sanitized.\n   *\n   * It's currently not possible to do an `.or()` filter across multiple tables.\n   *\n   * @param filters - The filters to use, following PostgREST syntax\n   * @param foreignTable - Set this to filter on foreign tables instead of the\n   * current table\n   */\n  or(filters: string, { foreignTable }: { foreignTable?: string } = {}): this {\n    const key = foreignTable ? `${foreignTable}.or` : 'or'\n    this.url.searchParams.append(key, `(${filters})`)\n    return this\n  }\n\n  filter<ColumnName extends string & keyof Row>(\n    column: ColumnName,\n    operator: `${'' | 'not.'}${FilterOperator}`,\n    value: unknown\n  ): this\n  filter(column: string, operator: string, value: unknown): this\n  /**\n   * Match only rows which satisfy the filter. This is an escape hatch - you\n   * should use the specific filter methods wherever possible.\n   *\n   * Unlike most filters, `opearator` and `value` are used as-is and need to\n   * follow [PostgREST\n   * syntax](https://postgrest.org/en/stable/api.html#operators). You also need\n   * to make sure they are properly sanitized.\n   *\n   * @param column - The column to filter on\n   * @param operator - The operator to filter with, following PostgREST syntax\n   * @param value - The value to filter with, following PostgREST syntax\n   */\n  filter(column: string, operator: string, value: unknown): this {\n    this.url.searchParams.append(column, `${operator}.${value}`)\n    return this\n  }\n}\n","import PostgrestBuilder from './PostgrestBuilder'\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder'\nimport { GetResult } from './select-query-parser'\nimport { Fetch, GenericSchema, GenericTable, GenericView } from './types'\n\nexport default class PostgrestQueryBuilder<\n  Schema extends GenericSchema,\n  Relation extends GenericTable | GenericView\n> {\n  url: URL\n  headers: Record<string, string>\n  schema?: string\n  signal?: AbortSignal\n  fetch?: Fetch\n\n  constructor(\n    url: URL,\n    {\n      headers = {},\n      schema,\n      fetch,\n    }: {\n      headers?: Record<string, string>\n      schema?: string\n      fetch?: Fetch\n    }\n  ) {\n    this.url = url\n    this.headers = headers\n    this.schema = schema\n    this.fetch = fetch\n  }\n\n  /**\n   * Perform a SELECT query on the table or view.\n   *\n   * @param columns - The columns to retrieve, separated by commas\n   *\n   * @param options - Named parameters\n   *\n   * @param options.head - When set to `true`, `data` will not be returned.\n   * Useful if you only need the count.\n   *\n   * @param options.count - Count algorithm to use to count rows in the table or view.\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   */\n  select<Query extends string = '*', ResultOne = GetResult<Schema, Relation['Row'], Query>>(\n    columns?: Query,\n    {\n      head = false,\n      count,\n    }: {\n      head?: boolean\n      count?: 'exact' | 'planned' | 'estimated'\n    } = {}\n  ): PostgrestFilterBuilder<Schema, Relation['Row'], ResultOne[]> {\n    const method = head ? 'HEAD' : 'GET'\n    // Remove whitespaces except when quoted\n    let quoted = false\n    const cleanedColumns = (columns ?? '*')\n      .split('')\n      .map((c) => {\n        if (/\\s/.test(c) && !quoted) {\n          return ''\n        }\n        if (c === '\"') {\n          quoted = !quoted\n        }\n        return c\n      })\n      .join('')\n    this.url.searchParams.set('select', cleanedColumns)\n    if (count) {\n      this.headers['Prefer'] = `count=${count}`\n    }\n\n    return new PostgrestFilterBuilder({\n      method,\n      url: this.url,\n      headers: this.headers,\n      schema: this.schema,\n      fetch: this.fetch,\n      allowEmpty: false,\n    } as unknown as PostgrestBuilder<ResultOne[]>)\n  }\n\n  /**\n   * Perform an INSERT into the table or view.\n   *\n   * By default, inserted rows are not returned. To return it, chain the call\n   * with `.select()`.\n   *\n   * @param values - The values to insert. Pass an object to insert a single row\n   * or an array to insert multiple rows.\n   *\n   * @param options - Named parameters\n   *\n   * @param options.count - Count algorithm to use to count inserted rows.\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   */\n  insert<Row extends Relation extends { Insert: unknown } ? Relation['Insert'] : never>(\n    values: Row | Row[],\n    {\n      count,\n    }: {\n      count?: 'exact' | 'planned' | 'estimated'\n    } = {}\n  ): PostgrestFilterBuilder<Schema, Relation['Row'], null> {\n    const method = 'POST'\n\n    const prefersHeaders = []\n    const body = values\n    if (count) {\n      prefersHeaders.push(`count=${count}`)\n    }\n    if (this.headers['Prefer']) {\n      prefersHeaders.unshift(this.headers['Prefer'])\n    }\n    this.headers['Prefer'] = prefersHeaders.join(',')\n\n    if (Array.isArray(values)) {\n      const columns = values.reduce((acc, x) => acc.concat(Object.keys(x)), [] as string[])\n      if (columns.length > 0) {\n        const uniqueColumns = [...new Set(columns)].map((column) => `\"${column}\"`)\n        this.url.searchParams.set('columns', uniqueColumns.join(','))\n      }\n    }\n\n    return new PostgrestFilterBuilder({\n      method,\n      url: this.url,\n      headers: this.headers,\n      schema: this.schema,\n      body,\n      fetch: this.fetch,\n      allowEmpty: false,\n    } as unknown as PostgrestBuilder<null>)\n  }\n\n  /**\n   * Perform an UPSERT on the table or view. Depending on the column(s) passed\n   * to `onConflict`, `.upsert()` allows you to perform the equivalent of\n   * `.insert()` if a row with the corresponding `onConflict` columns doesn't\n   * exist, or if it does exist, perform an alternative action depending on\n   * `ignoreDuplicates`.\n   *\n   * By default, upserted rows are not returned. To return it, chain the call\n   * with `.select()`.\n   *\n   * @param values - The values to upsert with. Pass an object to upsert a\n   * single row or an array to upsert multiple rows.\n   *\n   * @param options - Named parameters\n   *\n   * @param options.onConflict - Comma-separated UNIQUE column(s) to specify how\n   * duplicate rows are determined. Two rows are duplicates if all the\n   * `onConflict` columns are equal.\n   *\n   * @param options.ignoreDuplicates - If `true`, duplicate rows are ignored. If\n   * `false`, duplicate rows are merged with existing rows.\n   *\n   * @param options.count - Count algorithm to use to count upserted rows.\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   */\n  upsert<Row extends Relation extends { Insert: unknown } ? Relation['Insert'] : never>(\n    values: Row | Row[],\n    {\n      onConflict,\n      ignoreDuplicates = false,\n      count,\n    }: {\n      onConflict?: string\n      ignoreDuplicates?: boolean\n      count?: 'exact' | 'planned' | 'estimated'\n    } = {}\n  ): PostgrestFilterBuilder<Schema, Relation['Row'], null> {\n    const method = 'POST'\n\n    const prefersHeaders = [`resolution=${ignoreDuplicates ? 'ignore' : 'merge'}-duplicates`]\n\n    if (onConflict !== undefined) this.url.searchParams.set('on_conflict', onConflict)\n    const body = values\n    if (count) {\n      prefersHeaders.push(`count=${count}`)\n    }\n    if (this.headers['Prefer']) {\n      prefersHeaders.unshift(this.headers['Prefer'])\n    }\n    this.headers['Prefer'] = prefersHeaders.join(',')\n\n    return new PostgrestFilterBuilder({\n      method,\n      url: this.url,\n      headers: this.headers,\n      schema: this.schema,\n      body,\n      fetch: this.fetch,\n      allowEmpty: false,\n    } as unknown as PostgrestBuilder<null>)\n  }\n\n  /**\n   * Perform an UPDATE on the table or view.\n   *\n   * By default, updated rows are not returned. To return it, chain the call\n   * with `.select()` after filters.\n   *\n   * @param values - The values to update with\n   *\n   * @param options - Named parameters\n   *\n   * @param options.count - Count algorithm to use to count updated rows.\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   */\n  update<Row extends Relation extends { Update: unknown } ? Relation['Update'] : never>(\n    values: Row,\n    {\n      count,\n    }: {\n      count?: 'exact' | 'planned' | 'estimated'\n    } = {}\n  ): PostgrestFilterBuilder<Schema, Relation['Row'], null> {\n    const method = 'PATCH'\n    const prefersHeaders = []\n    const body = values\n    if (count) {\n      prefersHeaders.push(`count=${count}`)\n    }\n    if (this.headers['Prefer']) {\n      prefersHeaders.unshift(this.headers['Prefer'])\n    }\n    this.headers['Prefer'] = prefersHeaders.join(',')\n\n    return new PostgrestFilterBuilder({\n      method,\n      url: this.url,\n      headers: this.headers,\n      schema: this.schema,\n      body,\n      fetch: this.fetch,\n      allowEmpty: false,\n    } as unknown as PostgrestBuilder<null>)\n  }\n\n  /**\n   * Perform a DELETE on the table or view.\n   *\n   * By default, deleted rows are not returned. To return it, chain the call\n   * with `.select()` after filters.\n   *\n   * @param options - Named parameters\n   *\n   * @param options.count - Count algorithm to use to count deleted rows.\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   */\n  delete({\n    count,\n  }: {\n    count?: 'exact' | 'planned' | 'estimated'\n  } = {}): PostgrestFilterBuilder<Schema, Relation['Row'], null> {\n    const method = 'DELETE'\n    const prefersHeaders = []\n    if (count) {\n      prefersHeaders.push(`count=${count}`)\n    }\n    if (this.headers['Prefer']) {\n      prefersHeaders.unshift(this.headers['Prefer'])\n    }\n    this.headers['Prefer'] = prefersHeaders.join(',')\n\n    return new PostgrestFilterBuilder({\n      method,\n      url: this.url,\n      headers: this.headers,\n      schema: this.schema,\n      fetch: this.fetch,\n      allowEmpty: false,\n    } as unknown as PostgrestBuilder<null>)\n  }\n}\n","import { version } from './version'\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `postgrest-js/${version}` }\n","export const version = '1.4.0'\n","import PostgrestQueryBuilder from './PostgrestQueryBuilder'\nimport PostgrestFilterBuilder from './PostgrestFilterBuilder'\nimport PostgrestBuilder from './PostgrestBuilder'\nimport { DEFAULT_HEADERS } from './constants'\nimport { Fetch, GenericSchema } from './types'\n\n/**\n * PostgREST client.\n *\n * @typeParam Database - Types for the schema from the [type\n * generator](https://supabase.com/docs/reference/javascript/next/typescript-support)\n *\n * @typeParam SchemaName - Postgres schema to switch to. Must be a string\n * literal, the same one passed to the constructor. If the schema is not\n * `\"public\"`, this must be supplied manually.\n */\nexport default class PostgrestClient<\n  Database = any,\n  SchemaName extends string & keyof Database = 'public' extends keyof Database\n    ? 'public'\n    : string & keyof Database,\n  Schema extends GenericSchema = Database[SchemaName] extends GenericSchema\n    ? Database[SchemaName]\n    : any\n> {\n  url: string\n  headers: Record<string, string>\n  schema?: SchemaName\n  fetch?: Fetch\n\n  // TODO: Add back shouldThrowOnError once we figure out the typings\n  /**\n   * Creates a PostgREST client.\n   *\n   * @param url - URL of the PostgREST endpoint\n   * @param options - Named parameters\n   * @param options.headers - Custom headers\n   * @param options.schema - Postgres schema to switch to\n   * @param options.fetch - Custom fetch\n   */\n  constructor(\n    url: string,\n    {\n      headers = {},\n      schema,\n      fetch,\n    }: {\n      headers?: Record<string, string>\n      schema?: SchemaName\n      fetch?: Fetch\n    } = {}\n  ) {\n    this.url = url\n    this.headers = { ...DEFAULT_HEADERS, ...headers }\n    this.schema = schema\n    this.fetch = fetch\n  }\n\n  from<\n    TableName extends string & keyof Schema['Tables'],\n    Table extends Schema['Tables'][TableName]\n  >(relation: TableName): PostgrestQueryBuilder<Schema, Table>\n  from<ViewName extends string & keyof Schema['Views'], View extends Schema['Views'][ViewName]>(\n    relation: ViewName\n  ): PostgrestQueryBuilder<Schema, View>\n  from(relation: string): PostgrestQueryBuilder<Schema, any>\n  /**\n   * Perform a query on a table or a view.\n   *\n   * @param relation - The table or view name to query\n   */\n  from(relation: string): PostgrestQueryBuilder<Schema, any> {\n    const url = new URL(`${this.url}/${relation}`)\n    return new PostgrestQueryBuilder<Schema, any>(url, {\n      headers: { ...this.headers },\n      schema: this.schema,\n      fetch: this.fetch,\n    })\n  }\n\n  /**\n   * Perform a function call.\n   *\n   * @param fn - The function name to call\n   * @param args - The arguments to pass to the function call\n   * @param options - Named parameters\n   * @param options.head - When set to `true`, `data` will not be returned.\n   * Useful if you only need the count.\n   * @param options.count - Count algorithm to use to count rows returned by the\n   * function. Only applicable for [set-returning\n   * functions](https://www.postgresql.org/docs/current/functions-srf.html).\n   *\n   * `\"exact\"`: Exact but slow count algorithm. Performs a `COUNT(*)` under the\n   * hood.\n   *\n   * `\"planned\"`: Approximated but fast count algorithm. Uses the Postgres\n   * statistics under the hood.\n   *\n   * `\"estimated\"`: Uses exact count for low numbers and planned count for high\n   * numbers.\n   */\n  rpc<\n    FunctionName extends string & keyof Schema['Functions'],\n    Function_ extends Schema['Functions'][FunctionName]\n  >(\n    fn: FunctionName,\n    args: Function_['Args'] = {},\n    {\n      head = false,\n      count,\n    }: {\n      head?: boolean\n      count?: 'exact' | 'planned' | 'estimated'\n    } = {}\n  ): PostgrestFilterBuilder<\n    Schema,\n    Function_['Returns'] extends any[]\n      ? Function_['Returns'][number] extends Record<string, unknown>\n        ? Function_['Returns'][number]\n        : never\n      : never,\n    Function_['Returns']\n  > {\n    let method: 'HEAD' | 'POST'\n    const url = new URL(`${this.url}/rpc/${fn}`)\n    let body: unknown | undefined\n    if (head) {\n      method = 'HEAD'\n      Object.entries(args).forEach(([name, value]) => {\n        url.searchParams.append(name, `${value}`)\n      })\n    } else {\n      method = 'POST'\n      body = args\n    }\n\n    const headers = { ...this.headers }\n    if (count) {\n      headers['Prefer'] = `count=${count}`\n    }\n\n    return new PostgrestFilterBuilder({\n      method,\n      url,\n      headers,\n      schema: this.schema,\n      body,\n      fetch: this.fetch,\n      allowEmpty: false,\n    } as unknown as PostgrestBuilder<Function_['Returns']>)\n  }\n}\n","export const version = '2.6.0'\n","/**\n * Creates a timer that accepts a `timerCalc` function to perform calculated timeout retries, such as exponential backoff.\n *\n * @example\n *    let reconnectTimer = new Timer(() => this.connect(), function(tries){\n *      return [1000, 5000, 10000][tries - 1] || 10000\n *    })\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n *    reconnectTimer.scheduleTimeout() // fires after 5000\n *    reconnectTimer.reset()\n *    reconnectTimer.scheduleTimeout() // fires after 1000\n */\nexport default class Timer {\n  timer: number | undefined = undefined\n  tries: number = 0\n\n  constructor(public callback: Function, public timerCalc: Function) {\n    this.callback = callback\n    this.timerCalc = timerCalc\n  }\n\n  reset() {\n    this.tries = 0\n    clearTimeout(this.timer)\n  }\n\n  // Cancels any previous scheduleTimeout and schedules callback\n  scheduleTimeout() {\n    clearTimeout(this.timer)\n\n    this.timer = <any>setTimeout(() => {\n      this.tries = this.tries + 1\n      this.callback()\n    }, this.timerCalc(this.tries + 1))\n  }\n}\n","/*\n  This file draws heavily from https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/assets/js/phoenix/presence.js\n  License: https://github.com/phoenixframework/phoenix/blob/d344ec0a732ab4ee204215b31de69cf4be72e3bf/LICENSE.md\n*/\n\nimport {\n  PresenceOpts,\n  PresenceOnJoinCallback,\n  PresenceOnLeaveCallback,\n} from 'phoenix'\nimport RealtimeChannel from './RealtimeChannel'\n\ntype Presence<T extends { [key: string]: any } = {}> = {\n  presence_ref: string\n} & T\n\nexport type RealtimePresenceState = { [key: string]: Presence[] }\n\nexport type RealtimePresenceJoinPayload<T extends { [key: string]: any }> = {\n  event: `${REALTIME_PRESENCE_LISTEN_EVENTS.JOIN}`\n  key: string\n  currentPresences: Presence<T>[]\n  newPresences: Presence<T>[]\n}\n\nexport type RealtimePresenceLeavePayload<T extends { [key: string]: any }> = {\n  event: `${REALTIME_PRESENCE_LISTEN_EVENTS.LEAVE}`\n  key: string\n  currentPresences: Presence<T>[]\n  leftPresences: Presence<T>[]\n}\n\nexport enum REALTIME_PRESENCE_LISTEN_EVENTS {\n  SYNC = 'sync',\n  JOIN = 'join',\n  LEAVE = 'leave',\n}\n\ntype PresenceDiff = {\n  joins: RealtimePresenceState\n  leaves: RealtimePresenceState\n}\n\ntype RawPresenceState = {\n  [key: string]: {\n    metas: {\n      phx_ref?: string\n      phx_ref_prev?: string\n      [key: string]: any\n    }[]\n  }\n}\n\ntype RawPresenceDiff = {\n  joins: RawPresenceState\n  leaves: RawPresenceState\n}\n\ntype PresenceChooser<T> = (key: string, presences: Presence[]) => T\n\nexport default class RealtimePresence {\n  state: RealtimePresenceState = {}\n  pendingDiffs: RawPresenceDiff[] = []\n  joinRef: string | null = null\n  caller: {\n    onJoin: PresenceOnJoinCallback\n    onLeave: PresenceOnLeaveCallback\n    onSync: () => void\n  } = {\n    onJoin: () => {},\n    onLeave: () => {},\n    onSync: () => {},\n  }\n\n  /**\n   * Initializes the Presence.\n   *\n   * @param channel - The RealtimeChannel\n   * @param opts - The options,\n   *        for example `{events: {state: 'state', diff: 'diff'}}`\n   */\n  constructor(public channel: RealtimeChannel, opts?: PresenceOpts) {\n    const events = opts?.events || {\n      state: 'presence_state',\n      diff: 'presence_diff',\n    }\n\n    this.channel._on(events.state, {}, (newState: RawPresenceState) => {\n      const { onJoin, onLeave, onSync } = this.caller\n\n      this.joinRef = this.channel._joinRef()\n\n      this.state = RealtimePresence.syncState(\n        this.state,\n        newState,\n        onJoin,\n        onLeave\n      )\n\n      this.pendingDiffs.forEach((diff) => {\n        this.state = RealtimePresence.syncDiff(\n          this.state,\n          diff,\n          onJoin,\n          onLeave\n        )\n      })\n\n      this.pendingDiffs = []\n\n      onSync()\n    })\n\n    this.channel._on(events.diff, {}, (diff: RawPresenceDiff) => {\n      const { onJoin, onLeave, onSync } = this.caller\n\n      if (this.inPendingSyncState()) {\n        this.pendingDiffs.push(diff)\n      } else {\n        this.state = RealtimePresence.syncDiff(\n          this.state,\n          diff,\n          onJoin,\n          onLeave\n        )\n\n        onSync()\n      }\n    })\n\n    this.onJoin((key, currentPresences, newPresences) => {\n      this.channel._trigger('presence', {\n        event: 'join',\n        key,\n        currentPresences,\n        newPresences,\n      })\n    })\n\n    this.onLeave((key, currentPresences, leftPresences) => {\n      this.channel._trigger('presence', {\n        event: 'leave',\n        key,\n        currentPresences,\n        leftPresences,\n      })\n    })\n\n    this.onSync(() => {\n      this.channel._trigger('presence', { event: 'sync' })\n    })\n  }\n\n  /**\n   * Used to sync the list of presences on the server with the\n   * client's state.\n   *\n   * An optional `onJoin` and `onLeave` callback can be provided to\n   * react to changes in the client's local presences across\n   * disconnects and reconnects with the server.\n   *\n   * @internal\n   */\n  private static syncState(\n    currentState: RealtimePresenceState,\n    newState: RawPresenceState | RealtimePresenceState,\n    onJoin: PresenceOnJoinCallback,\n    onLeave: PresenceOnLeaveCallback\n  ): RealtimePresenceState {\n    const state = this.cloneDeep(currentState)\n    const transformedState = this.transformState(newState)\n    const joins: RealtimePresenceState = {}\n    const leaves: RealtimePresenceState = {}\n\n    this.map(state, (key: string, presences: Presence[]) => {\n      if (!transformedState[key]) {\n        leaves[key] = presences\n      }\n    })\n\n    this.map(transformedState, (key, newPresences: Presence[]) => {\n      const currentPresences: Presence[] = state[key]\n\n      if (currentPresences) {\n        const newPresenceRefs = newPresences.map(\n          (m: Presence) => m.presence_ref\n        )\n        const curPresenceRefs = currentPresences.map(\n          (m: Presence) => m.presence_ref\n        )\n        const joinedPresences: Presence[] = newPresences.filter(\n          (m: Presence) => curPresenceRefs.indexOf(m.presence_ref) < 0\n        )\n        const leftPresences: Presence[] = currentPresences.filter(\n          (m: Presence) => newPresenceRefs.indexOf(m.presence_ref) < 0\n        )\n\n        if (joinedPresences.length > 0) {\n          joins[key] = joinedPresences\n        }\n\n        if (leftPresences.length > 0) {\n          leaves[key] = leftPresences\n        }\n      } else {\n        joins[key] = newPresences\n      }\n    })\n\n    return this.syncDiff(state, { joins, leaves }, onJoin, onLeave)\n  }\n\n  /**\n   * Used to sync a diff of presence join and leave events from the\n   * server, as they happen.\n   *\n   * Like `syncState`, `syncDiff` accepts optional `onJoin` and\n   * `onLeave` callbacks to react to a user joining or leaving from a\n   * device.\n   *\n   * @internal\n   */\n  private static syncDiff(\n    state: RealtimePresenceState,\n    diff: RawPresenceDiff | PresenceDiff,\n    onJoin: PresenceOnJoinCallback,\n    onLeave: PresenceOnLeaveCallback\n  ): RealtimePresenceState {\n    const { joins, leaves } = {\n      joins: this.transformState(diff.joins),\n      leaves: this.transformState(diff.leaves),\n    }\n\n    if (!onJoin) {\n      onJoin = () => {}\n    }\n\n    if (!onLeave) {\n      onLeave = () => {}\n    }\n\n    this.map(joins, (key, newPresences: Presence[]) => {\n      const currentPresences: Presence[] = state[key] ?? []\n      state[key] = this.cloneDeep(newPresences)\n\n      if (currentPresences.length > 0) {\n        const joinedPresenceRefs = state[key].map(\n          (m: Presence) => m.presence_ref\n        )\n        const curPresences: Presence[] = currentPresences.filter(\n          (m: Presence) => joinedPresenceRefs.indexOf(m.presence_ref) < 0\n        )\n\n        state[key].unshift(...curPresences)\n      }\n\n      onJoin(key, currentPresences, newPresences)\n    })\n\n    this.map(leaves, (key, leftPresences: Presence[]) => {\n      let currentPresences: Presence[] = state[key]\n\n      if (!currentPresences) return\n\n      const presenceRefsToRemove = leftPresences.map(\n        (m: Presence) => m.presence_ref\n      )\n      currentPresences = currentPresences.filter(\n        (m: Presence) => presenceRefsToRemove.indexOf(m.presence_ref) < 0\n      )\n\n      state[key] = currentPresences\n\n      onLeave(key, currentPresences, leftPresences)\n\n      if (currentPresences.length === 0) delete state[key]\n    })\n\n    return state\n  }\n\n  /** @internal */\n  private static map<T = any>(\n    obj: RealtimePresenceState,\n    func: PresenceChooser<T>\n  ): T[] {\n    return Object.getOwnPropertyNames(obj).map((key) => func(key, obj[key]))\n  }\n\n  /**\n   * Remove 'metas' key\n   * Change 'phx_ref' to 'presence_ref'\n   * Remove 'phx_ref' and 'phx_ref_prev'\n   *\n   * @example\n   * // returns {\n   *  abc123: [\n   *    { presence_ref: '2', user_id: 1 },\n   *    { presence_ref: '3', user_id: 2 }\n   *  ]\n   * }\n   * RealtimePresence.transformState({\n   *  abc123: {\n   *    metas: [\n   *      { phx_ref: '2', phx_ref_prev: '1' user_id: 1 },\n   *      { phx_ref: '3', user_id: 2 }\n   *    ]\n   *  }\n   * })\n   *\n   * @internal\n   */\n  private static transformState(\n    state: RawPresenceState | RealtimePresenceState\n  ): RealtimePresenceState {\n    state = this.cloneDeep(state)\n\n    return Object.getOwnPropertyNames(state).reduce((newState, key) => {\n      const presences = state[key]\n\n      if ('metas' in presences) {\n        newState[key] = presences.metas.map((presence) => {\n          presence['presence_ref'] = presence['phx_ref']\n\n          delete presence['phx_ref']\n          delete presence['phx_ref_prev']\n\n          return presence\n        }) as Presence[]\n      } else {\n        newState[key] = presences\n      }\n\n      return newState\n    }, {} as RealtimePresenceState)\n  }\n\n  /** @internal */\n  private static cloneDeep(obj: { [key: string]: any }) {\n    return JSON.parse(JSON.stringify(obj))\n  }\n\n  /** @internal */\n  private onJoin(callback: PresenceOnJoinCallback): void {\n    this.caller.onJoin = callback\n  }\n\n  /** @internal */\n  private onLeave(callback: PresenceOnLeaveCallback): void {\n    this.caller.onLeave = callback\n  }\n\n  /** @internal */\n  private onSync(callback: () => void): void {\n    this.caller.onSync = callback\n  }\n\n  /** @internal */\n  private inPendingSyncState(): boolean {\n    return !this.joinRef || this.joinRef !== this.channel._joinRef()\n  }\n}\n","// This file draws heavily from https://github.com/phoenixframework/phoenix/commit/cf098e9cf7a44ee6479d31d911a97d3c7430c6fe\n// License: https://github.com/phoenixframework/phoenix/blob/master/LICENSE.md\n\nexport default class Serializer {\n  HEADER_LENGTH = 1\n\n  decode(rawPayload: ArrayBuffer | string, callback: Function) {\n    if (rawPayload.constructor === ArrayBuffer) {\n      return callback(this._binaryDecode(rawPayload))\n    }\n\n    if (typeof rawPayload === 'string') {\n      return callback(JSON.parse(rawPayload))\n    }\n\n    return callback({})\n  }\n\n  private _binaryDecode(buffer: ArrayBuffer) {\n    const view = new DataView(buffer)\n    const decoder = new TextDecoder()\n\n    return this._decodeBroadcast(buffer, view, decoder)\n  }\n\n  private _decodeBroadcast(\n    buffer: ArrayBuffer,\n    view: DataView,\n    decoder: TextDecoder\n  ): {\n    ref: null\n    topic: string\n    event: string\n    payload: { [key: string]: any }\n  } {\n    const topicSize = view.getUint8(1)\n    const eventSize = view.getUint8(2)\n    let offset = this.HEADER_LENGTH + 2\n    const topic = decoder.decode(buffer.slice(offset, offset + topicSize))\n    offset = offset + topicSize\n    const event = decoder.decode(buffer.slice(offset, offset + eventSize))\n    offset = offset + eventSize\n    const data = JSON.parse(\n      decoder.decode(buffer.slice(offset, buffer.byteLength))\n    )\n\n    return { ref: null, topic: topic, event: event, payload: data }\n  }\n}\n","import { DEFAULT_TIMEOUT } from '../lib/constants'\nimport RealtimeChannel from '../RealtimeChannel'\n\nexport default class Push {\n  sent: boolean = false\n  timeoutTimer: number | undefined = undefined\n  ref: string = ''\n  receivedResp: {\n    status: string\n    response: { [key: string]: any }\n  } | null = null\n  recHooks: {\n    status: string\n    callback: Function\n  }[] = []\n  refEvent: string | null = null\n  rateLimited: boolean = false\n\n  /**\n   * Initializes the Push\n   *\n   * @param channel The Channel\n   * @param event The event, for example `\"phx_join\"`\n   * @param payload The payload, for example `{user_id: 123}`\n   * @param timeout The push timeout in milliseconds\n   */\n  constructor(\n    public channel: RealtimeChannel,\n    public event: string,\n    public payload: { [key: string]: any } = {},\n    public timeout: number = DEFAULT_TIMEOUT\n  ) {}\n\n  resend(timeout: number) {\n    this.timeout = timeout\n    this._cancelRefEvent()\n    this.ref = ''\n    this.refEvent = null\n    this.receivedResp = null\n    this.sent = false\n    this.send()\n  }\n\n  send() {\n    if (this._hasReceived('timeout')) {\n      return\n    }\n    this.startTimeout()\n    this.sent = true\n    const status = this.channel.socket.push({\n      topic: this.channel.topic,\n      event: this.event,\n      payload: this.payload,\n      ref: this.ref,\n      join_ref: this.channel._joinRef(),\n    })\n    if (status === 'rate limited') {\n      this.rateLimited = true\n    }\n  }\n\n  updatePayload(payload: { [key: string]: any }): void {\n    this.payload = { ...this.payload, ...payload }\n  }\n\n  receive(status: string, callback: Function) {\n    if (this._hasReceived(status)) {\n      callback(this.receivedResp?.response)\n    }\n\n    this.recHooks.push({ status, callback })\n    return this\n  }\n\n  startTimeout() {\n    if (this.timeoutTimer) {\n      return\n    }\n    this.ref = this.channel.socket._makeRef()\n    this.refEvent = this.channel._replyEventName(this.ref)\n\n    const callback = (payload: any) => {\n      this._cancelRefEvent()\n      this._cancelTimeout()\n      this.receivedResp = payload\n      this._matchReceive(payload)\n    }\n\n    this.channel._on(this.refEvent, {}, callback)\n\n    this.timeoutTimer = <any>setTimeout(() => {\n      this.trigger('timeout', {})\n    }, this.timeout)\n  }\n\n  trigger(status: string, response: any) {\n    if (this.refEvent)\n      this.channel._trigger(this.refEvent, { status, response })\n  }\n\n  destroy() {\n    this._cancelRefEvent()\n    this._cancelTimeout()\n  }\n\n  private _cancelRefEvent() {\n    if (!this.refEvent) {\n      return\n    }\n\n    this.channel._off(this.refEvent, {})\n  }\n\n  private _cancelTimeout() {\n    clearTimeout(this.timeoutTimer)\n    this.timeoutTimer = undefined\n  }\n\n  private _matchReceive({\n    status,\n    response,\n  }: {\n    status: string\n    response: Function\n  }) {\n    this.recHooks\n      .filter((h) => h.status === status)\n      .forEach((h) => h.callback(response))\n  }\n\n  private _hasReceived(status: string) {\n    return this.receivedResp && this.receivedResp.status === status\n  }\n}\n","/**\n * Helpers to convert the change Payload into native JS types.\n */\n\n// Adapted from epgsql (src/epgsql_binary.erl), this module licensed under\n// 3-clause BSD found here: https://raw.githubusercontent.com/epgsql/epgsql/devel/LICENSE\n\nexport enum PostgresTypes {\n  abstime = 'abstime',\n  bool = 'bool',\n  date = 'date',\n  daterange = 'daterange',\n  float4 = 'float4',\n  float8 = 'float8',\n  int2 = 'int2',\n  int4 = 'int4',\n  int4range = 'int4range',\n  int8 = 'int8',\n  int8range = 'int8range',\n  json = 'json',\n  jsonb = 'jsonb',\n  money = 'money',\n  numeric = 'numeric',\n  oid = 'oid',\n  reltime = 'reltime',\n  text = 'text',\n  time = 'time',\n  timestamp = 'timestamp',\n  timestamptz = 'timestamptz',\n  timetz = 'timetz',\n  tsrange = 'tsrange',\n  tstzrange = 'tstzrange',\n}\n\ntype Columns = {\n  name: string // the column name. eg: \"user_id\"\n  type: string // the column type. eg: \"uuid\"\n  flags?: string[] // any special flags for the column. eg: [\"key\"]\n  type_modifier?: number // the type modifier. eg: 4294967295\n}[]\n\ntype BaseValue = null | string | number | boolean\ntype RecordValue = BaseValue | BaseValue[]\n\ntype Record = {\n  [key: string]: RecordValue\n}\n\n/**\n * Takes an array of columns and an object of string values then converts each string value\n * to its mapped type.\n *\n * @param {{name: String, type: String}[]} columns\n * @param {Object} record\n * @param {Object} options The map of various options that can be applied to the mapper\n * @param {Array} options.skipTypes The array of types that should not be converted\n *\n * @example convertChangeData([{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age:'33'}, {})\n * //=>{ first_name: 'Paul', age: 33 }\n */\nexport const convertChangeData = (\n  columns: Columns,\n  record: Record,\n  options: { skipTypes?: string[] } = {}\n): Record => {\n  const skipTypes = options.skipTypes ?? []\n\n  return Object.keys(record).reduce((acc, rec_key) => {\n    acc[rec_key] = convertColumn(rec_key, columns, record, skipTypes)\n    return acc\n  }, {} as Record)\n}\n\n/**\n * Converts the value of an individual column.\n *\n * @param {String} columnName The column that you want to convert\n * @param {{name: String, type: String}[]} columns All of the columns\n * @param {Object} record The map of string values\n * @param {Array} skipTypes An array of types that should not be converted\n * @return {object} Useless information\n *\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, [])\n * //=> 33\n * @example convertColumn('age', [{name: 'first_name', type: 'text'}, {name: 'age', type: 'int4'}], {first_name: 'Paul', age: '33'}, ['int4'])\n * //=> \"33\"\n */\nexport const convertColumn = (\n  columnName: string,\n  columns: Columns,\n  record: Record,\n  skipTypes: string[]\n): RecordValue => {\n  const column = columns.find((x) => x.name === columnName)\n  const colType = column?.type\n  const value = record[columnName]\n\n  if (colType && !skipTypes.includes(colType)) {\n    return convertCell(colType, value)\n  }\n\n  return noop(value)\n}\n\n/**\n * If the value of the cell is `null`, returns null.\n * Otherwise converts the string value to the correct type.\n * @param {String} type A postgres column type\n * @param {String} stringValue The cell value\n *\n * @example convertCell('bool', 't')\n * //=> true\n * @example convertCell('int8', '10')\n * //=> 10\n * @example convertCell('_int4', '{1,2,3,4}')\n * //=> [1,2,3,4]\n */\nexport const convertCell = (type: string, value: RecordValue): RecordValue => {\n  // if data type is an array\n  if (type.charAt(0) === '_') {\n    const dataType = type.slice(1, type.length)\n    return toArray(value, dataType)\n  }\n\n  // If not null, convert to correct type.\n  switch (type) {\n    case PostgresTypes.bool:\n      return toBoolean(value)\n    case PostgresTypes.float4:\n    case PostgresTypes.float8:\n    case PostgresTypes.int2:\n    case PostgresTypes.int4:\n    case PostgresTypes.int8:\n    case PostgresTypes.numeric:\n    case PostgresTypes.oid:\n      return toNumber(value)\n    case PostgresTypes.json:\n    case PostgresTypes.jsonb:\n      return toJson(value)\n    case PostgresTypes.timestamp:\n      return toTimestampString(value) // Format to be consistent with PostgREST\n    case PostgresTypes.abstime: // To allow users to cast it based on Timezone\n    case PostgresTypes.date: // To allow users to cast it based on Timezone\n    case PostgresTypes.daterange:\n    case PostgresTypes.int4range:\n    case PostgresTypes.int8range:\n    case PostgresTypes.money:\n    case PostgresTypes.reltime: // To allow users to cast it based on Timezone\n    case PostgresTypes.text:\n    case PostgresTypes.time: // To allow users to cast it based on Timezone\n    case PostgresTypes.timestamptz: // To allow users to cast it based on Timezone\n    case PostgresTypes.timetz: // To allow users to cast it based on Timezone\n    case PostgresTypes.tsrange:\n    case PostgresTypes.tstzrange:\n      return noop(value)\n    default:\n      // Return the value for remaining types\n      return noop(value)\n  }\n}\n\nconst noop = (value: RecordValue): RecordValue => {\n  return value\n}\nexport const toBoolean = (value: RecordValue): RecordValue => {\n  switch (value) {\n    case 't':\n      return true\n    case 'f':\n      return false\n    default:\n      return value\n  }\n}\nexport const toNumber = (value: RecordValue): RecordValue => {\n  if (typeof value === 'string') {\n    const parsedValue = parseFloat(value)\n    if (!Number.isNaN(parsedValue)) {\n      return parsedValue\n    }\n  }\n  return value\n}\nexport const toJson = (value: RecordValue): RecordValue => {\n  if (typeof value === 'string') {\n    try {\n      return JSON.parse(value)\n    } catch (error) {\n      console.log(`JSON parse error: ${error}`)\n      return value\n    }\n  }\n  return value\n}\n\n/**\n * Converts a Postgres Array into a native JS array\n *\n * @example toArray('{}', 'int4')\n * //=> []\n * @example toArray('{\"[2021-01-01,2021-12-31)\",\"(2021-01-01,2021-12-32]\"}', 'daterange')\n * //=> ['[2021-01-01,2021-12-31)', '(2021-01-01,2021-12-32]']\n * @example toArray([1,2,3,4], 'int4')\n * //=> [1,2,3,4]\n */\nexport const toArray = (value: RecordValue, type: string): RecordValue => {\n  if (typeof value !== 'string') {\n    return value\n  }\n\n  const lastIdx = value.length - 1\n  const closeBrace = value[lastIdx]\n  const openBrace = value[0]\n\n  // Confirm value is a Postgres array by checking curly brackets\n  if (openBrace === '{' && closeBrace === '}') {\n    let arr\n    const valTrim = value.slice(1, lastIdx)\n\n    // TODO: find a better solution to separate Postgres array data\n    try {\n      arr = JSON.parse('[' + valTrim + ']')\n    } catch (_) {\n      // WARNING: splitting on comma does not cover all edge cases\n      arr = valTrim ? valTrim.split(',') : []\n    }\n\n    return arr.map((val: BaseValue) => convertCell(type, val))\n  }\n\n  return value\n}\n\n/**\n * Fixes timestamp to be ISO-8601. Swaps the space between the date and time for a 'T'\n * See https://github.com/supabase/supabase/issues/18\n *\n * @example toTimestampString('2019-09-10 00:00:00')\n * //=> '2019-09-10T00:00:00'\n */\nexport const toTimestampString = (value: RecordValue): RecordValue => {\n  if (typeof value === 'string') {\n    return value.replace(' ', 'T')\n  }\n\n  return value\n}\n","import { CHANNEL_EVENTS, CHANNEL_STATES } from './lib/constants'\nimport Push from './lib/push'\nimport RealtimeClient from './RealtimeClient'\nimport Timer from './lib/timer'\nimport RealtimePresence, {\n  RealtimePresenceJoinPayload,\n  RealtimePresenceLeavePayload,\n  RealtimePresenceState,\n  REALTIME_PRESENCE_LISTEN_EVENTS,\n} from './RealtimePresence'\nimport * as Transformers from './lib/transformers'\n\nexport type RealtimeChannelOptions = {\n  config: {\n    /**\n     * self option enables client to receive message it broadcast\n     * ack option instructs server to acknowledge that broadcast message was received\n     */\n    broadcast?: { self?: boolean; ack?: boolean }\n    /**\n     * key option is used to track presence payload across clients\n     */\n    presence?: { key?: string }\n  }\n}\n\ntype RealtimePostgresChangesPayloadBase = {\n  schema: string\n  table: string\n  commit_timestamp: string\n  errors: string[]\n}\n\nexport type RealtimePostgresInsertPayload<T extends { [key: string]: any }> =\n  RealtimePostgresChangesPayloadBase & {\n    eventType: `${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.INSERT}`\n    new: T\n    old: {}\n  }\n\nexport type RealtimePostgresUpdatePayload<T extends { [key: string]: any }> =\n  RealtimePostgresChangesPayloadBase & {\n    eventType: `${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.UPDATE}`\n    new: T\n    old: Partial<T>\n  }\n\nexport type RealtimePostgresDeletePayload<T extends { [key: string]: any }> =\n  RealtimePostgresChangesPayloadBase & {\n    eventType: `${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.DELETE}`\n    new: {}\n    old: Partial<T>\n  }\n\nexport type RealtimePostgresChangesPayload<T extends { [key: string]: any }> =\n  | RealtimePostgresInsertPayload<T>\n  | RealtimePostgresUpdatePayload<T>\n  | RealtimePostgresDeletePayload<T>\n\nexport type RealtimePostgresChangesFilter<\n  T extends `${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT}`\n> = {\n  /**\n   * The type of database change to listen to.\n   */\n  event: T\n  /**\n   * The database schema to listen to.\n   */\n  schema: string\n  /**\n   * The database table to listen to.\n   */\n  table?: string\n  /**\n   * Receive database changes when filter is matched.\n   */\n  filter?: string\n}\n\nexport type RealtimeChannelSendResponse = 'ok' | 'timed out' | 'rate limited'\n\nexport enum REALTIME_POSTGRES_CHANGES_LISTEN_EVENT {\n  ALL = '*',\n  INSERT = 'INSERT',\n  UPDATE = 'UPDATE',\n  DELETE = 'DELETE',\n}\n\nexport enum REALTIME_LISTEN_TYPES {\n  BROADCAST = 'broadcast',\n  PRESENCE = 'presence',\n  /**\n   * listen to Postgres changes.\n   */\n  POSTGRES_CHANGES = 'postgres_changes',\n}\n\nexport enum REALTIME_SUBSCRIBE_STATES {\n  SUBSCRIBED = 'SUBSCRIBED',\n  TIMED_OUT = 'TIMED_OUT',\n  CLOSED = 'CLOSED',\n  CHANNEL_ERROR = 'CHANNEL_ERROR',\n}\n\n/** A channel is the basic building block of Realtime\n * and narrows the scope of data flow to subscribed clients.\n * You can think of a channel as a chatroom where participants are able to see who's online\n * and send and receive messages.\n **/\nexport default class RealtimeChannel {\n  bindings: {\n    [key: string]: {\n      type: string\n      filter: { [key: string]: any }\n      callback: Function\n      id?: string\n    }[]\n  } = {}\n  timeout: number\n  state = CHANNEL_STATES.closed\n  joinedOnce = false\n  joinPush: Push\n  rejoinTimer: Timer\n  pushBuffer: Push[] = []\n  presence: RealtimePresence\n\n  constructor(\n    /** Topic name can be any string. */\n    public topic: string,\n    public params: RealtimeChannelOptions = { config: {} },\n    public socket: RealtimeClient\n  ) {\n    this.params.config = {\n      ...{\n        broadcast: { ack: false, self: false },\n        presence: { key: '' },\n      },\n      ...params.config,\n    }\n    this.timeout = this.socket.timeout\n    this.joinPush = new Push(\n      this,\n      CHANNEL_EVENTS.join,\n      this.params,\n      this.timeout\n    )\n    this.rejoinTimer = new Timer(\n      () => this._rejoinUntilConnected(),\n      this.socket.reconnectAfterMs\n    )\n    this.joinPush.receive('ok', () => {\n      this.state = CHANNEL_STATES.joined\n      this.rejoinTimer.reset()\n      this.pushBuffer.forEach((pushEvent: Push) => pushEvent.send())\n      this.pushBuffer = []\n    })\n    this._onClose(() => {\n      this.rejoinTimer.reset()\n      this.socket.log('channel', `close ${this.topic} ${this._joinRef()}`)\n      this.state = CHANNEL_STATES.closed\n      this.socket._remove(this)\n    })\n    this._onError((reason: string) => {\n      if (this._isLeaving() || this._isClosed()) {\n        return\n      }\n      this.socket.log('channel', `error ${this.topic}`, reason)\n      this.state = CHANNEL_STATES.errored\n      this.rejoinTimer.scheduleTimeout()\n    })\n    this.joinPush.receive('timeout', () => {\n      if (!this._isJoining()) {\n        return\n      }\n      this.socket.log('channel', `timeout ${this.topic}`, this.joinPush.timeout)\n      this.state = CHANNEL_STATES.errored\n      this.rejoinTimer.scheduleTimeout()\n    })\n    this._on(CHANNEL_EVENTS.reply, {}, (payload: any, ref: string) => {\n      this._trigger(this._replyEventName(ref), payload)\n    })\n\n    this.presence = new RealtimePresence(this)\n  }\n\n  /** Subscribe registers your client with the server */\n  subscribe(\n    callback?: (status: `${REALTIME_SUBSCRIBE_STATES}`, err?: Error) => void,\n    timeout = this.timeout\n  ): RealtimeChannel {\n    if (this.joinedOnce) {\n      throw `tried to subscribe multiple times. 'subscribe' can only be called a single time per channel instance`\n    } else {\n      const {\n        config: { broadcast, presence },\n      } = this.params\n      this._onError((e: Error) => callback && callback('CHANNEL_ERROR', e))\n      this._onClose(() => callback && callback('CLOSED'))\n\n      const accessTokenPayload: { access_token?: string } = {}\n      const config = {\n        broadcast,\n        presence,\n        postgres_changes:\n          this.bindings.postgres_changes?.map((r) => r.filter) ?? [],\n      }\n\n      if (this.socket.accessToken) {\n        accessTokenPayload.access_token = this.socket.accessToken\n      }\n\n      this.updateJoinPayload({ ...{ config }, ...accessTokenPayload })\n\n      this.joinedOnce = true\n      this._rejoin(timeout)\n\n      this.joinPush\n        .receive(\n          'ok',\n          ({\n            postgres_changes: serverPostgresFilters,\n          }: {\n            postgres_changes: {\n              id: string\n              event: string\n              schema?: string\n              table?: string\n              filter?: string\n            }[]\n          }) => {\n            this.socket.accessToken &&\n              this.socket.setAuth(this.socket.accessToken)\n\n            if (serverPostgresFilters === undefined) {\n              callback && callback('SUBSCRIBED')\n              return\n            } else {\n              const clientPostgresBindings = this.bindings.postgres_changes\n              const bindingsLen = clientPostgresBindings?.length ?? 0\n              const newPostgresBindings = []\n\n              for (let i = 0; i < bindingsLen; i++) {\n                const clientPostgresBinding = clientPostgresBindings[i]\n                const {\n                  filter: { event, schema, table, filter },\n                } = clientPostgresBinding\n                const serverPostgresFilter =\n                  serverPostgresFilters && serverPostgresFilters[i]\n\n                if (\n                  serverPostgresFilter &&\n                  serverPostgresFilter.event === event &&\n                  serverPostgresFilter.schema === schema &&\n                  serverPostgresFilter.table === table &&\n                  serverPostgresFilter.filter === filter\n                ) {\n                  newPostgresBindings.push({\n                    ...clientPostgresBinding,\n                    id: serverPostgresFilter.id,\n                  })\n                } else {\n                  this.unsubscribe()\n                  callback &&\n                    callback(\n                      'CHANNEL_ERROR',\n                      new Error(\n                        'mismatch between server and client bindings for postgres changes'\n                      )\n                    )\n                  return\n                }\n              }\n\n              this.bindings.postgres_changes = newPostgresBindings\n\n              callback && callback('SUBSCRIBED')\n              return\n            }\n          }\n        )\n        .receive('error', (error: { [key: string]: any }) => {\n          callback &&\n            callback(\n              'CHANNEL_ERROR',\n              new Error(\n                JSON.stringify(Object.values(error).join(', ') || 'error')\n              )\n            )\n          return\n        })\n        .receive('timeout', () => {\n          callback && callback('TIMED_OUT')\n          return\n        })\n    }\n\n    return this\n  }\n\n  presenceState(): RealtimePresenceState {\n    return this.presence.state\n  }\n\n  async track(\n    payload: { [key: string]: any },\n    opts: { [key: string]: any } = {}\n  ): Promise<RealtimeChannelSendResponse> {\n    return await this.send(\n      {\n        type: 'presence',\n        event: 'track',\n        payload,\n      },\n      opts.timeout || this.timeout\n    )\n  }\n\n  async untrack(\n    opts: { [key: string]: any } = {}\n  ): Promise<RealtimeChannelSendResponse> {\n    return await this.send(\n      {\n        type: 'presence',\n        event: 'untrack',\n      },\n      opts\n    )\n  }\n\n  /**\n   * Creates an event handler that listens to changes.\n   */\n  on(\n    type: `${REALTIME_LISTEN_TYPES.PRESENCE}`,\n    filter: { event: `${REALTIME_PRESENCE_LISTEN_EVENTS.SYNC}` },\n    callback: () => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.PRESENCE}`,\n    filter: { event: `${REALTIME_PRESENCE_LISTEN_EVENTS.JOIN}` },\n    callback: (payload: RealtimePresenceJoinPayload<T>) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.PRESENCE}`,\n    filter: { event: `${REALTIME_PRESENCE_LISTEN_EVENTS.LEAVE}` },\n    callback: (payload: RealtimePresenceLeavePayload<T>) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.POSTGRES_CHANGES}`,\n    filter: RealtimePostgresChangesFilter<`${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.ALL}`>,\n    callback: (payload: RealtimePostgresChangesPayload<T>) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.POSTGRES_CHANGES}`,\n    filter: RealtimePostgresChangesFilter<`${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.INSERT}`>,\n    callback: (payload: RealtimePostgresInsertPayload<T>) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.POSTGRES_CHANGES}`,\n    filter: RealtimePostgresChangesFilter<`${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.UPDATE}`>,\n    callback: (payload: RealtimePostgresUpdatePayload<T>) => void\n  ): RealtimeChannel\n  on<T extends { [key: string]: any }>(\n    type: `${REALTIME_LISTEN_TYPES.POSTGRES_CHANGES}`,\n    filter: RealtimePostgresChangesFilter<`${REALTIME_POSTGRES_CHANGES_LISTEN_EVENT.DELETE}`>,\n    callback: (payload: RealtimePostgresDeletePayload<T>) => void\n  ): RealtimeChannel\n  /**\n   * The following is placed here to display on supabase.com/docs/reference/javascript/subscribe.\n   * @param type One of \"broadcast\", \"presence\", or \"postgres_changes\".\n   * @param filter Custom object specific to the Realtime feature detailing which payloads to receive.\n   * @param callback Function to be invoked when event handler is triggered.\n   */\n  on(\n    type: `${REALTIME_LISTEN_TYPES.BROADCAST}`,\n    filter: { event: string },\n    callback: (payload: {\n      type: `${REALTIME_LISTEN_TYPES.BROADCAST}`\n      event: string\n      [key: string]: any\n    }) => void\n  ): RealtimeChannel\n  on(\n    type: `${REALTIME_LISTEN_TYPES}`,\n    filter: { event: string; [key: string]: string },\n    callback: (payload: any) => void\n  ): RealtimeChannel {\n    return this._on(type, filter, callback)\n  }\n\n  send(\n    payload: { type: string; [key: string]: any },\n    opts: { [key: string]: any } = {}\n  ): Promise<RealtimeChannelSendResponse> {\n    return new Promise((resolve) => {\n      const push = this._push(\n        payload.type,\n        payload,\n        opts.timeout || this.timeout\n      )\n\n      if (push.rateLimited) {\n        resolve('rate limited')\n      }\n\n      if (\n        payload.type === 'broadcast' &&\n        !this.params?.config?.broadcast?.ack\n      ) {\n        resolve('ok')\n      }\n\n      push.receive('ok', () => resolve('ok'))\n      push.receive('timeout', () => resolve('timed out'))\n    })\n  }\n\n  updateJoinPayload(payload: { [key: string]: any }): void {\n    this.joinPush.updatePayload(payload)\n  }\n\n  /**\n   * Leaves the channel.\n   *\n   * Unsubscribes from server events, and instructs channel to terminate on server.\n   * Triggers onClose() hooks.\n   *\n   * To receive leave acknowledgements, use the a `receive` hook to bind to the server ack, ie:\n   * channel.unsubscribe().receive(\"ok\", () => alert(\"left!\") )\n   */\n  unsubscribe(timeout = this.timeout): Promise<'ok' | 'timed out' | 'error'> {\n    this.state = CHANNEL_STATES.leaving\n    const onClose = () => {\n      this.socket.log('channel', `leave ${this.topic}`)\n      this._trigger(CHANNEL_EVENTS.close, 'leave', this._joinRef())\n    }\n\n    this.rejoinTimer.reset()\n    // Destroy joinPush to avoid connection timeouts during unscription phase\n    this.joinPush.destroy()\n\n    return new Promise((resolve) => {\n      const leavePush = new Push(this, CHANNEL_EVENTS.leave, {}, timeout)\n\n      leavePush\n        .receive('ok', () => {\n          onClose()\n          resolve('ok')\n        })\n        .receive('timeout', () => {\n          onClose()\n          resolve('timed out')\n        })\n        .receive('error', () => {\n          resolve('error')\n        })\n\n      leavePush.send()\n\n      if (!this._canPush()) {\n        leavePush.trigger('ok', {})\n      }\n    })\n  }\n\n  /** @internal */\n  _push(\n    event: string,\n    payload: { [key: string]: any },\n    timeout = this.timeout\n  ) {\n    if (!this.joinedOnce) {\n      throw `tried to push '${event}' to '${this.topic}' before joining. Use channel.subscribe() before pushing events`\n    }\n    let pushEvent = new Push(this, event, payload, timeout)\n    if (this._canPush()) {\n      pushEvent.send()\n    } else {\n      pushEvent.startTimeout()\n      this.pushBuffer.push(pushEvent)\n    }\n\n    return pushEvent\n  }\n\n  /**\n   * Overridable message hook\n   *\n   * Receives all events for specialized message handling before dispatching to the channel callbacks.\n   * Must return the payload, modified or unmodified.\n   *\n   * @internal\n   */\n  _onMessage(_event: string, payload: any, _ref?: string) {\n    return payload\n  }\n\n  /** @internal */\n  _isMember(topic: string): boolean {\n    return this.topic === topic\n  }\n\n  /** @internal */\n  _joinRef(): string {\n    return this.joinPush.ref\n  }\n\n  /** @internal */\n  _trigger(type: string, payload?: any, ref?: string) {\n    const typeLower = type.toLocaleLowerCase()\n    const { close, error, leave, join } = CHANNEL_EVENTS\n    const events: string[] = [close, error, leave, join]\n    if (ref && events.indexOf(typeLower) >= 0 && ref !== this._joinRef()) {\n      return\n    }\n    let handledPayload = this._onMessage(typeLower, payload, ref)\n    if (payload && !handledPayload) {\n      throw 'channel onMessage callbacks must return the payload, modified or unmodified'\n    }\n\n    if (['insert', 'update', 'delete'].includes(typeLower)) {\n      this.bindings.postgres_changes\n        ?.filter((bind) => {\n          return (\n            bind.filter?.event === '*' ||\n            bind.filter?.event?.toLocaleLowerCase() === typeLower\n          )\n        })\n        .map((bind) => bind.callback(handledPayload, ref))\n    } else {\n      this.bindings[typeLower]\n        ?.filter((bind) => {\n          if (\n            ['broadcast', 'presence', 'postgres_changes'].includes(typeLower)\n          ) {\n            if ('id' in bind) {\n              const bindId = bind.id\n              const bindEvent = bind.filter?.event\n              return (\n                bindId &&\n                payload.ids?.includes(bindId) &&\n                (bindEvent === '*' ||\n                  bindEvent?.toLocaleLowerCase() ===\n                    payload.data?.type.toLocaleLowerCase())\n              )\n            } else {\n              const bindEvent = bind?.filter?.event?.toLocaleLowerCase()\n              return (\n                bindEvent === '*' ||\n                bindEvent === payload?.event?.toLocaleLowerCase()\n              )\n            }\n          } else {\n            return bind.type.toLocaleLowerCase() === typeLower\n          }\n        })\n        .map((bind) => {\n          if (typeof handledPayload === 'object' && 'ids' in handledPayload) {\n            const postgresChanges = handledPayload.data\n            const { schema, table, commit_timestamp, type, errors } =\n              postgresChanges\n            const enrichedPayload = {\n              schema: schema,\n              table: table,\n              commit_timestamp: commit_timestamp,\n              eventType: type,\n              new: {},\n              old: {},\n              errors: errors,\n            }\n            handledPayload = {\n              ...enrichedPayload,\n              ...this._getPayloadRecords(postgresChanges),\n            }\n          }\n          bind.callback(handledPayload, ref)\n        })\n    }\n  }\n\n  /** @internal */\n  _isClosed(): boolean {\n    return this.state === CHANNEL_STATES.closed\n  }\n\n  /** @internal */\n  _isJoined(): boolean {\n    return this.state === CHANNEL_STATES.joined\n  }\n\n  /** @internal */\n  _isJoining(): boolean {\n    return this.state === CHANNEL_STATES.joining\n  }\n\n  /** @internal */\n  _isLeaving(): boolean {\n    return this.state === CHANNEL_STATES.leaving\n  }\n\n  /** @internal */\n  _replyEventName(ref: string): string {\n    return `chan_reply_${ref}`\n  }\n\n  /** @internal */\n  _on(type: string, filter: { [key: string]: any }, callback: Function) {\n    const typeLower = type.toLocaleLowerCase()\n\n    const binding = {\n      type: typeLower,\n      filter: filter,\n      callback: callback,\n    }\n\n    if (this.bindings[typeLower]) {\n      this.bindings[typeLower].push(binding)\n    } else {\n      this.bindings[typeLower] = [binding]\n    }\n\n    return this\n  }\n\n  /** @internal */\n  _off(type: string, filter: { [key: string]: any }) {\n    const typeLower = type.toLocaleLowerCase()\n\n    this.bindings[typeLower] = this.bindings[typeLower].filter((bind) => {\n      return !(\n        bind.type?.toLocaleLowerCase() === typeLower &&\n        RealtimeChannel.isEqual(bind.filter, filter)\n      )\n    })\n    return this\n  }\n\n  /** @internal */\n  private static isEqual(\n    obj1: { [key: string]: string },\n    obj2: { [key: string]: string }\n  ) {\n    if (Object.keys(obj1).length !== Object.keys(obj2).length) {\n      return false\n    }\n\n    for (const k in obj1) {\n      if (obj1[k] !== obj2[k]) {\n        return false\n      }\n    }\n\n    return true\n  }\n\n  /** @internal */\n  private _rejoinUntilConnected() {\n    this.rejoinTimer.scheduleTimeout()\n    if (this.socket.isConnected()) {\n      this._rejoin()\n    }\n  }\n\n  /**\n   * Registers a callback that will be executed when the channel closes.\n   *\n   * @internal\n   */\n  private _onClose(callback: Function) {\n    this._on(CHANNEL_EVENTS.close, {}, callback)\n  }\n\n  /**\n   * Registers a callback that will be executed when the channel encounteres an error.\n   *\n   * @internal\n   */\n  private _onError(callback: Function) {\n    this._on(CHANNEL_EVENTS.error, {}, (reason: string) => callback(reason))\n  }\n\n  /**\n   * Returns `true` if the socket is connected and the channel has been joined.\n   *\n   * @internal\n   */\n  private _canPush(): boolean {\n    return this.socket.isConnected() && this._isJoined()\n  }\n\n  /** @internal */\n  private _rejoin(timeout = this.timeout): void {\n    if (this._isLeaving()) {\n      return\n    }\n    this.socket._leaveOpenTopic(this.topic)\n    this.state = CHANNEL_STATES.joining\n    this.joinPush.resend(timeout)\n  }\n\n  /** @internal */\n  private _getPayloadRecords(payload: any) {\n    const records = {\n      new: {},\n      old: {},\n    }\n\n    if (payload.type === 'INSERT' || payload.type === 'UPDATE') {\n      records.new = Transformers.convertChangeData(\n        payload.columns,\n        payload.record\n      )\n    }\n\n    if (payload.type === 'UPDATE' || payload.type === 'DELETE') {\n      records.old = Transformers.convertChangeData(\n        payload.columns,\n        payload.old_record\n      )\n    }\n\n    return records\n  }\n}\n","import { w3cwebsocket } from 'websocket'\nimport {\n  VSN,\n  CHANNEL_EVENTS,\n  TRANSPORTS,\n  SOCKET_STATES,\n  DEFAULT_TIMEOUT,\n  WS_CLOSE_NORMAL,\n  DEFAULT_HEADERS,\n  CONNECTION_STATE,\n} from './lib/constants'\nimport Timer from './lib/timer'\nimport Serializer from './lib/serializer'\nimport RealtimeChannel, { RealtimeChannelOptions } from './RealtimeChannel'\n\nexport type RealtimeClientOptions = {\n  transport?: WebSocket\n  timeout?: number\n  heartbeatIntervalMs?: number\n  logger?: Function\n  encode?: Function\n  decode?: Function\n  reconnectAfterMs?: Function\n  headers?: { [key: string]: string }\n  params?: { [key: string]: any }\n}\n\nexport type RealtimeMessage = {\n  topic: string\n  event: string\n  payload: any\n  ref: string\n  join_ref?: string\n}\n\nexport type RealtimeRemoveChannelResponse = 'ok' | 'timed out' | 'error'\n\nconst noop = () => {}\n\nexport default class RealtimeClient {\n  accessToken: string | null = null\n  channels: RealtimeChannel[] = []\n  endPoint: string = ''\n  headers?: { [key: string]: string } = DEFAULT_HEADERS\n  params?: { [key: string]: string } = {}\n  timeout: number = DEFAULT_TIMEOUT\n  transport: any = w3cwebsocket\n  heartbeatIntervalMs: number = 30000\n  heartbeatTimer: ReturnType<typeof setInterval> | undefined = undefined\n  pendingHeartbeatRef: string | null = null\n  ref: number = 0\n  reconnectTimer: Timer\n  logger: Function = noop\n  encode: Function\n  decode: Function\n  reconnectAfterMs: Function\n  conn: WebSocket | null = null\n  sendBuffer: Function[] = []\n  serializer: Serializer = new Serializer()\n  stateChangeCallbacks: {\n    open: Function[]\n    close: Function[]\n    error: Function[]\n    message: Function[]\n  } = {\n    open: [],\n    close: [],\n    error: [],\n    message: [],\n  }\n  eventsPerSecondLimitMs: number = 100\n  inThrottle: boolean = false\n\n  /**\n   * Initializes the Socket.\n   *\n   * @param endPoint The string WebSocket endpoint, ie, \"ws://example.com/socket\", \"wss://example.com\", \"/socket\" (inherited host & protocol)\n   * @param options.transport The Websocket Transport, for example WebSocket.\n   * @param options.timeout The default timeout in milliseconds to trigger push timeouts.\n   * @param options.params The optional params to pass when connecting.\n   * @param options.headers The optional headers to pass when connecting.\n   * @param options.heartbeatIntervalMs The millisec interval to send a heartbeat message.\n   * @param options.logger The optional function for specialized logging, ie: logger: (kind, msg, data) => { console.log(`${kind}: ${msg}`, data) }\n   * @param options.encode The function to encode outgoing messages. Defaults to JSON: (payload, callback) => callback(JSON.stringify(payload))\n   * @param options.decode The function to decode incoming messages. Defaults to Serializer's decode.\n   * @param options.reconnectAfterMs he optional function that returns the millsec reconnect interval. Defaults to stepped backoff off.\n   */\n  constructor(endPoint: string, options?: RealtimeClientOptions) {\n    this.endPoint = `${endPoint}/${TRANSPORTS.websocket}`\n\n    if (options?.params) this.params = options.params\n    if (options?.headers) this.headers = { ...this.headers, ...options.headers }\n    if (options?.timeout) this.timeout = options.timeout\n    if (options?.logger) this.logger = options.logger\n    if (options?.transport) this.transport = options.transport\n    if (options?.heartbeatIntervalMs)\n      this.heartbeatIntervalMs = options.heartbeatIntervalMs\n\n    const eventsPerSecond = options?.params?.eventsPerSecond\n    if (eventsPerSecond)\n      this.eventsPerSecondLimitMs = Math.floor(1000 / eventsPerSecond)\n\n    this.reconnectAfterMs = options?.reconnectAfterMs\n      ? options.reconnectAfterMs\n      : (tries: number) => {\n          return [1000, 2000, 5000, 10000][tries - 1] || 10000\n        }\n    this.encode = options?.encode\n      ? options.encode\n      : (payload: JSON, callback: Function) => {\n          return callback(JSON.stringify(payload))\n        }\n    this.decode = options?.decode\n      ? options.decode\n      : this.serializer.decode.bind(this.serializer)\n    this.reconnectTimer = new Timer(async () => {\n      this.disconnect()\n      this.connect()\n    }, this.reconnectAfterMs)\n  }\n\n  /**\n   * Connects the socket, unless already connected.\n   */\n  connect(): void {\n    if (this.conn) {\n      return\n    }\n\n    this.conn = new this.transport(this._endPointURL(), [], null, this.headers)\n\n    if (this.conn) {\n      this.conn.binaryType = 'arraybuffer'\n      this.conn.onopen = () => this._onConnOpen()\n      this.conn.onerror = (error) => this._onConnError(error as ErrorEvent)\n      this.conn.onmessage = (event) => this._onConnMessage(event)\n      this.conn.onclose = (event) => this._onConnClose(event)\n    }\n  }\n\n  /**\n   * Disconnects the socket.\n   *\n   * @param code A numeric status code to send on disconnect.\n   * @param reason A custom reason for the disconnect.\n   */\n  disconnect(code?: number, reason?: string): void {\n    if (this.conn) {\n      this.conn.onclose = function () {} // noop\n      if (code) {\n        this.conn.close(code, reason ?? '')\n      } else {\n        this.conn.close()\n      }\n      this.conn = null\n      // remove open handles\n      this.heartbeatTimer && clearInterval(this.heartbeatTimer)\n      this.reconnectTimer.reset()\n    }\n  }\n\n  /**\n   * Returns all created channels\n   */\n  getChannels(): RealtimeChannel[] {\n    return this.channels\n  }\n\n  /**\n   * Unsubscribes and removes a single channel\n   * @param channel A RealtimeChannel instance\n   */\n  removeChannel(\n    channel: RealtimeChannel\n  ): Promise<RealtimeRemoveChannelResponse> {\n    return channel.unsubscribe().then((status) => {\n      if (this.channels.length === 0) {\n        this.disconnect()\n      }\n      return status\n    })\n  }\n\n  /**\n   * Unsubscribes and removes all channels\n   */\n  removeAllChannels(): Promise<RealtimeRemoveChannelResponse[]> {\n    return Promise.all(\n      this.channels.map((channel) => channel.unsubscribe())\n    ).then((values) => {\n      this.disconnect()\n      return values\n    })\n  }\n\n  /**\n   * Logs the message.\n   *\n   * For customized logging, `this.logger` can be overridden.\n   */\n  log(kind: string, msg: string, data?: any) {\n    this.logger(kind, msg, data)\n  }\n\n  /**\n   * Returns the current state of the socket.\n   */\n  connectionState(): CONNECTION_STATE {\n    switch (this.conn && this.conn.readyState) {\n      case SOCKET_STATES.connecting:\n        return CONNECTION_STATE.Connecting\n      case SOCKET_STATES.open:\n        return CONNECTION_STATE.Open\n      case SOCKET_STATES.closing:\n        return CONNECTION_STATE.Closing\n      default:\n        return CONNECTION_STATE.Closed\n    }\n  }\n\n  /**\n   * Returns `true` is the connection is open.\n   */\n  isConnected(): boolean {\n    return this.connectionState() === CONNECTION_STATE.Open\n  }\n\n  channel(\n    topic: string,\n    params: RealtimeChannelOptions = { config: {} }\n  ): RealtimeChannel {\n    if (!this.isConnected()) {\n      this.connect()\n    }\n\n    const chan = new RealtimeChannel(`realtime:${topic}`, params, this)\n    this.channels.push(chan)\n    return chan\n  }\n\n  /**\n   * Push out a message if the socket is connected.\n   *\n   * If the socket is not connected, the message gets enqueued within a local buffer, and sent out when a connection is next established.\n   */\n  push(data: RealtimeMessage): 'rate limited' | void {\n    const { topic, event, payload, ref } = data\n    let callback = () => {\n      this.encode(data, (result: any) => {\n        this.conn?.send(result)\n      })\n    }\n    this.log('push', `${topic} ${event} (${ref})`, payload)\n    if (this.isConnected()) {\n      if (['broadcast', 'presence', 'postgres_changes'].includes(event)) {\n        const isThrottled = this._throttle(callback)()\n        if (isThrottled) {\n          return 'rate limited'\n        }\n      } else {\n        callback()\n      }\n    } else {\n      this.sendBuffer.push(callback)\n    }\n  }\n\n  /**\n   * Sets the JWT access token used for channel subscription authorization and Realtime RLS.\n   *\n   * @param token A JWT string.\n   */\n  setAuth(token: string | null): void {\n    this.accessToken = token\n\n    this.channels.forEach((channel) => {\n      token && channel.updateJoinPayload({ access_token: token })\n\n      if (channel.joinedOnce && channel._isJoined()) {\n        channel._push(CHANNEL_EVENTS.access_token, { access_token: token })\n      }\n    })\n  }\n\n  /**\n   * Return the next message ref, accounting for overflows\n   *\n   * @internal\n   */\n  _makeRef(): string {\n    let newRef = this.ref + 1\n    if (newRef === this.ref) {\n      this.ref = 0\n    } else {\n      this.ref = newRef\n    }\n\n    return this.ref.toString()\n  }\n\n  /**\n   * Unsubscribe from channels with the specified topic.\n   *\n   * @internal\n   */\n  _leaveOpenTopic(topic: string): void {\n    let dupChannel = this.channels.find(\n      (c) => c.topic === topic && (c._isJoined() || c._isJoining())\n    )\n    if (dupChannel) {\n      this.log('transport', `leaving duplicate topic \"${topic}\"`)\n      dupChannel.unsubscribe()\n    }\n  }\n\n  /**\n   * Removes a subscription from the socket.\n   *\n   * @param channel An open subscription.\n   *\n   * @internal\n   */\n  _remove(channel: RealtimeChannel) {\n    this.channels = this.channels.filter(\n      (c: RealtimeChannel) => c._joinRef() !== channel._joinRef()\n    )\n  }\n\n  /**\n   * Returns the URL of the websocket.\n   *\n   * @internal\n   */\n  private _endPointURL(): string {\n    return this._appendParams(\n      this.endPoint,\n      Object.assign({}, this.params, { vsn: VSN })\n    )\n  }\n\n  /** @internal */\n  private _onConnMessage(rawMessage: { data: any }) {\n    this.decode(rawMessage.data, (msg: RealtimeMessage) => {\n      let { topic, event, payload, ref } = msg\n\n      if (\n        (ref && ref === this.pendingHeartbeatRef) ||\n        event === payload?.type\n      ) {\n        this.pendingHeartbeatRef = null\n      }\n\n      this.log(\n        'receive',\n        `${payload.status || ''} ${topic} ${event} ${\n          (ref && '(' + ref + ')') || ''\n        }`,\n        payload\n      )\n      this.channels\n        .filter((channel: RealtimeChannel) => channel._isMember(topic))\n        .forEach((channel: RealtimeChannel) =>\n          channel._trigger(event, payload, ref)\n        )\n      this.stateChangeCallbacks.message.forEach((callback) => callback(msg))\n    })\n  }\n\n  /** @internal */\n  private _onConnOpen() {\n    this.log('transport', `connected to ${this._endPointURL()}`)\n    this._flushSendBuffer()\n    this.reconnectTimer.reset()\n    this.heartbeatTimer && clearInterval(this.heartbeatTimer)\n    this.heartbeatTimer = setInterval(\n      () => this._sendHeartbeat(),\n      this.heartbeatIntervalMs\n    )\n    this.stateChangeCallbacks.open.forEach((callback) => callback())!\n  }\n\n  /** @internal */\n  private _onConnClose(event: any) {\n    this.log('transport', 'close', event)\n    this._triggerChanError()\n    this.heartbeatTimer && clearInterval(this.heartbeatTimer)\n    this.reconnectTimer.scheduleTimeout()\n    this.stateChangeCallbacks.close.forEach((callback) => callback(event))\n  }\n\n  /** @internal */\n  private _onConnError(error: ErrorEvent) {\n    this.log('transport', error.message)\n    this._triggerChanError()\n    this.stateChangeCallbacks.error.forEach((callback) => callback(error))\n  }\n\n  /** @internal */\n  private _triggerChanError() {\n    this.channels.forEach((channel: RealtimeChannel) =>\n      channel._trigger(CHANNEL_EVENTS.error)\n    )\n  }\n\n  /** @internal */\n  private _appendParams(\n    url: string,\n    params: { [key: string]: string }\n  ): string {\n    if (Object.keys(params).length === 0) {\n      return url\n    }\n    const prefix = url.match(/\\?/) ? '&' : '?'\n    const query = new URLSearchParams(params)\n\n    return `${url}${prefix}${query}`\n  }\n\n  /** @internal */\n  private _flushSendBuffer() {\n    if (this.isConnected() && this.sendBuffer.length > 0) {\n      this.sendBuffer.forEach((callback) => callback())\n      this.sendBuffer = []\n    }\n  }\n  /** @internal */\n  private _sendHeartbeat() {\n    if (!this.isConnected()) {\n      return\n    }\n    if (this.pendingHeartbeatRef) {\n      this.pendingHeartbeatRef = null\n      this.log(\n        'transport',\n        'heartbeat timeout. Attempting to re-establish connection'\n      )\n      this.conn?.close(WS_CLOSE_NORMAL, 'hearbeat timeout')\n      return\n    }\n    this.pendingHeartbeatRef = this._makeRef()\n    this.push({\n      topic: 'phoenix',\n      event: 'heartbeat',\n      payload: {},\n      ref: this.pendingHeartbeatRef,\n    })\n    this.setAuth(this.accessToken)\n  }\n\n  /** @internal */\n  private _throttle(\n    callback: Function,\n    eventsPerSecondLimitMs: number = this.eventsPerSecondLimitMs\n  ): () => boolean {\n    return () => {\n      if (this.inThrottle) return true\n\n      callback()\n\n      if (eventsPerSecondLimitMs > 0) {\n        this.inThrottle = true\n\n        setTimeout(() => {\n          this.inThrottle = false\n        }, eventsPerSecondLimitMs)\n      }\n\n      return false\n    }\n  }\n}\n","export class StorageError extends Error {\n  protected __isStorageError = true\n\n  constructor(message: string) {\n    super(message)\n    this.name = 'StorageError'\n  }\n}\n\nexport function isStorageError(error: unknown): error is StorageError {\n  return typeof error === 'object' && error !== null && '__isStorageError' in error\n}\n\nexport class StorageApiError extends StorageError {\n  status: number\n\n  constructor(message: string, status: number) {\n    super(message)\n    this.name = 'StorageApiError'\n    this.status = status\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      status: this.status,\n    }\n  }\n}\n\nexport class StorageUnknownError extends StorageError {\n  originalError: unknown\n\n  constructor(message: string, originalError: unknown) {\n    super(message)\n    this.name = 'StorageUnknownError'\n    this.originalError = originalError\n  }\n}\n","type Fetch = typeof fetch\n\nexport const resolveFetch = (customFetch?: Fetch): Fetch => {\n  let _fetch: Fetch\n  if (customFetch) {\n    _fetch = customFetch\n  } else if (typeof fetch === 'undefined') {\n    _fetch = async (...args) => await (await import('cross-fetch')).fetch(...args)\n  } else {\n    _fetch = fetch\n  }\n  return (...args) => _fetch(...args)\n}\n\nexport const resolveResponse = async () => {\n  if (typeof Response === 'undefined') {\n    return (await import('cross-fetch')).Response\n  }\n\n  return Response\n}\n","import { StorageApiError, StorageUnknownError } from './errors'\nimport { resolveResponse } from './helpers'\nimport { FetchParameters } from './types'\n\nexport type Fetch = typeof fetch\n\nexport interface FetchOptions {\n  headers?: {\n    [key: string]: string\n  }\n  noResolveJson?: boolean\n}\n\nexport type RequestMethodType = 'GET' | 'POST' | 'PUT' | 'DELETE'\n\nconst _getErrorMessage = (err: any): string =>\n  err.msg || err.message || err.error_description || err.error || JSON.stringify(err)\n\nconst handleError = async (error: unknown, reject: (reason?: any) => void) => {\n  const Res = await resolveResponse()\n\n  if (error instanceof Res) {\n    error.json().then((err) => {\n      reject(new StorageApiError(_getErrorMessage(err), error.status || 500))\n    })\n  } else {\n    reject(new StorageUnknownError(_getErrorMessage(error), error))\n  }\n}\n\nconst _getRequestParams = (\n  method: RequestMethodType,\n  options?: FetchOptions,\n  parameters?: FetchParameters,\n  body?: object\n) => {\n  const params: { [k: string]: any } = { method, headers: options?.headers || {} }\n\n  if (method === 'GET') {\n    return params\n  }\n\n  params.headers = { 'Content-Type': 'application/json', ...options?.headers }\n  params.body = JSON.stringify(body)\n  return { ...params, ...parameters }\n}\n\nasync function _handleRequest(\n  fetcher: Fetch,\n  method: RequestMethodType,\n  url: string,\n  options?: FetchOptions,\n  parameters?: FetchParameters,\n  body?: object\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    fetcher(url, _getRequestParams(method, options, parameters, body))\n      .then((result) => {\n        if (!result.ok) throw result\n        if (options?.noResolveJson) return result\n        return result.json()\n      })\n      .then((data) => resolve(data))\n      .catch((error) => handleError(error, reject))\n  })\n}\n\nexport async function get(\n  fetcher: Fetch,\n  url: string,\n  options?: FetchOptions,\n  parameters?: FetchParameters\n): Promise<any> {\n  return _handleRequest(fetcher, 'GET', url, options, parameters)\n}\n\nexport async function post(\n  fetcher: Fetch,\n  url: string,\n  body: object,\n  options?: FetchOptions,\n  parameters?: FetchParameters\n): Promise<any> {\n  return _handleRequest(fetcher, 'POST', url, options, parameters, body)\n}\n\nexport async function put(\n  fetcher: Fetch,\n  url: string,\n  body: object,\n  options?: FetchOptions,\n  parameters?: FetchParameters\n): Promise<any> {\n  return _handleRequest(fetcher, 'PUT', url, options, parameters, body)\n}\n\nexport async function remove(\n  fetcher: Fetch,\n  url: string,\n  body: object,\n  options?: FetchOptions,\n  parameters?: FetchParameters\n): Promise<any> {\n  return _handleRequest(fetcher, 'DELETE', url, options, parameters, body)\n}\n","import { isStorageError, StorageError } from '../lib/errors'\nimport { Fetch, get, post, remove } from '../lib/fetch'\nimport { resolveFetch } from '../lib/helpers'\nimport {\n  FileObject,\n  FileOptions,\n  SearchOptions,\n  FetchParameters,\n  TransformOptions,\n} from '../lib/types'\n\nconst DEFAULT_SEARCH_OPTIONS = {\n  limit: 100,\n  offset: 0,\n  sortBy: {\n    column: 'name',\n    order: 'asc',\n  },\n}\n\nconst DEFAULT_FILE_OPTIONS: FileOptions = {\n  cacheControl: '3600',\n  contentType: 'text/plain;charset=UTF-8',\n  upsert: false,\n}\n\nexport default class StorageFileApi {\n  protected url: string\n  protected headers: { [key: string]: string }\n  protected bucketId?: string\n  protected fetch: Fetch\n\n  constructor(\n    url: string,\n    headers: { [key: string]: string } = {},\n    bucketId?: string,\n    fetch?: Fetch\n  ) {\n    this.url = url\n    this.headers = headers\n    this.bucketId = bucketId\n    this.fetch = resolveFetch(fetch)\n  }\n\n  /**\n   * Uploads a file to an existing bucket or replaces an existing file at the specified path with a new one.\n   *\n   * @param method HTTP method.\n   * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n   * @param fileBody The body of the file to be stored in the bucket.\n   */\n  private async uploadOrUpdate(\n    method: 'POST' | 'PUT',\n    path: string,\n    fileBody:\n      | ArrayBuffer\n      | ArrayBufferView\n      | Blob\n      | Buffer\n      | File\n      | FormData\n      | NodeJS.ReadableStream\n      | ReadableStream<Uint8Array>\n      | URLSearchParams\n      | string,\n    fileOptions?: FileOptions\n  ): Promise<\n    | {\n        data: { path: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      let body\n      const options = { ...DEFAULT_FILE_OPTIONS, ...fileOptions }\n      const headers: Record<string, string> = {\n        ...this.headers,\n        ...(method === 'POST' && { 'x-upsert': String(options.upsert as boolean) }),\n      }\n\n      if (typeof Blob !== 'undefined' && fileBody instanceof Blob) {\n        body = new FormData()\n        body.append('cacheControl', options.cacheControl as string)\n        body.append('', fileBody)\n      } else if (typeof FormData !== 'undefined' && fileBody instanceof FormData) {\n        body = fileBody\n        body.append('cacheControl', options.cacheControl as string)\n      } else {\n        body = fileBody\n        headers['cache-control'] = `max-age=${options.cacheControl}`\n        headers['content-type'] = options.contentType as string\n      }\n\n      const cleanPath = this._removeEmptyFolders(path)\n      const _path = this._getFinalPath(cleanPath)\n      const res = await this.fetch(`${this.url}/object/${_path}`, {\n        method,\n        body: body as BodyInit,\n        headers,\n      })\n\n      if (res.ok) {\n        return {\n          data: { path: cleanPath },\n          error: null,\n        }\n      } else {\n        const error = await res.json()\n        return { data: null, error }\n      }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Uploads a file to an existing bucket.\n   *\n   * @param path The file path, including the file name. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to upload.\n   * @param fileBody The body of the file to be stored in the bucket.\n   */\n  async upload(\n    path: string,\n    fileBody:\n      | ArrayBuffer\n      | ArrayBufferView\n      | Blob\n      | Buffer\n      | File\n      | FormData\n      | NodeJS.ReadableStream\n      | ReadableStream<Uint8Array>\n      | URLSearchParams\n      | string,\n    fileOptions?: FileOptions\n  ): Promise<\n    | {\n        data: { path: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    return this.uploadOrUpdate('POST', path, fileBody, fileOptions)\n  }\n\n  /**\n   * Replaces an existing file at the specified path with a new one.\n   *\n   * @param path The relative file path. Should be of the format `folder/subfolder/filename.png`. The bucket must already exist before attempting to update.\n   * @param fileBody The body of the file to be stored in the bucket.\n   */\n  async update(\n    path: string,\n    fileBody:\n      | ArrayBuffer\n      | ArrayBufferView\n      | Blob\n      | Buffer\n      | File\n      | FormData\n      | NodeJS.ReadableStream\n      | ReadableStream<Uint8Array>\n      | URLSearchParams\n      | string,\n    fileOptions?: FileOptions\n  ): Promise<\n    | {\n        data: { path: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    return this.uploadOrUpdate('PUT', path, fileBody, fileOptions)\n  }\n\n  /**\n   * Moves an existing file to a new path in the same bucket.\n   *\n   * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n   * @param toPath The new file path, including the new file name. For example `folder/image-new.png`.\n   */\n  async move(\n    fromPath: string,\n    toPath: string\n  ): Promise<\n    | {\n        data: { message: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/object/move`,\n        { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath },\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Copies an existing file to a new path in the same bucket.\n   *\n   * @param fromPath The original file path, including the current file name. For example `folder/image.png`.\n   * @param toPath The new file path, including the new file name. For example `folder/image-copy.png`.\n   */\n  async copy(\n    fromPath: string,\n    toPath: string\n  ): Promise<\n    | {\n        data: { path: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/object/copy`,\n        { bucketId: this.bucketId, sourceKey: fromPath, destinationKey: toPath },\n        { headers: this.headers }\n      )\n      return { data: { path: data.Key }, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Creates a signed URL. Use a signed URL to share a file for a fixed amount of time.\n   *\n   * @param path The file path, including the current file name. For example `folder/image.png`.\n   * @param expiresIn The number of seconds until the signed URL expires. For example, `60` for a URL which is valid for one minute.\n   * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n   * @param options.transform Transform the asset before serving it to the client.\n   */\n  async createSignedUrl(\n    path: string,\n    expiresIn: number,\n    options?: { download?: string | boolean; transform?: TransformOptions }\n  ): Promise<\n    | {\n        data: { signedUrl: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      let _path = this._getFinalPath(path)\n\n      let data = await post(\n        this.fetch,\n        `${this.url}/object/sign/${_path}`,\n        { expiresIn, ...(options?.transform ? { transform: options.transform } : {}) },\n        { headers: this.headers }\n      )\n      const downloadQueryParam = options?.download\n        ? `&download=${options.download === true ? '' : options.download}`\n        : ''\n      const signedUrl = encodeURI(`${this.url}${data.signedURL}${downloadQueryParam}`)\n      data = { signedUrl }\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Creates multiple signed URLs. Use a signed URL to share a file for a fixed amount of time.\n   *\n   * @param paths The file paths to be downloaded, including the current file names. For example `['folder/image.png', 'folder2/image2.png']`.\n   * @param expiresIn The number of seconds until the signed URLs expire. For example, `60` for URLs which are valid for one minute.\n   * @param options.download triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n   */\n  async createSignedUrls(\n    paths: string[],\n    expiresIn: number,\n    options?: { download: string | boolean }\n  ): Promise<\n    | {\n        data: { error: string | null; path: string | null; signedUrl: string }[]\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/object/sign/${this.bucketId}`,\n        { expiresIn, paths },\n        { headers: this.headers }\n      )\n\n      const downloadQueryParam = options?.download\n        ? `&download=${options.download === true ? '' : options.download}`\n        : ''\n      return {\n        data: data.map((datum: { signedURL: string }) => ({\n          ...datum,\n          signedUrl: datum.signedURL\n            ? encodeURI(`${this.url}${datum.signedURL}${downloadQueryParam}`)\n            : null,\n        })),\n        error: null,\n      }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Downloads a file from a private bucket. For public buckets, make a request to the URL returned from `getPublicUrl` instead.\n   *\n   * @param path The full path and file name of the file to be downloaded. For example `folder/image.png`.\n   * @param options.transform Transform the asset before serving it to the client.\n   */\n  async download(\n    path: string,\n    options?: { transform?: TransformOptions }\n  ): Promise<\n    | {\n        data: Blob\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    const wantsTransformation = typeof options?.transform !== 'undefined'\n    const renderPath = wantsTransformation ? 'render/image/authenticated' : 'object'\n    const transformationQuery = this.transformOptsToQueryString(options?.transform || {})\n    const queryString = transformationQuery ? `?${transformationQuery}` : ''\n\n    try {\n      const _path = this._getFinalPath(path)\n      const res = await get(this.fetch, `${this.url}/${renderPath}/${_path}${queryString}`, {\n        headers: this.headers,\n        noResolveJson: true,\n      })\n      const data = await res.blob()\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * A simple convenience function to get the URL for an asset in a public bucket. If you do not want to use this function, you can construct the public URL by concatenating the bucket URL with the path to the asset.\n   * This function does not verify if the bucket is public. If a public URL is created for a bucket which is not public, you will not be able to download the asset.\n   *\n   * @param path The path and name of the file to generate the public URL for. For example `folder/image.png`.\n   * @param options.download Triggers the file as a download if set to true. Set this parameter as the name of the file if you want to trigger the download with a different filename.\n   * @param options.transform Transform the asset before serving it to the client.\n   */\n  getPublicUrl(\n    path: string,\n    options?: { download?: string | boolean; transform?: TransformOptions }\n  ): { data: { publicUrl: string } } {\n    const _path = this._getFinalPath(path)\n    const _queryString = []\n\n    const downloadQueryParam = options?.download\n      ? `download=${options.download === true ? '' : options.download}`\n      : ''\n\n    if (downloadQueryParam !== '') {\n      _queryString.push(downloadQueryParam)\n    }\n\n    const wantsTransformation = typeof options?.transform !== 'undefined'\n    const renderPath = wantsTransformation ? 'render/image' : 'object'\n    const transformationQuery = this.transformOptsToQueryString(options?.transform || {})\n\n    if (transformationQuery !== '') {\n      _queryString.push(transformationQuery)\n    }\n\n    let queryString = _queryString.join('&')\n    if (queryString !== '') {\n      queryString = `?${queryString}`\n    }\n\n    return {\n      data: { publicUrl: encodeURI(`${this.url}/${renderPath}/public/${_path}${queryString}`) },\n    }\n  }\n\n  /**\n   * Deletes files within the same bucket\n   *\n   * @param paths An array of files to delete, including the path and file name. For example [`'folder/image.png'`].\n   */\n  async remove(\n    paths: string[]\n  ): Promise<\n    | {\n        data: FileObject[]\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await remove(\n        this.fetch,\n        `${this.url}/object/${this.bucketId}`,\n        { prefixes: paths },\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Get file metadata\n   * @param id the file id to retrieve metadata\n   */\n  // async getMetadata(\n  //   id: string\n  // ): Promise<\n  //   | {\n  //       data: Metadata\n  //       error: null\n  //     }\n  //   | {\n  //       data: null\n  //       error: StorageError\n  //     }\n  // > {\n  //   try {\n  //     const data = await get(this.fetch, `${this.url}/metadata/${id}`, { headers: this.headers })\n  //     return { data, error: null }\n  //   } catch (error) {\n  //     if (isStorageError(error)) {\n  //       return { data: null, error }\n  //     }\n\n  //     throw error\n  //   }\n  // }\n\n  /**\n   * Update file metadata\n   * @param id the file id to update metadata\n   * @param meta the new file metadata\n   */\n  // async updateMetadata(\n  //   id: string,\n  //   meta: Metadata\n  // ): Promise<\n  //   | {\n  //       data: Metadata\n  //       error: null\n  //     }\n  //   | {\n  //       data: null\n  //       error: StorageError\n  //     }\n  // > {\n  //   try {\n  //     const data = await post(\n  //       this.fetch,\n  //       `${this.url}/metadata/${id}`,\n  //       { ...meta },\n  //       { headers: this.headers }\n  //     )\n  //     return { data, error: null }\n  //   } catch (error) {\n  //     if (isStorageError(error)) {\n  //       return { data: null, error }\n  //     }\n\n  //     throw error\n  //   }\n  // }\n\n  /**\n   * Lists all the files within a bucket.\n   * @param path The folder path.\n   */\n  async list(\n    path?: string,\n    options?: SearchOptions,\n    parameters?: FetchParameters\n  ): Promise<\n    | {\n        data: FileObject[]\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const body = { ...DEFAULT_SEARCH_OPTIONS, ...options, prefix: path || '' }\n      const data = await post(\n        this.fetch,\n        `${this.url}/object/list/${this.bucketId}`,\n        body,\n        { headers: this.headers },\n        parameters\n      )\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  private _getFinalPath(path: string) {\n    return `${this.bucketId}/${path}`\n  }\n\n  private _removeEmptyFolders(path: string) {\n    return path.replace(/^\\/|\\/$/g, '').replace(/\\/+/g, '/')\n  }\n\n  private transformOptsToQueryString(transform: TransformOptions) {\n    const params = []\n    if (transform.width) {\n      params.push(`width=${transform.width}`)\n    }\n\n    if (transform.height) {\n      params.push(`height=${transform.height}`)\n    }\n\n    if (transform.resize) {\n      params.push(`resize=${transform.resize}`)\n    }\n\n    if (transform.format) {\n      params.push(`format=${transform.format}`)\n    }\n\n    if (transform.quality) {\n      params.push(`quality=${transform.quality}`)\n    }\n\n    return params.join('&')\n  }\n}\n","import { version } from './version'\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `storage-js/${version}` }\n","// generated by genversion\nexport const version = '2.3.0'\n","import { DEFAULT_HEADERS } from '../lib/constants'\nimport { isStorageError, StorageError } from '../lib/errors'\nimport { Fetch, get, post, put, remove } from '../lib/fetch'\nimport { resolveFetch } from '../lib/helpers'\nimport { Bucket } from '../lib/types'\n\nexport default class StorageBucketApi {\n  protected url: string\n  protected headers: { [key: string]: string }\n  protected fetch: Fetch\n\n  constructor(url: string, headers: { [key: string]: string } = {}, fetch?: Fetch) {\n    this.url = url\n    this.headers = { ...DEFAULT_HEADERS, ...headers }\n    this.fetch = resolveFetch(fetch)\n  }\n\n  /**\n   * Retrieves the details of all Storage buckets within an existing project.\n   */\n  async listBuckets(): Promise<\n    | {\n        data: Bucket[]\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await get(this.fetch, `${this.url}/bucket`, { headers: this.headers })\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Retrieves the details of an existing Storage bucket.\n   *\n   * @param id The unique identifier of the bucket you would like to retrieve.\n   */\n  async getBucket(\n    id: string\n  ): Promise<\n    | {\n        data: Bucket\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await get(this.fetch, `${this.url}/bucket/${id}`, { headers: this.headers })\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Creates a new Storage bucket\n   *\n   * @param id A unique identifier for the bucket you are creating.\n   * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations. By default, buckets are private.\n   * @returns newly created bucket id\n   */\n  async createBucket(\n    id: string,\n    options: { public: boolean } = { public: false }\n  ): Promise<\n    | {\n        data: Pick<Bucket, 'name'>\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/bucket`,\n        { id, name: id, public: options.public },\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Updates a Storage bucket\n   *\n   * @param id A unique identifier for the bucket you are updating.\n   * @param options.public The visibility of the bucket. Public buckets don't require an authorization token to download objects, but still require a valid token for all other operations.\n   */\n  async updateBucket(\n    id: string,\n    options: { public: boolean }\n  ): Promise<\n    | {\n        data: { message: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await put(\n        this.fetch,\n        `${this.url}/bucket/${id}`,\n        { id, name: id, public: options.public },\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Removes all objects inside a single bucket.\n   *\n   * @param id The unique identifier of the bucket you would like to empty.\n   */\n  async emptyBucket(\n    id: string\n  ): Promise<\n    | {\n        data: { message: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await post(\n        this.fetch,\n        `${this.url}/bucket/${id}/empty`,\n        {},\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Deletes an existing bucket. A bucket can't be deleted with existing objects inside it.\n   * You must first `empty()` the bucket.\n   *\n   * @param id The unique identifier of the bucket you would like to delete.\n   */\n  async deleteBucket(\n    id: string\n  ): Promise<\n    | {\n        data: { message: string }\n        error: null\n      }\n    | {\n        data: null\n        error: StorageError\n      }\n  > {\n    try {\n      const data = await remove(\n        this.fetch,\n        `${this.url}/bucket/${id}`,\n        {},\n        { headers: this.headers }\n      )\n      return { data, error: null }\n    } catch (error) {\n      if (isStorageError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n}\n","import StorageFileApi from './packages/StorageFileApi'\nimport StorageBucketApi from './packages/StorageBucketApi'\nimport { Fetch } from './lib/fetch'\n\nexport class StorageClient extends StorageBucketApi {\n  constructor(url: string, headers: { [key: string]: string } = {}, fetch?: Fetch) {\n    super(url, headers, fetch)\n  }\n\n  /**\n   * Perform file operation in a bucket.\n   *\n   * @param id The bucket id to operate on.\n   */\n  from(id: string): StorageFileApi {\n    return new StorageFileApi(this.url, this.headers, id, this.fetch)\n  }\n}\n","// constants.ts\nimport { version } from './version'\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `supabase-js/${version}` }\n","export const version = '2.8.0'\n","import crossFetch, { Headers as CrossFetchHeaders } from 'cross-fetch'\n\ntype Fetch = typeof fetch\n\nexport const resolveFetch = (customFetch?: Fetch): Fetch => {\n  let _fetch: Fetch\n  if (customFetch) {\n    _fetch = customFetch\n  } else if (typeof fetch === 'undefined') {\n    _fetch = crossFetch as unknown as Fetch\n  } else {\n    _fetch = fetch\n  }\n  return (...args) => _fetch(...args)\n}\n\nexport const resolveHeadersConstructor = () => {\n  if (typeof Headers === 'undefined') {\n    return CrossFetchHeaders\n  }\n\n  return Headers\n}\n\nexport const fetchWithAuth = (\n  supabaseKey: string,\n  getAccessToken: () => Promise<string | null>,\n  customFetch?: Fetch\n): Fetch => {\n  const fetch = resolveFetch(customFetch)\n  const HeadersConstructor = resolveHeadersConstructor()\n\n  return async (input, init) => {\n    const accessToken = (await getAccessToken()) ?? supabaseKey\n    let headers = new HeadersConstructor(init?.headers)\n\n    if (!headers.has('apikey')) {\n      headers.set('apikey', supabaseKey)\n    }\n\n    if (!headers.has('Authorization')) {\n      headers.set('Authorization', `Bearer ${accessToken}`)\n    }\n\n    return fetch(input, { ...init, headers })\n  }\n}\n","import { SupportedStorage } from './types'\n\nexport function expiresAt(expiresIn: number) {\n  const timeNow = Math.round(Date.now() / 1000)\n  return timeNow + expiresIn\n}\n\nexport function uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    const r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8\n    return v.toString(16)\n  })\n}\n\nexport const isBrowser = () => typeof document !== 'undefined'\n\nconst localStorageWriteTests = {\n  tested: false,\n  writable: false,\n}\n\n/**\n * Checks whether localStorage is supported on this browser.\n */\nexport const supportsLocalStorage = () => {\n  if (!isBrowser()) {\n    return false\n  }\n\n  try {\n    if (typeof globalThis.localStorage !== 'object') {\n      return false\n    }\n  } catch (e) {\n    // DOM exception when accessing `localStorage`\n    return false\n  }\n\n  if (localStorageWriteTests.tested) {\n    return localStorageWriteTests.writable\n  }\n\n  const randomKey = `lswt-${Math.random()}${Math.random()}`\n\n  try {\n    globalThis.localStorage.setItem(randomKey, randomKey)\n    globalThis.localStorage.removeItem(randomKey)\n\n    localStorageWriteTests.tested = true\n    localStorageWriteTests.writable = true\n  } catch (e) {\n    // localStorage can't be written to\n    // https://www.chromium.org/for-testers/bug-reporting-guidelines/uncaught-securityerror-failed-to-read-the-localstorage-property-from-window-access-is-denied-for-this-document\n\n    localStorageWriteTests.tested = true\n    localStorageWriteTests.writable = false\n  }\n\n  return localStorageWriteTests.writable\n}\n\nexport function getParameterByName(name: string, url?: string) {\n  if (!url) url = window?.location?.href || ''\n  // eslint-disable-next-line no-useless-escape\n  name = name.replace(/[\\[\\]]/g, '\\\\$&')\n  const regex = new RegExp('[?&#]' + name + '(=([^&#]*)|&|#|$)'),\n    results = regex.exec(url)\n  if (!results) return null\n  if (!results[2]) return ''\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '))\n}\n\ntype Fetch = typeof fetch\n\nexport const resolveFetch = (customFetch?: Fetch): Fetch => {\n  let _fetch: Fetch\n  if (customFetch) {\n    _fetch = customFetch\n  } else if (typeof fetch === 'undefined') {\n    _fetch = async (...args) => await (await import('cross-fetch')).fetch(...args)\n  } else {\n    _fetch = fetch\n  }\n  return (...args) => _fetch(...args)\n}\n\nexport const looksLikeFetchResponse = (maybeResponse: unknown): maybeResponse is Response => {\n  return (\n    typeof maybeResponse === 'object' &&\n    maybeResponse !== null &&\n    'status' in maybeResponse &&\n    'ok' in maybeResponse &&\n    'json' in maybeResponse &&\n    typeof (maybeResponse as any).json === 'function'\n  )\n}\n\n// Storage helpers\nexport const setItemAsync = async (\n  storage: SupportedStorage,\n  key: string,\n  data: any\n): Promise<void> => {\n  await storage.setItem(key, JSON.stringify(data))\n}\n\nexport const getItemAsync = async (storage: SupportedStorage, key: string): Promise<unknown> => {\n  const value = await storage.getItem(key)\n\n  if (!value) {\n    return null\n  }\n\n  try {\n    return JSON.parse(value)\n  } catch {\n    return value\n  }\n}\n\nexport const removeItemAsync = async (storage: SupportedStorage, key: string): Promise<void> => {\n  await storage.removeItem(key)\n}\n\nexport function decodeBase64URL(value: string): string {\n  const key = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='\n  let base64 = ''\n  let chr1, chr2, chr3\n  let enc1, enc2, enc3, enc4\n  let i = 0\n  value = value.replace('-', '+').replace('_', '/')\n\n  while (i < value.length) {\n    enc1 = key.indexOf(value.charAt(i++))\n    enc2 = key.indexOf(value.charAt(i++))\n    enc3 = key.indexOf(value.charAt(i++))\n    enc4 = key.indexOf(value.charAt(i++))\n    chr1 = (enc1 << 2) | (enc2 >> 4)\n    chr2 = ((enc2 & 15) << 4) | (enc3 >> 2)\n    chr3 = ((enc3 & 3) << 6) | enc4\n    base64 = base64 + String.fromCharCode(chr1)\n\n    if (enc3 != 64 && chr2 != 0) {\n      base64 = base64 + String.fromCharCode(chr2)\n    }\n    if (enc4 != 64 && chr3 != 0) {\n      base64 = base64 + String.fromCharCode(chr3)\n    }\n  }\n  return base64\n}\n\n/**\n * A deferred represents some asynchronous work that is not yet finished, which\n * may or may not culminate in a value.\n * Taken from: https://github.com/mike-north/types/blob/master/src/async.ts\n */\nexport class Deferred<T = any> {\n  public static promiseConstructor: PromiseConstructor = Promise\n\n  public readonly promise!: PromiseLike<T>\n\n  public readonly resolve!: (value?: T | PromiseLike<T>) => void\n\n  public readonly reject!: (reason?: any) => any\n\n  public constructor() {\n    // eslint-disable-next-line @typescript-eslint/no-extra-semi\n    ;(this as any).promise = new Deferred.promiseConstructor((res, rej) => {\n      // eslint-disable-next-line @typescript-eslint/no-extra-semi\n      ;(this as any).resolve = res\n      // eslint-disable-next-line @typescript-eslint/no-extra-semi\n      ;(this as any).reject = rej\n    })\n  }\n}\n\n// Taken from: https://stackoverflow.com/questions/38552003/how-to-decode-jwt-token-in-javascript-without-using-a-library\nexport function decodeJWTPayload(token: string) {\n  // Regex checks for base64url format\n  const base64UrlRegex = /^([a-z0-9_-]{4})*($|[a-z0-9_-]{3}=?$|[a-z0-9_-]{2}(==)?$)$/i\n\n  const parts = token.split('.')\n\n  if (parts.length !== 3) {\n    throw new Error('JWT is not valid: not a JWT structure')\n  }\n\n  if (!base64UrlRegex.test(parts[1])) {\n    throw new Error('JWT is not valid: payload is not in base64url format')\n  }\n\n  const base64Url = parts[1]\n  return JSON.parse(decodeBase64URL(base64Url))\n}\n\n/**\n * Creates a promise that resolves to null after some time.\n */\nexport function sleep(time: number): Promise<null> {\n  return new Promise((accept) => {\n    setTimeout(() => accept(null), time)\n  })\n}\n\n/**\n * Converts the provided async function into a retryable function. Each result\n * or thrown error is sent to the isRetryable function which should return true\n * if the function should run again.\n */\nexport function retryable<T>(\n  fn: (attempt: number) => Promise<T>,\n  isRetryable: (attempt: number, error: any | null, result?: T) => boolean\n): Promise<T> {\n  const promise = new Promise<T>((accept, reject) => {\n    // eslint-disable-next-line @typescript-eslint/no-extra-semi\n    ;(async () => {\n      for (let attempt = 0; attempt < Infinity; attempt++) {\n        try {\n          const result = await fn(attempt)\n\n          if (!isRetryable(attempt, null, result)) {\n            accept(result)\n            return\n          }\n        } catch (e: any) {\n          if (!isRetryable(attempt, e)) {\n            reject(e)\n            return\n          }\n        }\n      }\n    })()\n  })\n\n  return promise\n}\n","export class AuthError extends Error {\n  status: number | undefined\n  protected __isAuthError = true\n\n  constructor(message: string, status?: number) {\n    super(message)\n    this.name = 'AuthError'\n    this.status = status\n  }\n}\n\nexport function isAuthError(error: unknown): error is AuthError {\n  return typeof error === 'object' && error !== null && '__isAuthError' in error\n}\n\nexport class AuthApiError extends AuthError {\n  status: number\n\n  constructor(message: string, status: number) {\n    super(message, status)\n    this.name = 'AuthApiError'\n    this.status = status\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      status: this.status,\n    }\n  }\n}\n\nexport function isAuthApiError(error: unknown): error is AuthApiError {\n  return isAuthError(error) && error.name === 'AuthApiError'\n}\n\nexport class AuthUnknownError extends AuthError {\n  originalError: unknown\n\n  constructor(message: string, originalError: unknown) {\n    super(message)\n    this.name = 'AuthUnknownError'\n    this.originalError = originalError\n  }\n}\n\nexport class CustomAuthError extends AuthError {\n  name: string\n  status: number\n  constructor(message: string, name: string, status: number) {\n    super(message)\n    this.name = name\n    this.status = status\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      status: this.status,\n    }\n  }\n}\n\nexport class AuthSessionMissingError extends CustomAuthError {\n  constructor() {\n    super('Auth session missing!', 'AuthSessionMissingError', 400)\n  }\n}\n\nexport class AuthInvalidCredentialsError extends CustomAuthError {\n  constructor(message: string) {\n    super(message, 'AuthInvalidCredentialsError', 400)\n  }\n}\n\nexport class AuthImplicitGrantRedirectError extends CustomAuthError {\n  details: { error: string; code: string } | null = null\n  constructor(message: string, details: { error: string; code: string } | null = null) {\n    super(message, 'AuthImplicitGrantRedirectError', 500)\n    this.details = details\n  }\n\n  toJSON() {\n    return {\n      name: this.name,\n      message: this.message,\n      status: this.status,\n      details: this.details,\n    }\n  }\n}\n\nexport class AuthRetryableFetchError extends CustomAuthError {\n  constructor(message: string, status: number) {\n    super(message, 'AuthRetryableFetchError', status)\n  }\n}\n","import { expiresAt, looksLikeFetchResponse } from './helpers'\nimport {\n  AuthResponse,\n  SSOResponse,\n  GenerateLinkProperties,\n  GenerateLinkResponse,\n  User,\n  UserResponse,\n} from './types'\nimport { AuthApiError, AuthRetryableFetchError, AuthUnknownError } from './errors'\n\nexport type Fetch = typeof fetch\n\nexport interface FetchOptions {\n  headers?: {\n    [key: string]: string\n  }\n  noResolveJson?: boolean\n}\n\nexport interface FetchParameters {\n  signal?: AbortSignal\n}\n\nexport type RequestMethodType = 'GET' | 'POST' | 'PUT' | 'DELETE'\n\nconst _getErrorMessage = (err: any): string =>\n  err.msg || err.message || err.error_description || err.error || JSON.stringify(err)\n\nconst handleError = async (error: unknown, reject: (reason?: any) => void) => {\n  const NETWORK_ERROR_CODES = [502, 503, 504]\n  if (!looksLikeFetchResponse(error)) {\n    reject(new AuthRetryableFetchError(_getErrorMessage(error), 0))\n  } else if (NETWORK_ERROR_CODES.includes(error.status)) {\n    // status in 500...599 range - server had an error, request might be retryed.\n    reject(new AuthRetryableFetchError(_getErrorMessage(error), error.status))\n  } else {\n    // got a response from server that is not in the 500...599 range - should not retry\n    error\n      .json()\n      .then((err) => {\n        reject(new AuthApiError(_getErrorMessage(err), error.status || 500))\n      })\n      .catch((e) => {\n        // not a valid json response\n        reject(new AuthUnknownError(_getErrorMessage(e), e))\n      })\n  }\n}\n\nconst _getRequestParams = (\n  method: RequestMethodType,\n  options?: FetchOptions,\n  parameters?: FetchParameters,\n  body?: object\n) => {\n  const params: { [k: string]: any } = { method, headers: options?.headers || {} }\n\n  if (method === 'GET') {\n    return params\n  }\n\n  params.headers = { 'Content-Type': 'application/json;charset=UTF-8', ...options?.headers }\n  params.body = JSON.stringify(body)\n  return { ...params, ...parameters }\n}\n\ninterface GotrueRequestOptions extends FetchOptions {\n  jwt?: string\n  redirectTo?: string\n  body?: object\n  query?: { [key: string]: string }\n  /**\n   * Function that transforms api response from gotrue into a desirable / standardised format\n   */\n  xform?: (data: any) => any\n}\n\nexport async function _request(\n  fetcher: Fetch,\n  method: RequestMethodType,\n  url: string,\n  options?: GotrueRequestOptions\n) {\n  const headers = { ...options?.headers }\n  if (options?.jwt) {\n    headers['Authorization'] = `Bearer ${options.jwt}`\n  }\n  const qs = options?.query ?? {}\n  if (options?.redirectTo) {\n    qs['redirect_to'] = options.redirectTo\n  }\n  const queryString = Object.keys(qs).length ? '?' + new URLSearchParams(qs).toString() : ''\n  const data = await _handleRequest(\n    fetcher,\n    method,\n    url + queryString,\n    { headers, noResolveJson: options?.noResolveJson },\n    {},\n    options?.body\n  )\n  return options?.xform ? options?.xform(data) : { data: { ...data }, error: null }\n}\n\nasync function _handleRequest(\n  fetcher: Fetch,\n  method: RequestMethodType,\n  url: string,\n  options?: FetchOptions,\n  parameters?: FetchParameters,\n  body?: object\n): Promise<any> {\n  return new Promise((resolve, reject) => {\n    fetcher(url, _getRequestParams(method, options, parameters, body))\n      .then((result) => {\n        if (!result.ok) throw result\n        if (options?.noResolveJson) return result\n        return result.json()\n      })\n      .then((data) => resolve(data))\n      .catch((error) => handleError(error, reject))\n  })\n}\n\nexport function _sessionResponse(data: any): AuthResponse {\n  let session = null\n  if (hasSession(data)) {\n    session = { ...data }\n    session.expires_at = expiresAt(data.expires_in)\n  }\n  const user: User = data.user ?? (data as User)\n  return { data: { session, user }, error: null }\n}\n\nexport function _userResponse(data: any): UserResponse {\n  const user: User = data.user ?? (data as User)\n  return { data: { user }, error: null }\n}\n\nexport function _ssoResponse(data: any): SSOResponse {\n  return { data, error: null }\n}\n\nexport function _generateLinkResponse(data: any): GenerateLinkResponse {\n  const { action_link, email_otp, hashed_token, redirect_to, verification_type, ...rest } = data\n\n  const properties: GenerateLinkProperties = {\n    action_link,\n    email_otp,\n    hashed_token,\n    redirect_to,\n    verification_type,\n  }\n\n  const user: User = { ...rest }\n  return {\n    data: {\n      properties,\n      user,\n    },\n    error: null,\n  }\n}\n\nexport function _noResolveJsonResponse(data: any): Response {\n  return data\n}\n\n/**\n * hasSession checks if the response object contains a valid session\n * @param data A response object\n * @returns true if a session is in the response\n */\nfunction hasSession(data: any): boolean {\n  return data.access_token && data.refresh_token && data.expires_in\n}\n","import {\n  Fetch,\n  _generateLinkResponse,\n  _noResolveJsonResponse,\n  _request,\n  _userResponse,\n} from './lib/fetch'\nimport { resolveFetch } from './lib/helpers'\nimport {\n  AdminUserAttributes,\n  GenerateLinkParams,\n  GenerateLinkResponse,\n  Pagination,\n  User,\n  UserResponse,\n  GoTrueAdminMFAApi,\n  AuthMFAAdminDeleteFactorParams,\n  AuthMFAAdminDeleteFactorResponse,\n  AuthMFAAdminListFactorsParams,\n  AuthMFAAdminListFactorsResponse,\n  PageParams,\n} from './lib/types'\nimport { AuthError, isAuthError } from './lib/errors'\n\nexport default class GoTrueAdminApi {\n  /** Contains all MFA administration methods. */\n  mfa: GoTrueAdminMFAApi\n\n  protected url: string\n  protected headers: {\n    [key: string]: string\n  }\n  protected fetch: Fetch\n\n  constructor({\n    url = '',\n    headers = {},\n    fetch,\n  }: {\n    url: string\n    headers?: {\n      [key: string]: string\n    }\n    fetch?: Fetch\n  }) {\n    this.url = url\n    this.headers = headers\n    this.fetch = resolveFetch(fetch)\n    this.mfa = {\n      listFactors: this._listFactors.bind(this),\n      deleteFactor: this._deleteFactor.bind(this),\n    }\n  }\n\n  /**\n   * Removes a logged-in session.\n   * @param jwt A valid, logged-in JWT.\n   */\n  async signOut(jwt: string): Promise<{ data: null; error: AuthError | null }> {\n    try {\n      await _request(this.fetch, 'POST', `${this.url}/logout`, {\n        headers: this.headers,\n        jwt,\n        noResolveJson: true,\n      })\n      return { data: null, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Sends an invite link to an email address.\n   * @param email The email address of the user.\n   * @param options.redirectTo A URL or mobile deeplink to send the user to after they are confirmed.\n   * @param options.data Optional user metadata\n   */\n  async inviteUserByEmail(\n    email: string,\n    options: {\n      redirectTo?: string\n      data?: object\n    } = {}\n  ): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'POST', `${this.url}/invite`, {\n        body: { email, data: options.data },\n        headers: this.headers,\n        redirectTo: options.redirectTo,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Generates email links and OTPs to be sent via a custom email provider.\n   * @param email The user's email.\n   * @param options.password User password. For signup only.\n   * @param options.data Optional user metadata. For signup only.\n   * @param options.redirectTo The redirect url which should be appended to the generated link\n   */\n  async generateLink(params: GenerateLinkParams): Promise<GenerateLinkResponse> {\n    try {\n      const { options, ...rest } = params\n      const body: any = { ...rest, ...options }\n      if ('newEmail' in rest) {\n        // replace newEmail with new_email in request body\n        body.new_email = rest?.newEmail\n        delete body['newEmail']\n      }\n      return await _request(this.fetch, 'POST', `${this.url}/admin/generate_link`, {\n        body: body,\n        headers: this.headers,\n        xform: _generateLinkResponse,\n        redirectTo: options?.redirectTo,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return {\n          data: {\n            properties: null,\n            user: null,\n          },\n          error,\n        }\n      }\n      throw error\n    }\n  }\n\n  // User Admin API\n  /**\n   * Creates a new user.\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async createUser(attributes: AdminUserAttributes): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'POST', `${this.url}/admin/users`, {\n        body: attributes,\n        headers: this.headers,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Get a list of users.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   * @param params An object which supports `page` and `perPage` as numbers, to alter the paginated results.\n   */\n  async listUsers(\n    params?: PageParams\n  ): Promise<\n    | { data: { users: User[]; aud: string } & Pagination; error: null }\n    | { data: { users: [] }; error: AuthError }\n  > {\n    try {\n      const pagination: Pagination = { nextPage: null, lastPage: 0, total: 0 }\n      const response = await _request(this.fetch, 'GET', `${this.url}/admin/users`, {\n        headers: this.headers,\n        noResolveJson: true,\n        query: {\n          page: params?.page?.toString() ?? '',\n          per_page: params?.perPage?.toString() ?? '',\n        },\n        xform: _noResolveJsonResponse,\n      })\n      if (response.error) throw response.error\n\n      const users = await response.json()\n      const total = response.headers.get('x-total-count') ?? 0\n      const links = response.headers.get('link')?.split(',') ?? []\n      if (links.length > 0) {\n        links.forEach((link: string) => {\n          const page = parseInt(link.split(';')[0].split('=')[1].substring(0, 1))\n          const rel = JSON.parse(link.split(';')[1].split('=')[1])\n          pagination[`${rel}Page`] = page\n        })\n\n        pagination.total = parseInt(total)\n      }\n      return { data: { ...users, ...pagination }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { users: [] }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Get user by id.\n   *\n   * @param uid The user's unique identifier\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async getUserById(uid: string): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'GET', `${this.url}/admin/users/${uid}`, {\n        headers: this.headers,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Updates the user data.\n   *\n   * @param attributes The data you want to update.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async updateUserById(uid: string, attributes: AdminUserAttributes): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'PUT', `${this.url}/admin/users/${uid}`, {\n        body: attributes,\n        headers: this.headers,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Delete a user. Requires a `service_role` key.\n   *\n   * @param id The user id you want to remove.\n   * @param shouldSoftDelete If true, then the user will be soft-deleted from the auth schema.\n   * Defaults to false for backward compatibility.\n   *\n   * This function should only be called on a server. Never expose your `service_role` key in the browser.\n   */\n  async deleteUser(id: string, shouldSoftDelete = false): Promise<UserResponse> {\n    try {\n      return await _request(this.fetch, 'DELETE', `${this.url}/admin/users/${id}`, {\n        headers: this.headers,\n        body: {\n          should_soft_delete: shouldSoftDelete,\n        },\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  private async _listFactors(\n    params: AuthMFAAdminListFactorsParams\n  ): Promise<AuthMFAAdminListFactorsResponse> {\n    try {\n      const { data, error } = await _request(\n        this.fetch,\n        'GET',\n        `${this.url}/admin/users/${params.userId}/factors`,\n        {\n          headers: this.headers,\n          xform: (factors: any) => {\n            return { data: { factors }, error: null }\n          },\n        }\n      )\n      return { data, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  private async _deleteFactor(\n    params: AuthMFAAdminDeleteFactorParams\n  ): Promise<AuthMFAAdminDeleteFactorResponse> {\n    try {\n      const data = await _request(\n        this.fetch,\n        'DELETE',\n        `${this.url}/admin/users/${params.userId}/factors/${params.id}`,\n        {\n          headers: this.headers,\n        }\n      )\n\n      return { data, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n}\n","import { version } from './version'\nexport const GOTRUE_URL = 'http://localhost:9999'\nexport const STORAGE_KEY = 'supabase.auth.token'\nexport const AUDIENCE = ''\nexport const DEFAULT_HEADERS = { 'X-Client-Info': `gotrue-js/${version}` }\nexport const EXPIRY_MARGIN = 10 // in seconds\nexport const NETWORK_FAILURE = {\n  MAX_RETRIES: 10,\n  RETRY_INTERVAL: 2, // in deciseconds\n}\n","// Generated by genversion.\nexport const version = '2.12.1'\n","import { supportsLocalStorage } from './helpers'\nimport { SupportedStorage } from './types'\n\nconst localStorageAdapter: SupportedStorage = {\n  getItem: (key) => {\n    if (!supportsLocalStorage()) {\n      return null\n    }\n\n    return globalThis.localStorage.getItem(key)\n  },\n  setItem: (key, value) => {\n    if (!supportsLocalStorage()) {\n      return\n    }\n\n    globalThis.localStorage.setItem(key, value)\n  },\n  removeItem: (key) => {\n    if (!supportsLocalStorage()) {\n      return\n    }\n\n    globalThis.localStorage.removeItem(key)\n  },\n}\n\nexport default localStorageAdapter\n","/**\n * https://mathiasbynens.be/notes/globalthis\n */\nexport function polyfillGlobalThis() {\n  if (typeof globalThis === 'object') return\n  try {\n    Object.defineProperty(Object.prototype, '__magic__', {\n      get: function () {\n        return this\n      },\n      configurable: true,\n    })\n    // @ts-expect-error 'Allow access to magic'\n    __magic__.globalThis = __magic__\n    // @ts-expect-error 'Allow access to magic'\n    delete Object.prototype.__magic__\n  } catch (e) {\n    if (typeof self !== 'undefined') {\n      // @ts-expect-error 'Allow access to globals'\n      self.globalThis = self\n    }\n  }\n}\n","import GoTrueAdminApi from './GoTrueAdminApi'\nimport { DEFAULT_HEADERS, EXPIRY_MARGIN, GOTRUE_URL, STORAGE_KEY } from './lib/constants'\nimport {\n  AuthError,\n  AuthImplicitGrantRedirectError,\n  AuthInvalidCredentialsError,\n  AuthRetryableFetchError,\n  AuthSessionMissingError,\n  AuthUnknownError,\n  isAuthApiError,\n  isAuthError,\n} from './lib/errors'\nimport { Fetch, _request, _sessionResponse, _userResponse, _ssoResponse } from './lib/fetch'\nimport {\n  decodeJWTPayload,\n  Deferred,\n  getItemAsync,\n  getParameterByName,\n  isBrowser,\n  removeItemAsync,\n  resolveFetch,\n  setItemAsync,\n  uuid,\n  retryable,\n  sleep,\n} from './lib/helpers'\nimport localStorageAdapter from './lib/local-storage'\nimport { polyfillGlobalThis } from './lib/polyfills'\nimport type {\n  AuthChangeEvent,\n  AuthResponse,\n  CallRefreshTokenResult,\n  GoTrueClientOptions,\n  InitializeResult,\n  OAuthResponse,\n  SSOResponse,\n  Provider,\n  Session,\n  SignInWithIdTokenCredentials,\n  SignInWithOAuthCredentials,\n  SignInWithPasswordCredentials,\n  SignInWithPasswordlessCredentials,\n  SignUpWithPasswordCredentials,\n  SignInWithSSO,\n  Subscription,\n  SupportedStorage,\n  User,\n  UserAttributes,\n  UserResponse,\n  VerifyOtpParams,\n  GoTrueMFAApi,\n  MFAEnrollParams,\n  AuthMFAEnrollResponse,\n  MFAChallengeParams,\n  AuthMFAChallengeResponse,\n  MFAUnenrollParams,\n  AuthMFAUnenrollResponse,\n  MFAVerifyParams,\n  AuthMFAVerifyResponse,\n  AuthMFAListFactorsResponse,\n  AMREntry,\n  AuthMFAGetAuthenticatorAssuranceLevelResponse,\n  AuthenticatorAssuranceLevels,\n  Factor,\n  MFAChallengeAndVerifyParams,\n} from './lib/types'\n\npolyfillGlobalThis() // Make \"globalThis\" available\n\nconst DEFAULT_OPTIONS: Omit<Required<GoTrueClientOptions>, 'fetch' | 'storage'> = {\n  url: GOTRUE_URL,\n  storageKey: STORAGE_KEY,\n  autoRefreshToken: true,\n  persistSession: true,\n  detectSessionInUrl: true,\n  headers: DEFAULT_HEADERS,\n}\n\n/** Current session will be checked for refresh at this interval. */\nconst AUTO_REFRESH_TICK_DURATION = 10 * 1000\n\n/**\n * A token refresh will be attempted this many ticks before the current session expires. */\nconst AUTO_REFRESH_TICK_THRESHOLD = 3\n\nexport default class GoTrueClient {\n  /**\n   * Namespace for the GoTrue admin methods.\n   * These methods should only be used in a trusted server-side environment.\n   */\n  admin: GoTrueAdminApi\n  /**\n   * Namespace for the MFA methods.\n   */\n  mfa: GoTrueMFAApi\n  /**\n   * The storage key used to identify the values saved in localStorage\n   */\n  protected storageKey: string\n\n  /**\n   * The session object for the currently logged in user. If null, it means there isn't a logged-in user.\n   * Only used if persistSession is false.\n   */\n  protected inMemorySession: Session | null\n\n  protected autoRefreshToken: boolean\n  protected persistSession: boolean\n  protected storage: SupportedStorage\n  protected stateChangeEmitters: Map<string, Subscription> = new Map()\n  protected autoRefreshTicker: ReturnType<typeof setInterval> | null = null\n  protected visibilityChangedCallback: (() => Promise<any>) | null = null\n  protected refreshingDeferred: Deferred<CallRefreshTokenResult> | null = null\n  /**\n   * Keeps track of the async client initialization.\n   * When null or not yet resolved the auth state is `unknown`\n   * Once resolved the the auth state is known and it's save to call any further client methods.\n   * Keep extra care to never reject or throw uncaught errors\n   */\n  protected initializePromise: Promise<InitializeResult> | null = null\n  protected detectSessionInUrl = true\n  protected url: string\n  protected headers: {\n    [key: string]: string\n  }\n  protected fetch: Fetch\n\n  /**\n   * Used to broadcast state change events to other tabs listening.\n   */\n  protected broadcastChannel: BroadcastChannel | null = null\n\n  /**\n   * Create a new client for use in the browser.\n   */\n  constructor(options: GoTrueClientOptions) {\n    const settings = { ...DEFAULT_OPTIONS, ...options }\n    this.inMemorySession = null\n    this.storageKey = settings.storageKey\n    this.autoRefreshToken = settings.autoRefreshToken\n    this.persistSession = settings.persistSession\n    this.storage = settings.storage || localStorageAdapter\n    this.admin = new GoTrueAdminApi({\n      url: settings.url,\n      headers: settings.headers,\n      fetch: settings.fetch,\n    })\n\n    this.url = settings.url\n    this.headers = settings.headers\n    this.fetch = resolveFetch(settings.fetch)\n    this.detectSessionInUrl = settings.detectSessionInUrl\n\n    this.mfa = {\n      verify: this._verify.bind(this),\n      enroll: this._enroll.bind(this),\n      unenroll: this._unenroll.bind(this),\n      challenge: this._challenge.bind(this),\n      listFactors: this._listFactors.bind(this),\n      challengeAndVerify: this._challengeAndVerify.bind(this),\n      getAuthenticatorAssuranceLevel: this._getAuthenticatorAssuranceLevel.bind(this),\n    }\n\n    if (isBrowser() && globalThis.BroadcastChannel && this.persistSession && this.storageKey) {\n      this.broadcastChannel = new globalThis.BroadcastChannel(this.storageKey)\n      this.broadcastChannel.addEventListener('message', (event) => {\n        this._notifyAllSubscribers(event.data.event, event.data.session, false) // broadcast = false so we don't get an endless loop of messages\n      })\n    }\n\n    this.initialize()\n  }\n\n  /**\n   * Initializes the client session either from the url or from storage.\n   * This method is automatically called when instantiating the client, but should also be called\n   * manually when checking for an error from an auth redirect (oauth, magiclink, password recovery, etc).\n   */\n  initialize(): Promise<InitializeResult> {\n    if (!this.initializePromise) {\n      this.initializePromise = this._initialize()\n    }\n\n    return this.initializePromise\n  }\n\n  /**\n   * IMPORTANT:\n   * 1. Never throw in this method, as it is called from the constructor\n   * 2. Never return a session from this method as it would be cached over\n   *    the whole lifetime of the client\n   */\n  private async _initialize(): Promise<InitializeResult> {\n    if (this.initializePromise) {\n      return this.initializePromise\n    }\n\n    try {\n      if (this.detectSessionInUrl && this._isImplicitGrantFlow()) {\n        const { data, error } = await this._getSessionFromUrl()\n\n        if (error) {\n          // failed login attempt via url,\n          // remove old session as in verifyOtp, signUp and signInWith*\n          await this._removeSession()\n\n          return { error }\n        }\n\n        const { session, redirectType } = data\n\n        await this._saveSession(session)\n        this._notifyAllSubscribers('SIGNED_IN', session)\n        if (redirectType === 'recovery') {\n          this._notifyAllSubscribers('PASSWORD_RECOVERY', session)\n        }\n\n        return { error: null }\n      }\n\n      // no login attempt via callback url try to recover session from storage\n      await this._recoverAndRefresh()\n      return { error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { error }\n      }\n\n      return {\n        error: new AuthUnknownError('Unexpected error during initialization', error),\n      }\n    } finally {\n      await this._handleVisibilityChange()\n    }\n  }\n\n  /**\n   * Creates a new user.\n   *\n   * Be aware that if a user account exists in the system you may get back an\n   * error message that attempts to hide this information from the user.\n   *\n   * @returns A logged-in session if the server has \"autoconfirm\" ON\n   * @returns A user if the server has \"autoconfirm\" OFF\n   */\n  async signUp(credentials: SignUpWithPasswordCredentials): Promise<AuthResponse> {\n    try {\n      await this._removeSession()\n\n      let res: AuthResponse\n      if ('email' in credentials) {\n        const { email, password, options } = credentials\n        res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n          headers: this.headers,\n          redirectTo: options?.emailRedirectTo,\n          body: {\n            email,\n            password,\n            data: options?.data ?? {},\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          xform: _sessionResponse,\n        })\n      } else if ('phone' in credentials) {\n        const { phone, password, options } = credentials\n        res = await _request(this.fetch, 'POST', `${this.url}/signup`, {\n          headers: this.headers,\n          body: {\n            phone,\n            password,\n            data: options?.data ?? {},\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          xform: _sessionResponse,\n        })\n      } else {\n        throw new AuthInvalidCredentialsError(\n          'You must provide either an email or phone number and a password'\n        )\n      }\n\n      const { data, error } = res\n\n      if (error || !data) {\n        return { data: { user: null, session: null }, error: error }\n      }\n\n      const session: Session | null = data.session\n      const user: User | null = data.user\n\n      if (data.session) {\n        await this._saveSession(data.session)\n        this._notifyAllSubscribers('SIGNED_IN', session)\n      }\n\n      return { data: { user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Log in an existing user with an email and password or phone and password.\n   *\n   * Be aware that you may get back an error message that will not distingish\n   * between the cases where the account does not exist or that the\n   * email/phone and password combination is wrong or that the account can only\n   * be accessed via social login.\n   */\n  async signInWithPassword(credentials: SignInWithPasswordCredentials): Promise<AuthResponse> {\n    try {\n      await this._removeSession()\n\n      let res: AuthResponse\n      if ('email' in credentials) {\n        const { email, password, options } = credentials\n        res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n          headers: this.headers,\n          body: {\n            email,\n            password,\n            data: options?.data ?? {},\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          xform: _sessionResponse,\n        })\n      } else if ('phone' in credentials) {\n        const { phone, password, options } = credentials\n        res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=password`, {\n          headers: this.headers,\n          body: {\n            phone,\n            password,\n            data: options?.data ?? {},\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          xform: _sessionResponse,\n        })\n      } else {\n        throw new AuthInvalidCredentialsError(\n          'You must provide either an email or phone number and a password'\n        )\n      }\n      const { data, error } = res\n      if (error || !data) return { data: { user: null, session: null }, error }\n      if (data.session) {\n        await this._saveSession(data.session)\n        this._notifyAllSubscribers('SIGNED_IN', data.session)\n      }\n      return { data, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Log in an existing user via a third-party provider.\n   */\n  async signInWithOAuth(credentials: SignInWithOAuthCredentials): Promise<OAuthResponse> {\n    await this._removeSession()\n    return this._handleProviderSignIn(credentials.provider, {\n      redirectTo: credentials.options?.redirectTo,\n      scopes: credentials.options?.scopes,\n      queryParams: credentials.options?.queryParams,\n      skipBrowserRedirect: credentials.options?.skipBrowserRedirect,\n    })\n  }\n\n  /**\n   * Allows signing in with an ID token issued by certain supported providers.\n   * The ID token is verified for validity and a new session is established.\n   *\n   * @experimental\n   */\n  async signInWithIdToken(credentials: SignInWithIdTokenCredentials): Promise<AuthResponse> {\n    await this._removeSession()\n\n    try {\n      const { options, provider, token, nonce } = credentials\n\n      const res = await _request(this.fetch, 'POST', `${this.url}/token?grant_type=id_token`, {\n        headers: this.headers,\n        body: {\n          provider,\n          id_token: token,\n          nonce,\n          gotrue_meta_security: { captcha_token: options?.captchaToken },\n        },\n        xform: _sessionResponse,\n      })\n\n      const { data, error } = res\n      if (error || !data) return { data: { user: null, session: null }, error }\n      if (data.session) {\n        await this._saveSession(data.session)\n        this._notifyAllSubscribers('SIGNED_IN', data.session)\n      }\n      return { data, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Log in a user using magiclink or a one-time password (OTP).\n   *\n   * If the `{{ .ConfirmationURL }}` variable is specified in the email template, a magiclink will be sent.\n   * If the `{{ .Token }}` variable is specified in the email template, an OTP will be sent.\n   * If you're using phone sign-ins, only an OTP will be sent. You won't be able to send a magiclink for phone sign-ins.\n   *\n   * Be aware that you may get back an error message that will not distinguish\n   * between the cases where the account does not exist or, that the account\n   * can only be accessed via social login.\n   */\n  async signInWithOtp(credentials: SignInWithPasswordlessCredentials): Promise<AuthResponse> {\n    try {\n      await this._removeSession()\n\n      if ('email' in credentials) {\n        const { email, options } = credentials\n        const { error } = await _request(this.fetch, 'POST', `${this.url}/otp`, {\n          headers: this.headers,\n          body: {\n            email,\n            data: options?.data ?? {},\n            create_user: options?.shouldCreateUser ?? true,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n          redirectTo: options?.emailRedirectTo,\n        })\n        return { data: { user: null, session: null }, error }\n      }\n      if ('phone' in credentials) {\n        const { phone, options } = credentials\n        const { error } = await _request(this.fetch, 'POST', `${this.url}/otp`, {\n          headers: this.headers,\n          body: {\n            phone,\n            data: options?.data ?? {},\n            create_user: options?.shouldCreateUser ?? true,\n            gotrue_meta_security: { captcha_token: options?.captchaToken },\n          },\n        })\n        return { data: { user: null, session: null }, error }\n      }\n      throw new AuthInvalidCredentialsError('You must provide either an email or phone number.')\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Log in a user given a User supplied OTP received via mobile.\n   */\n  async verifyOtp(params: VerifyOtpParams): Promise<AuthResponse> {\n    try {\n      await this._removeSession()\n\n      const { data, error } = await _request(this.fetch, 'POST', `${this.url}/verify`, {\n        headers: this.headers,\n        body: {\n          ...params,\n          gotrue_meta_security: { captcha_token: params.options?.captchaToken },\n        },\n        redirectTo: params.options?.redirectTo,\n        xform: _sessionResponse,\n      })\n\n      if (error) {\n        throw error\n      }\n\n      if (!data) {\n        throw 'An error occurred on token verification.'\n      }\n\n      const session: Session | null = data.session\n      const user: User = data.user\n\n      if (session?.access_token) {\n        await this._saveSession(session as Session)\n        this._notifyAllSubscribers('SIGNED_IN', session)\n      }\n\n      return { data: { user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Attempts a single-sign on using an enterprise Identity Provider. A\n   * successful SSO attempt will redirect the current page to the identity\n   * provider authorization page. The redirect URL is implementation and SSO\n   * protocol specific.\n   *\n   * You can use it by providing a SSO domain. Typically you can extract this\n   * domain by asking users for their email address. If this domain is\n   * registered on the Auth instance the redirect will use that organization's\n   * currently active SSO Identity Provider for the login.\n   *\n   * If you have built an organization-specific login page, you can use the\n   * organization's SSO Identity Provider UUID directly instead.\n   *\n   * This API is experimental and availability is conditional on correct\n   * settings on the Auth service.\n   *\n   * @experimental\n   */\n  async signInWithSSO(params: SignInWithSSO): Promise<SSOResponse> {\n    try {\n      await this._removeSession()\n\n      return await _request(this.fetch, 'POST', `${this.url}/sso`, {\n        body: {\n          ...('providerId' in params ? { provider_id: params.providerId } : null),\n          ...('domain' in params ? { domain: params.domain } : null),\n          redirect_to: params.options?.redirectTo ?? undefined,\n          ...(params?.options?.captchaToken\n            ? { gotrue_meta_security: { captcha_token: params.options.captchaToken } }\n            : null),\n          skip_http_redirect: true, // fetch does not handle redirects\n        },\n        headers: this.headers,\n        xform: _ssoResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * Returns the session, refreshing it if necessary.\n   * The session returned can be null if the session is not detected which can happen in the event a user is not signed-in or has logged out.\n   */\n  async getSession(): Promise<\n    | {\n        data: {\n          session: Session\n        }\n        error: null\n      }\n    | {\n        data: {\n          session: null\n        }\n        error: AuthError\n      }\n    | {\n        data: {\n          session: null\n        }\n        error: null\n      }\n  > {\n    // make sure we've read the session from the url if there is one\n    // save to just await, as long we make sure _initialize() never throws\n    await this.initializePromise\n\n    let currentSession: Session | null = null\n\n    if (this.persistSession) {\n      const maybeSession = await getItemAsync(this.storage, this.storageKey)\n\n      if (maybeSession !== null) {\n        if (this._isValidSession(maybeSession)) {\n          currentSession = maybeSession\n        } else {\n          await this._removeSession()\n        }\n      }\n    } else {\n      currentSession = this.inMemorySession\n    }\n\n    if (!currentSession) {\n      return { data: { session: null }, error: null }\n    }\n\n    const hasExpired = currentSession.expires_at\n      ? currentSession.expires_at <= Date.now() / 1000\n      : false\n    if (!hasExpired) {\n      return { data: { session: currentSession }, error: null }\n    }\n\n    const { session, error } = await this._callRefreshToken(currentSession.refresh_token)\n    if (error) {\n      return { data: { session: null }, error }\n    }\n\n    return { data: { session }, error: null }\n  }\n\n  /**\n   * Gets the current user details if there is an existing session.\n   * @param jwt Takes in an optional access token jwt. If no jwt is provided, getUser() will attempt to get the jwt from the current session.\n   */\n  async getUser(jwt?: string): Promise<UserResponse> {\n    try {\n      if (!jwt) {\n        const { data, error } = await this.getSession()\n        if (error) {\n          throw error\n        }\n\n        // Default to Authorization header if there is no existing session\n        jwt = data.session?.access_token ?? undefined\n      }\n\n      return await _request(this.fetch, 'GET', `${this.url}/user`, {\n        headers: this.headers,\n        jwt: jwt,\n        xform: _userResponse,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Updates user data for a logged in user.\n   */\n  async updateUser(\n    attributes: UserAttributes,\n    options: {\n      emailRedirectTo?: string | undefined\n    } = {}\n  ): Promise<UserResponse> {\n    try {\n      const { data: sessionData, error: sessionError } = await this.getSession()\n      if (sessionError) {\n        throw sessionError\n      }\n      if (!sessionData.session) {\n        throw new AuthSessionMissingError()\n      }\n      const session: Session = sessionData.session\n      const { data, error: userError } = await _request(this.fetch, 'PUT', `${this.url}/user`, {\n        headers: this.headers,\n        redirectTo: options?.emailRedirectTo,\n        body: attributes,\n        jwt: session.access_token,\n        xform: _userResponse,\n      })\n      if (userError) throw userError\n      session.user = data.user as User\n      await this._saveSession(session)\n      this._notifyAllSubscribers('USER_UPDATED', session)\n\n      return { data: { user: session.user }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Decodes a JWT (without performing any validation).\n   */\n  private _decodeJWT(jwt: string): {\n    exp?: number\n    aal?: AuthenticatorAssuranceLevels | null\n    amr?: AMREntry[] | null\n  } {\n    return decodeJWTPayload(jwt)\n  }\n\n  /**\n   * Sets the session data from the current session. If the current session is expired, setSession will take care of refreshing it to obtain a new session.\n   * If the refresh token or access token in the current session is invalid, an error will be thrown.\n   * @param currentSession The current session that minimally contains an access token and refresh token.\n   */\n  async setSession(currentSession: {\n    access_token: string\n    refresh_token: string\n  }): Promise<AuthResponse> {\n    try {\n      if (!currentSession.access_token || !currentSession.refresh_token) {\n        throw new AuthSessionMissingError()\n      }\n\n      const timeNow = Date.now() / 1000\n      let expiresAt = timeNow\n      let hasExpired = true\n      let session: Session | null = null\n      const payload = decodeJWTPayload(currentSession.access_token)\n      if (payload.exp) {\n        expiresAt = payload.exp\n        hasExpired = expiresAt <= timeNow\n      }\n\n      if (hasExpired) {\n        const { session: refreshedSession, error } = await this._callRefreshToken(\n          currentSession.refresh_token\n        )\n        if (error) {\n          return { data: { user: null, session: null }, error: error }\n        }\n\n        if (!refreshedSession) {\n          return { data: { user: null, session: null }, error: null }\n        }\n        session = refreshedSession\n      } else {\n        const { data, error } = await this.getUser(currentSession.access_token)\n        if (error) {\n          throw error\n        }\n        session = {\n          access_token: currentSession.access_token,\n          refresh_token: currentSession.refresh_token,\n          user: data.user,\n          token_type: 'bearer',\n          expires_in: expiresAt - timeNow,\n          expires_at: expiresAt,\n        }\n        await this._saveSession(session)\n        this._notifyAllSubscribers('SIGNED_IN', session)\n      }\n\n      return { data: { user: session.user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { session: null, user: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Returns a new session, regardless of expiry status.\n   * Takes in an optional current session. If not passed in, then refreshSession() will attempt to retrieve it from getSession().\n   * If the current session's refresh token is invalid, an error will be thrown.\n   * @param currentSession The current session. If passed in, it must contain a refresh token.\n   */\n  async refreshSession(currentSession?: { refresh_token: string }): Promise<AuthResponse> {\n    try {\n      if (!currentSession) {\n        const { data, error } = await this.getSession()\n        if (error) {\n          throw error\n        }\n\n        currentSession = data.session ?? undefined\n      }\n\n      if (!currentSession?.refresh_token) {\n        throw new AuthSessionMissingError()\n      }\n\n      const { session, error } = await this._callRefreshToken(currentSession.refresh_token)\n      if (error) {\n        return { data: { user: null, session: null }, error: error }\n      }\n\n      if (!session) {\n        return { data: { user: null, session: null }, error: null }\n      }\n\n      return { data: { user: session.user, session }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { user: null, session: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Gets the session data from a URL string\n   */\n  private async _getSessionFromUrl(): Promise<\n    | {\n        data: { session: Session; redirectType: string | null }\n        error: null\n      }\n    | { data: { session: null; redirectType: null }; error: AuthError }\n  > {\n    try {\n      if (!isBrowser()) throw new AuthImplicitGrantRedirectError('No browser detected.')\n      if (!this._isImplicitGrantFlow()) {\n        throw new AuthImplicitGrantRedirectError('Not a valid implicit grant flow url.')\n      }\n\n      const error_description = getParameterByName('error_description')\n      if (error_description) {\n        const error_code = getParameterByName('error_code')\n        if (!error_code) throw new AuthImplicitGrantRedirectError('No error_code detected.')\n        const error = getParameterByName('error')\n        if (!error) throw new AuthImplicitGrantRedirectError('No error detected.')\n\n        throw new AuthImplicitGrantRedirectError(error_description, { error, code: error_code })\n      }\n\n      const provider_token = getParameterByName('provider_token')\n      const provider_refresh_token = getParameterByName('provider_refresh_token')\n      const access_token = getParameterByName('access_token')\n      if (!access_token) throw new AuthImplicitGrantRedirectError('No access_token detected.')\n      const expires_in = getParameterByName('expires_in')\n      if (!expires_in) throw new AuthImplicitGrantRedirectError('No expires_in detected.')\n      const refresh_token = getParameterByName('refresh_token')\n      if (!refresh_token) throw new AuthImplicitGrantRedirectError('No refresh_token detected.')\n      const token_type = getParameterByName('token_type')\n      if (!token_type) throw new AuthImplicitGrantRedirectError('No token_type detected.')\n\n      const timeNow = Math.round(Date.now() / 1000)\n      const expires_at = timeNow + parseInt(expires_in)\n\n      const { data, error } = await this.getUser(access_token)\n      if (error) throw error\n      const user: User = data.user\n      const session: Session = {\n        provider_token,\n        provider_refresh_token,\n        access_token,\n        expires_in: parseInt(expires_in),\n        expires_at,\n        refresh_token,\n        token_type,\n        user,\n      }\n      const redirectType = getParameterByName('type')\n\n      // Remove tokens from URL\n      window.location.hash = ''\n\n      return { data: { session, redirectType }, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { session: null, redirectType: null }, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Checks if the current URL contains parameters given by an implicit oauth grant flow (https://www.rfc-editor.org/rfc/rfc6749.html#section-4.2)\n   */\n  private _isImplicitGrantFlow(): boolean {\n    return (\n      isBrowser() &&\n      (Boolean(getParameterByName('access_token')) ||\n        Boolean(getParameterByName('error_description')))\n    )\n  }\n\n  /**\n   * Inside a browser context, `signOut()` will remove the logged in user from the browser session\n   * and log them out - removing all items from localstorage and then trigger a `\"SIGNED_OUT\"` event.\n   *\n   * For server-side management, you can revoke all refresh tokens for a user by passing a user's JWT through to `auth.api.signOut(JWT: string)`.\n   * There is no way to revoke a user's access token jwt until it expires. It is recommended to set a shorter expiry on the jwt for this reason.\n   */\n  async signOut(): Promise<{ error: AuthError | null }> {\n    const { data, error: sessionError } = await this.getSession()\n    if (sessionError) {\n      return { error: sessionError }\n    }\n    const accessToken = data.session?.access_token\n    if (accessToken) {\n      const { error } = await this.admin.signOut(accessToken)\n      if (error) {\n        // ignore 404s since user might not exist anymore\n        // ignore 401s since an invalid or expired JWT should sign out the current session\n        if (!(isAuthApiError(error) && (error.status === 404 || error.status === 401))) {\n          return { error }\n        }\n      }\n    }\n    await this._removeSession()\n    this._notifyAllSubscribers('SIGNED_OUT', null)\n    return { error: null }\n  }\n\n  /**\n   * Receive a notification every time an auth event happens.\n   * @param callback A callback function to be invoked when an auth event happens.\n   */\n  onAuthStateChange(callback: (event: AuthChangeEvent, session: Session | null) => void): {\n    data: { subscription: Subscription }\n  } {\n    const id: string = uuid()\n    const subscription: Subscription = {\n      id,\n      callback,\n      unsubscribe: () => {\n        this.stateChangeEmitters.delete(id)\n      },\n    }\n\n    this.stateChangeEmitters.set(id, subscription)\n\n    return { data: { subscription } }\n  }\n\n  /**\n   * Sends a password reset request to an email address.\n   * @param email The email address of the user.\n   * @param options.redirectTo The URL to send the user to after they click the password reset link.\n   * @param options.captchaToken Verification token received when the user completes the captcha on the site.\n   */\n  async resetPasswordForEmail(\n    email: string,\n    options: {\n      redirectTo?: string\n      captchaToken?: string\n    } = {}\n  ): Promise<\n    | {\n        data: {}\n        error: null\n      }\n    | { data: null; error: AuthError }\n  > {\n    try {\n      return await _request(this.fetch, 'POST', `${this.url}/recover`, {\n        body: { email, gotrue_meta_security: { captcha_token: options.captchaToken } },\n        headers: this.headers,\n        redirectTo: options.redirectTo,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n\n      throw error\n    }\n  }\n\n  /**\n   * Generates a new JWT.\n   * @param refreshToken A valid refresh token that was returned on login.\n   */\n  private async _refreshAccessToken(refreshToken: string): Promise<AuthResponse> {\n    try {\n      const startedAt = Date.now()\n\n      // will attempt to refresh the token with exponential backoff\n      return await retryable(\n        async (attempt) => {\n          await sleep(attempt * 200) // 0, 200, 400, 800, ...\n\n          return await _request(this.fetch, 'POST', `${this.url}/token?grant_type=refresh_token`, {\n            body: { refresh_token: refreshToken },\n            headers: this.headers,\n            xform: _sessionResponse,\n          })\n        },\n        (attempt, _, result) =>\n          result &&\n          result.error &&\n          result.error instanceof AuthRetryableFetchError &&\n          // retryable only if the request can be sent before the backoff overflows the tick duration\n          Date.now() + (attempt + 1) * 200 - startedAt < AUTO_REFRESH_TICK_DURATION\n      )\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: { session: null, user: null }, error }\n      }\n      throw error\n    }\n  }\n\n  private _isValidSession(maybeSession: unknown): maybeSession is Session {\n    const isValidSession =\n      typeof maybeSession === 'object' &&\n      maybeSession !== null &&\n      'access_token' in maybeSession &&\n      'refresh_token' in maybeSession &&\n      'expires_at' in maybeSession\n\n    return isValidSession\n  }\n\n  private _handleProviderSignIn(\n    provider: Provider,\n    options: {\n      redirectTo?: string\n      scopes?: string\n      queryParams?: { [key: string]: string }\n      skipBrowserRedirect?: boolean\n    } = {}\n  ) {\n    const url: string = this._getUrlForProvider(provider, {\n      redirectTo: options.redirectTo,\n      scopes: options.scopes,\n      queryParams: options.queryParams,\n    })\n    // try to open on the browser\n    if (isBrowser() && !options.skipBrowserRedirect) {\n      window.location.assign(url)\n    }\n    return { data: { provider, url }, error: null }\n  }\n\n  /**\n   * Recovers the session from LocalStorage and refreshes\n   * Note: this method is async to accommodate for AsyncStorage e.g. in React native.\n   */\n  private async _recoverAndRefresh() {\n    try {\n      const currentSession = await getItemAsync(this.storage, this.storageKey)\n      if (!this._isValidSession(currentSession)) {\n        if (currentSession !== null) {\n          await this._removeSession()\n        }\n\n        return\n      }\n\n      const timeNow = Math.round(Date.now() / 1000)\n\n      if ((currentSession.expires_at ?? Infinity) < timeNow + EXPIRY_MARGIN) {\n        if (this.autoRefreshToken && currentSession.refresh_token) {\n          const { error } = await this._callRefreshToken(currentSession.refresh_token)\n\n          if (error) {\n            console.log(error.message)\n            await this._removeSession()\n          }\n        } else {\n          await this._removeSession()\n        }\n      } else {\n        if (this.persistSession) {\n          await this._saveSession(currentSession)\n        }\n        this._notifyAllSubscribers('SIGNED_IN', currentSession)\n      }\n    } catch (err) {\n      console.error(err)\n      return\n    }\n  }\n\n  private async _callRefreshToken(refreshToken: string): Promise<CallRefreshTokenResult> {\n    // refreshing is already in progress\n    if (this.refreshingDeferred) {\n      return this.refreshingDeferred.promise\n    }\n\n    try {\n      this.refreshingDeferred = new Deferred<CallRefreshTokenResult>()\n\n      if (!refreshToken) {\n        throw new AuthSessionMissingError()\n      }\n      const { data, error } = await this._refreshAccessToken(refreshToken)\n      if (error) throw error\n      if (!data.session) throw new AuthSessionMissingError()\n\n      await this._saveSession(data.session)\n      this._notifyAllSubscribers('TOKEN_REFRESHED', data.session)\n\n      const result = { session: data.session, error: null }\n\n      this.refreshingDeferred.resolve(result)\n\n      return result\n    } catch (error) {\n      if (isAuthError(error)) {\n        const result = { session: null, error }\n\n        this.refreshingDeferred?.resolve(result)\n\n        return result\n      }\n\n      this.refreshingDeferred?.reject(error)\n      throw error\n    } finally {\n      this.refreshingDeferred = null\n    }\n  }\n\n  private _notifyAllSubscribers(event: AuthChangeEvent, session: Session | null, broadcast = true) {\n    if (this.broadcastChannel && broadcast) {\n      this.broadcastChannel.postMessage({ event, session })\n    }\n\n    this.stateChangeEmitters.forEach((x) => x.callback(event, session))\n  }\n\n  /**\n   * set currentSession and currentUser\n   * process to _startAutoRefreshToken if possible\n   */\n  private async _saveSession(session: Session) {\n    if (!this.persistSession) {\n      this.inMemorySession = session\n    }\n\n    if (this.persistSession && session.expires_at) {\n      await this._persistSession(session)\n    }\n  }\n\n  private _persistSession(currentSession: Session) {\n    return setItemAsync(this.storage, this.storageKey, currentSession)\n  }\n\n  private async _removeSession() {\n    if (this.persistSession) {\n      await removeItemAsync(this.storage, this.storageKey)\n    } else {\n      this.inMemorySession = null\n    }\n  }\n\n  /**\n   * Removes any registered visibilitychange callback.\n   *\n   * {@see #startAutoRefresh}\n   * {@see #stopAutoRefresh}\n   */\n  private _removeVisibilityChangedCallback() {\n    const callback = this.visibilityChangedCallback\n    this.visibilityChangedCallback = null\n\n    try {\n      if (callback && isBrowser() && window?.removeEventListener) {\n        window.removeEventListener('visibilitychange', callback)\n      }\n    } catch (e) {\n      console.error('removing visibilitychange callback failed', e)\n    }\n  }\n\n  /**\n   * This is the private implementation of {@link #startAutoRefresh}. Use this\n   * within the library.\n   */\n  private async _startAutoRefresh() {\n    await this._stopAutoRefresh()\n\n    const ticker = setInterval(() => this._autoRefreshTokenTick(), AUTO_REFRESH_TICK_DURATION)\n    this.autoRefreshTicker = ticker\n\n    if (ticker && typeof ticker === 'object' && typeof ticker.unref === 'function') {\n      // ticker is a NodeJS Timeout object that has an `unref` method\n      // https://nodejs.org/api/timers.html#timeoutunref\n      // When auto refresh is used in NodeJS (like for testing) the\n      // `setInterval` is preventing the process from being marked as\n      // finished and tests run endlessly. This can be prevented by calling\n      // `unref()` on the returned object.\n      ticker.unref()\n    }\n\n    // run the tick immediately\n    await this._autoRefreshTokenTick()\n  }\n\n  /**\n   * This is the private implementation of {@link #stopAutoRefresh}. Use this\n   * within the library.\n   */\n  private async _stopAutoRefresh() {\n    const ticker = this.autoRefreshTicker\n    this.autoRefreshTicker = null\n\n    if (ticker) {\n      clearInterval(ticker)\n    }\n  }\n\n  /**\n   * Starts an auto-refresh process in the background. The session is checked\n   * every few seconds. Close to the time of expiration a process is started to\n   * refresh the session. If refreshing fails it will be retried for as long as\n   * necessary.\n   *\n   * If you set the {@link GoTrueClientOptions#autoRefreshToken} you don't need\n   * to call this function, it will be called for you.\n   *\n   * On browsers the refresh process works only when the tab/window is in the\n   * foreground to conserve resources as well as prevent race conditions and\n   * flooding auth with requests. If you call this method any managed\n   * visibility change callback will be removed and you must manage visibility\n   * changes on your own.\n   *\n   * On non-browser platforms the refresh process works *continuously* in the\n   * background, which may not be desireable. You should hook into your\n   * platform's foreground indication mechanism and call these methods\n   * appropriately to conserve resources.\n   *\n   * {@see #stopAutoRefresh}\n   */\n  async startAutoRefresh() {\n    this._removeVisibilityChangedCallback()\n    await this._startAutoRefresh()\n  }\n\n  /**\n   * Stops an active auto refresh process running in the background (if any).\n   *\n   * If you call this method any managed visibility change callback will be\n   * removed and you must manage visibility changes on your own.\n   *\n   * See {@link #startAutoRefresh} for more details.\n   */\n  async stopAutoRefresh() {\n    this._removeVisibilityChangedCallback()\n    await this._stopAutoRefresh()\n  }\n\n  /**\n   * Runs the auto refresh token tick.\n   */\n  private async _autoRefreshTokenTick() {\n    const now = Date.now()\n\n    try {\n      const {\n        data: { session },\n      } = await this.getSession()\n\n      if (!session || !session.refresh_token || !session.expires_at) {\n        return\n      }\n\n      // session will expire in this many ticks (or has already expired if <= 0)\n      const expiresInTicks = Math.floor(\n        (session.expires_at * 1000 - now) / AUTO_REFRESH_TICK_DURATION\n      )\n\n      if (expiresInTicks < AUTO_REFRESH_TICK_THRESHOLD) {\n        await this._callRefreshToken(session.refresh_token)\n      }\n    } catch (e: any) {\n      console.error('Auto refresh tick failed with error. This is likely a transient error.', e)\n    }\n  }\n\n  /**\n   * Registers callbacks on the browser / platform, which in-turn run\n   * algorithms when the browser window/tab are in foreground. On non-browser\n   * platforms it assumes always foreground.\n   */\n  private async _handleVisibilityChange() {\n    if (!isBrowser() || !window?.addEventListener) {\n      if (this.autoRefreshToken) {\n        // in non-browser environments the refresh token ticker runs always\n        this.startAutoRefresh()\n      }\n\n      return false\n    }\n\n    try {\n      this.visibilityChangedCallback = async () => await this._onVisibilityChanged(false)\n\n      window?.addEventListener('visibilitychange', this.visibilityChangedCallback)\n\n      // now immediately call the visbility changed callback to setup with the\n      // current visbility state\n      await this._onVisibilityChanged(true) // initial call\n    } catch (error) {\n      console.error('_handleVisibilityChange', error)\n    }\n  }\n\n  /**\n   * Callback registered with `window.addEventListener('visibilitychange')`.\n   */\n  private async _onVisibilityChanged(isInitial: boolean) {\n    if (document.visibilityState === 'visible') {\n      if (!isInitial) {\n        // initial visibility change setup is handled in another flow under #initialize()\n        await this.initializePromise\n        await this._recoverAndRefresh()\n      }\n\n      if (this.autoRefreshToken) {\n        // in browser environments the refresh token ticker runs only on focused tabs\n        // which prevents race conditions\n        this._startAutoRefresh()\n      }\n    } else if (document.visibilityState === 'hidden') {\n      if (this.autoRefreshToken) {\n        this._stopAutoRefresh()\n      }\n    }\n  }\n\n  /**\n   * Generates the relevant login URL for a third-party provider.\n   * @param options.redirectTo A URL or mobile address to send the user to after they are confirmed.\n   * @param options.scopes A space-separated list of scopes granted to the OAuth application.\n   * @param options.queryParams An object of key-value pairs containing query parameters granted to the OAuth application.\n   */\n  private _getUrlForProvider(\n    provider: Provider,\n    options: {\n      redirectTo?: string\n      scopes?: string\n      queryParams?: { [key: string]: string }\n    }\n  ) {\n    const urlParams: string[] = [`provider=${encodeURIComponent(provider)}`]\n    if (options?.redirectTo) {\n      urlParams.push(`redirect_to=${encodeURIComponent(options.redirectTo)}`)\n    }\n    if (options?.scopes) {\n      urlParams.push(`scopes=${encodeURIComponent(options.scopes)}`)\n    }\n    if (options?.queryParams) {\n      const query = new URLSearchParams(options.queryParams)\n      urlParams.push(query.toString())\n    }\n    return `${this.url}/authorize?${urlParams.join('&')}`\n  }\n\n  private async _unenroll(params: MFAUnenrollParams): Promise<AuthMFAUnenrollResponse> {\n    try {\n      const { data: sessionData, error: sessionError } = await this.getSession()\n      if (sessionError) {\n        return { data: null, error: sessionError }\n      }\n\n      return await _request(this.fetch, 'DELETE', `${this.url}/factors/${params.factorId}`, {\n        headers: this.headers,\n        jwt: sessionData?.session?.access_token,\n      })\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#enroll}\n   */\n  private async _enroll(params: MFAEnrollParams): Promise<AuthMFAEnrollResponse> {\n    try {\n      const { data: sessionData, error: sessionError } = await this.getSession()\n      if (sessionError) {\n        return { data: null, error: sessionError }\n      }\n\n      const { data, error } = await _request(this.fetch, 'POST', `${this.url}/factors`, {\n        body: {\n          friendly_name: params.friendlyName,\n          factor_type: params.factorType,\n          issuer: params.issuer,\n        },\n        headers: this.headers,\n        jwt: sessionData?.session?.access_token,\n      })\n\n      if (error) {\n        return { data: null, error }\n      }\n\n      if (data?.totp?.qr_code) {\n        data.totp.qr_code = `data:image/svg+xml;utf-8,${data.totp.qr_code}`\n      }\n\n      return { data, error: null }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#verify}\n   */\n  private async _verify(params: MFAVerifyParams): Promise<AuthMFAVerifyResponse> {\n    try {\n      const { data: sessionData, error: sessionError } = await this.getSession()\n      if (sessionError) {\n        return { data: null, error: sessionError }\n      }\n\n      const { data, error } = await _request(\n        this.fetch,\n        'POST',\n        `${this.url}/factors/${params.factorId}/verify`,\n        {\n          body: { code: params.code, challenge_id: params.challengeId },\n          headers: this.headers,\n          jwt: sessionData?.session?.access_token,\n        }\n      )\n      if (error) {\n        return { data: null, error }\n      }\n\n      await this._saveSession({\n        expires_at: Math.round(Date.now() / 1000) + data.expires_in,\n        ...data,\n      })\n      this._notifyAllSubscribers('MFA_CHALLENGE_VERIFIED', data)\n\n      return { data, error }\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#challenge}\n   */\n  private async _challenge(params: MFAChallengeParams): Promise<AuthMFAChallengeResponse> {\n    try {\n      const { data: sessionData, error: sessionError } = await this.getSession()\n      if (sessionError) {\n        return { data: null, error: sessionError }\n      }\n\n      return await _request(\n        this.fetch,\n        'POST',\n        `${this.url}/factors/${params.factorId}/challenge`,\n        {\n          headers: this.headers,\n          jwt: sessionData?.session?.access_token,\n        }\n      )\n    } catch (error) {\n      if (isAuthError(error)) {\n        return { data: null, error }\n      }\n      throw error\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#challengeAndVerify}\n   */\n  private async _challengeAndVerify(\n    params: MFAChallengeAndVerifyParams\n  ): Promise<AuthMFAVerifyResponse> {\n    const { data: challengeData, error: challengeError } = await this._challenge({\n      factorId: params.factorId,\n    })\n    if (challengeError) {\n      return { data: null, error: challengeError }\n    }\n    return await this._verify({\n      factorId: params.factorId,\n      challengeId: challengeData.id,\n      code: params.code,\n    })\n  }\n\n  /**\n   * {@see GoTrueMFAApi#listFactors}\n   */\n  private async _listFactors(): Promise<AuthMFAListFactorsResponse> {\n    const {\n      data: { user },\n      error: userError,\n    } = await this.getUser()\n    if (userError) {\n      return { data: null, error: userError }\n    }\n\n    const factors = user?.factors || []\n    const totp = factors.filter(\n      (factor) => factor.factor_type === 'totp' && factor.status === 'verified'\n    )\n\n    return {\n      data: {\n        all: factors,\n        totp,\n      },\n      error: null,\n    }\n  }\n\n  /**\n   * {@see GoTrueMFAApi#getAuthenticatorAssuranceLevel}\n   */\n  private async _getAuthenticatorAssuranceLevel(): Promise<AuthMFAGetAuthenticatorAssuranceLevelResponse> {\n    const {\n      data: { session },\n      error: sessionError,\n    } = await this.getSession()\n    if (sessionError) {\n      return { data: null, error: sessionError }\n    }\n    if (!session) {\n      return {\n        data: { currentLevel: null, nextLevel: null, currentAuthenticationMethods: [] },\n        error: null,\n      }\n    }\n\n    const payload = this._decodeJWT(session.access_token)\n\n    let currentLevel: AuthenticatorAssuranceLevels | null = null\n\n    if (payload.aal) {\n      currentLevel = payload.aal\n    }\n\n    let nextLevel: AuthenticatorAssuranceLevels | null = currentLevel\n\n    const verifiedFactors =\n      session.user.factors?.filter((factor: Factor) => factor.status === 'verified') ?? []\n\n    if (verifiedFactors.length > 0) {\n      nextLevel = 'aal2'\n    }\n\n    const currentAuthenticationMethods = payload.amr || []\n\n    return { data: { currentLevel, nextLevel, currentAuthenticationMethods }, error: null }\n  }\n}\n","import { GoTrueClient } from '@supabase/gotrue-js'\nimport { SupabaseAuthClientOptions } from './types'\n\nexport class SupabaseAuthClient extends GoTrueClient {\n  constructor(options: SupabaseAuthClientOptions) {\n    super(options)\n  }\n}\n","import { FunctionsClient } from '@supabase/functions-js'\nimport { AuthChangeEvent } from '@supabase/gotrue-js'\nimport {\n  PostgrestClient,\n  PostgrestFilterBuilder,\n  PostgrestQueryBuilder,\n} from '@supabase/postgrest-js'\nimport {\n  RealtimeChannel,\n  RealtimeChannelOptions,\n  RealtimeClient,\n  RealtimeClientOptions,\n} from '@supabase/realtime-js'\nimport { StorageClient as SupabaseStorageClient } from '@supabase/storage-js'\nimport { DEFAULT_HEADERS } from './lib/constants'\nimport { fetchWithAuth } from './lib/fetch'\nimport { stripTrailingSlash, applySettingDefaults } from './lib/helpers'\nimport { SupabaseAuthClient } from './lib/SupabaseAuthClient'\nimport { Fetch, GenericSchema, SupabaseClientOptions, SupabaseAuthClientOptions } from './lib/types'\n\nconst DEFAULT_GLOBAL_OPTIONS = {\n  headers: DEFAULT_HEADERS,\n}\n\nconst DEFAULT_DB_OPTIONS = {\n  schema: 'public',\n}\n\nconst DEFAULT_AUTH_OPTIONS: SupabaseAuthClientOptions = {\n  autoRefreshToken: true,\n  persistSession: true,\n  detectSessionInUrl: true,\n}\n\nconst DEFAULT_REALTIME_OPTIONS: RealtimeClientOptions = {}\n\n/**\n * Supabase Client.\n *\n * An isomorphic Javascript client for interacting with Postgres.\n */\nexport default class SupabaseClient<\n  Database = any,\n  SchemaName extends string & keyof Database = 'public' extends keyof Database\n    ? 'public'\n    : string & keyof Database,\n  Schema extends GenericSchema = Database[SchemaName] extends GenericSchema\n    ? Database[SchemaName]\n    : any\n> {\n  /**\n   * Supabase Auth allows you to create and manage user sessions for access to data that is secured by access policies.\n   */\n  auth: SupabaseAuthClient\n\n  protected realtimeUrl: string\n  protected authUrl: string\n  protected storageUrl: string\n  protected functionsUrl: string\n  protected realtime: RealtimeClient\n  protected rest: PostgrestClient<Database, SchemaName>\n  protected storageKey: string\n  protected fetch?: Fetch\n  protected changedAccessToken: string | undefined\n\n  protected headers: {\n    [key: string]: string\n  }\n\n  /**\n   * Create a new client for use in the browser.\n   * @param supabaseUrl The unique Supabase URL which is supplied when you create a new project in your project dashboard.\n   * @param supabaseKey The unique Supabase Key which is supplied when you create a new project in your project dashboard.\n   * @param options.db.schema You can switch in between schemas. The schema needs to be on the list of exposed schemas inside Supabase.\n   * @param options.auth.autoRefreshToken Set to \"true\" if you want to automatically refresh the token before expiring.\n   * @param options.auth.persistSession Set to \"true\" if you want to automatically save the user session into local storage.\n   * @param options.auth.detectSessionInUrl Set to \"true\" if you want to automatically detects OAuth grants in the URL and signs in the user.\n   * @param options.realtime Options passed along to realtime-js constructor.\n   * @param options.global.fetch A custom fetch implementation.\n   * @param options.global.headers Any additional headers to send with each network request.\n   */\n  constructor(\n    protected supabaseUrl: string,\n    protected supabaseKey: string,\n    options?: SupabaseClientOptions<SchemaName>\n  ) {\n    if (!supabaseUrl) throw new Error('supabaseUrl is required.')\n    if (!supabaseKey) throw new Error('supabaseKey is required.')\n\n    const _supabaseUrl = stripTrailingSlash(supabaseUrl)\n\n    this.realtimeUrl = `${_supabaseUrl}/realtime/v1`.replace(/^http/i, 'ws')\n    this.authUrl = `${_supabaseUrl}/auth/v1`\n    this.storageUrl = `${_supabaseUrl}/storage/v1`\n\n    const isPlatform = _supabaseUrl.match(/(supabase\\.co)|(supabase\\.in)/)\n    if (isPlatform) {\n      const urlParts = _supabaseUrl.split('.')\n      this.functionsUrl = `${urlParts[0]}.functions.${urlParts[1]}.${urlParts[2]}`\n    } else {\n      this.functionsUrl = `${_supabaseUrl}/functions/v1`\n    }\n    // default storage key uses the supabase project ref as a namespace\n    const defaultStorageKey = `sb-${new URL(this.authUrl).hostname.split('.')[0]}-auth-token`\n    const DEFAULTS = {\n      db: DEFAULT_DB_OPTIONS,\n      realtime: DEFAULT_REALTIME_OPTIONS,\n      auth: { ...DEFAULT_AUTH_OPTIONS, storageKey: defaultStorageKey },\n      global: DEFAULT_GLOBAL_OPTIONS,\n    }\n\n    const settings = applySettingDefaults(options ?? {}, DEFAULTS)\n\n    this.storageKey = settings.auth?.storageKey ?? ''\n    this.headers = settings.global?.headers ?? {}\n\n    this.auth = this._initSupabaseAuthClient(\n      settings.auth ?? {},\n      this.headers,\n      settings.global?.fetch\n    )\n    this.fetch = fetchWithAuth(supabaseKey, this._getAccessToken.bind(this), settings.global?.fetch)\n\n    this.realtime = this._initRealtimeClient({ headers: this.headers, ...settings.realtime })\n    this.rest = new PostgrestClient(`${_supabaseUrl}/rest/v1`, {\n      headers: this.headers,\n      schema: settings.db?.schema,\n      fetch: this.fetch,\n    })\n\n    this._listenForAuthEvents()\n  }\n\n  /**\n   * Supabase Functions allows you to deploy and invoke edge functions.\n   */\n  get functions() {\n    return new FunctionsClient(this.functionsUrl, {\n      headers: this.headers,\n      customFetch: this.fetch,\n    })\n  }\n\n  /**\n   * Supabase Storage allows you to manage user-generated content, such as photos or videos.\n   */\n  get storage() {\n    return new SupabaseStorageClient(this.storageUrl, this.headers, this.fetch)\n  }\n\n  /**\n   * Perform a table operation.\n   *\n   * @param table The table name to operate on.\n   */\n  from<\n    TableName extends string & keyof Schema['Tables'],\n    Table extends Schema['Tables'][TableName]\n  >(relation: TableName): PostgrestQueryBuilder<Schema, Table>\n  from<ViewName extends string & keyof Schema['Views'], View extends Schema['Views'][ViewName]>(\n    relation: ViewName\n  ): PostgrestQueryBuilder<Schema, View>\n  from(relation: string): PostgrestQueryBuilder<Schema, any>\n  from(relation: string): PostgrestQueryBuilder<Schema, any> {\n    return this.rest.from(relation)\n  }\n\n  /**\n   * Perform a function call.\n   *\n   * @param fn  The function name to call.\n   * @param args  The parameters to pass to the function call.\n   * @param options.head   When set to true, no data will be returned.\n   * @param options.count  Count algorithm to use to count rows in a table.\n   *\n   */\n  rpc<\n    FunctionName extends string & keyof Schema['Functions'],\n    Function_ extends Schema['Functions'][FunctionName]\n  >(\n    fn: FunctionName,\n    args: Function_['Args'] = {},\n    options?: {\n      head?: boolean\n      count?: 'exact' | 'planned' | 'estimated'\n    }\n  ): PostgrestFilterBuilder<\n    Schema,\n    Function_['Returns'] extends any[]\n      ? Function_['Returns'][number] extends Record<string, unknown>\n        ? Function_['Returns'][number]\n        : never\n      : never,\n    Function_['Returns']\n  > {\n    return this.rest.rpc(fn, args, options)\n  }\n\n  /**\n   * Creates a Realtime channel with Broadcast, Presence, and Postgres Changes.\n   *\n   * @param {string} name - The name of the Realtime channel.\n   * @param {Object} opts - The options to pass to the Realtime channel.\n   *\n   */\n  channel(name: string, opts: RealtimeChannelOptions = { config: {} }): RealtimeChannel {\n    return this.realtime.channel(name, opts)\n  }\n\n  /**\n   * Returns all Realtime channels.\n   */\n  getChannels(): RealtimeChannel[] {\n    return this.realtime.getChannels()\n  }\n\n  /**\n   * Unsubscribes and removes Realtime channel from Realtime client.\n   *\n   * @param {RealtimeChannel} channel - The name of the Realtime channel.\n   *\n   */\n  removeChannel(channel: RealtimeChannel): Promise<'ok' | 'timed out' | 'error'> {\n    return this.realtime.removeChannel(channel)\n  }\n\n  /**\n   * Unsubscribes and removes all Realtime channels from Realtime client.\n   */\n  removeAllChannels(): Promise<('ok' | 'timed out' | 'error')[]> {\n    return this.realtime.removeAllChannels()\n  }\n\n  private async _getAccessToken() {\n    const { data } = await this.auth.getSession()\n\n    return data.session?.access_token ?? null\n  }\n\n  private _initSupabaseAuthClient(\n    {\n      autoRefreshToken,\n      persistSession,\n      detectSessionInUrl,\n      storage,\n      storageKey,\n    }: SupabaseAuthClientOptions,\n    headers?: Record<string, string>,\n    fetch?: Fetch\n  ) {\n    const authHeaders = {\n      Authorization: `Bearer ${this.supabaseKey}`,\n      apikey: `${this.supabaseKey}`,\n    }\n    return new SupabaseAuthClient({\n      url: this.authUrl,\n      headers: { ...authHeaders, ...headers },\n      storageKey: storageKey,\n      autoRefreshToken,\n      persistSession,\n      detectSessionInUrl,\n      storage,\n      fetch,\n    })\n  }\n\n  private _initRealtimeClient(options: RealtimeClientOptions) {\n    return new RealtimeClient(this.realtimeUrl, {\n      ...options,\n      params: { ...{ apikey: this.supabaseKey }, ...options?.params },\n    })\n  }\n\n  private _listenForAuthEvents() {\n    let data = this.auth.onAuthStateChange((event, session) => {\n      this._handleTokenChanged(event, session?.access_token, 'CLIENT')\n    })\n    return data\n  }\n\n  private _handleTokenChanged(\n    event: AuthChangeEvent,\n    token: string | undefined,\n    source: 'CLIENT' | 'STORAGE'\n  ) {\n    if (\n      (event === 'TOKEN_REFRESHED' || event === 'SIGNED_IN') &&\n      this.changedAccessToken !== token\n    ) {\n      // Token has changed\n      this.realtime.setAuth(token ?? null)\n\n      this.changedAccessToken = token\n    } else if (event === 'SIGNED_OUT' || event === 'USER_DELETED') {\n      // Token is removed\n      this.realtime.setAuth(this.supabaseKey)\n      if (source == 'STORAGE') this.auth.signOut()\n      this.changedAccessToken = undefined\n    }\n  }\n}\n","// helpers.ts\nimport { SupabaseClientOptions } from './types'\n\nexport function uuid() {\n  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n    var r = (Math.random() * 16) | 0,\n      v = c == 'x' ? r : (r & 0x3) | 0x8\n    return v.toString(16)\n  })\n}\n\nexport function stripTrailingSlash(url: string): string {\n  return url.replace(/\\/$/, '')\n}\n\nexport const isBrowser = () => typeof window !== 'undefined'\n\nexport function applySettingDefaults<\n  Database = any,\n  SchemaName extends string & keyof Database = 'public' extends keyof Database\n    ? 'public'\n    : string & keyof Database\n>(\n  options: SupabaseClientOptions<SchemaName>,\n  defaults: SupabaseClientOptions<any>\n): SupabaseClientOptions<SchemaName> {\n  const {\n    db: dbOptions,\n    auth: authOptions,\n    realtime: realtimeOptions,\n    global: globalOptions,\n  } = options\n  const {\n    db: DEFAULT_DB_OPTIONS,\n    auth: DEFAULT_AUTH_OPTIONS,\n    realtime: DEFAULT_REALTIME_OPTIONS,\n    global: DEFAULT_GLOBAL_OPTIONS,\n  } = defaults\n\n  return {\n    db: {\n      ...DEFAULT_DB_OPTIONS,\n      ...dbOptions,\n    },\n    auth: {\n      ...DEFAULT_AUTH_OPTIONS,\n      ...authOptions,\n    },\n    realtime: {\n      ...DEFAULT_REALTIME_OPTIONS,\n      ...realtimeOptions,\n    },\n    global: {\n      ...DEFAULT_GLOBAL_OPTIONS,\n      ...globalOptions,\n    },\n  }\n}\n","import SupabaseClient from './SupabaseClient'\nimport type { GenericSchema, SupabaseClientOptions } from './lib/types'\n\nexport * from '@supabase/gotrue-js'\nexport type { User as AuthUser, Session as AuthSession } from '@supabase/gotrue-js'\nexport type {\n  PostgrestResponse,\n  PostgrestSingleResponse,\n  PostgrestMaybeSingleResponse,\n  PostgrestError,\n} from '@supabase/postgrest-js'\nexport {\n  FunctionsHttpError,\n  FunctionsFetchError,\n  FunctionsRelayError,\n  FunctionsError,\n} from '@supabase/functions-js'\nexport * from '@supabase/realtime-js'\nexport { default as SupabaseClient } from './SupabaseClient'\nexport type { SupabaseClientOptions } from './lib/types'\n\n/**\n * Creates a new Supabase Client.\n */\nexport const createClient = <\n  Database = any,\n  SchemaName extends string & keyof Database = 'public' extends keyof Database\n    ? 'public'\n    : string & keyof Database,\n  Schema extends GenericSchema = Database[SchemaName] extends GenericSchema\n    ? Database[SchemaName]\n    : any\n>(\n  supabaseUrl: string,\n  supabaseKey: string,\n  options?: SupabaseClientOptions<SchemaName>\n): SupabaseClient<Database, SchemaName, Schema> => {\n  return new SupabaseClient(supabaseUrl, supabaseKey, options)\n}\n","import { createClient } from '@supabase/supabase-js'\r\n\r\nconst supabaseUrl = process.env.REACT_APP_SUPABASE_URL\r\nconst supabaseAnonKey = process.env.REACT_APP_SUPABASE_ANON_KEY\r\n\r\nexport const supabase = createClient(supabaseUrl, supabaseAnonKey)"],"names":["f","require","k","Symbol","for","l","m","Object","prototype","hasOwnProperty","n","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","p","key","ref","__self","__source","q","c","a","g","b","d","e","h","call","defaultProps","$$typeof","type","props","_owner","current","r","t","u","v","w","x","y","z","iterator","B","isMounted","enqueueForceUpdate","enqueueReplaceState","enqueueSetState","C","assign","D","E","this","context","refs","updater","F","G","isReactComponent","setState","Error","forceUpdate","H","constructor","isPureReactComponent","I","Array","isArray","J","K","L","M","arguments","length","children","O","P","Q","replace","escape","toString","R","N","push","A","next","done","value","String","keys","join","S","T","_status","_result","then","default","U","V","transition","W","ReactCurrentDispatcher","ReactCurrentBatchConfig","exports","Children","map","forEach","apply","count","toArray","only","Component","Fragment","Profiler","PureComponent","StrictMode","Suspense","cloneElement","createContext","_currentValue","_currentValue2","_threadCount","Provider","Consumer","_defaultValue","_globalName","_context","createElement","createFactory","bind","createRef","forwardRef","render","isValidElement","lazy","_payload","_init","memo","compare","startTransition","unstable_act","useCallback","useContext","useDebugValue","useDeferredValue","useEffect","useId","useImperativeHandle","useInsertionEffect","useLayoutEffect","useMemo","useReducer","useRef","useState","useSyncExternalStore","useTransition","version","module","global","self","__self__","fetch","DOMException","support","searchParams","iterable","blob","Blob","formData","arrayBuffer","viewClasses","isArrayBufferView","ArrayBuffer","isView","obj","indexOf","normalizeName","name","test","TypeError","toLowerCase","normalizeValue","iteratorFor","items","shift","undefined","Headers","headers","append","header","getOwnPropertyNames","consumed","body","bodyUsed","Promise","reject","fileReaderReady","reader","resolve","onload","result","onerror","error","readBlobAsArrayBuffer","FileReader","promise","readAsArrayBuffer","bufferClone","buf","slice","view","Uint8Array","byteLength","set","buffer","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","get","rejected","text","readAsText","readBlobAsText","chars","i","fromCharCode","readArrayBufferAsText","decode","json","JSON","parse","oldValue","has","callback","thisArg","values","entries","methods","Request","input","options","url","credentials","method","mode","signal","upcased","toUpperCase","normalizeMethod","referrer","form","trim","split","bytes","decodeURIComponent","parseHeaders","rawHeaders","line","parts","Response","bodyInit","status","ok","statusText","clone","response","redirectStatuses","redirect","RangeError","location","err","message","stack","create","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","getAllResponseHeaders","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","addEventListener","onreadystatechange","readyState","removeEventListener","send","polyfill","defineProperty","ponyfill","ctx","naiveFallback","window","globalThis","configurable","__global__","_globalThis","NativeWebSocket","WebSocket","MozWebSocket","websocket_version","W3CWebSocket","uri","protocols","prop","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","leafPrototypes","getProto","getPrototypeOf","__proto__","ns","def","definition","o","enumerable","toStringTag","_typeof","Op","hasOwn","desc","$Symbol","iteratorSymbol","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","Context","makeInvokeMethod","tryCatch","fn","arg","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","NativeIteratorPrototype","Gp","defineIteratorMethods","_invoke","AsyncIterator","PromiseImpl","invoke","record","__await","unwrapped","previousPromise","callInvokeWithMethodAndArg","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iteratorMethod","isNaN","displayName","isGeneratorFunction","genFun","ctor","mark","setPrototypeOf","awrap","async","iter","val","object","reverse","pop","skipTempReset","prev","charAt","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","_classCallCheck","instance","Constructor","_toPropertyKey","hint","prim","toPrimitive","res","Number","_defineProperties","target","descriptor","_createClass","protoProps","staticProps","resolveFetch","customFetch","_fetch","args","__awaiter","_assertThisInitialized","ReferenceError","_setPrototypeOf","_inherits","subClass","superClass","_getPrototypeOf","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","valueOf","_createSuper","Derived","hasNativeReflectConstruct","Super","NewTarget","property","receiver","base","getOwnPropertyDescriptor","_construct","Parent","Class","Function","_wrapNativeSuper","_cache","Map","Wrapper","FunctionsError","isStrict","FunctionsFetchError","FunctionsRelayError","FunctionsHttpError","FunctionsClient","token","Authorization","functionName","invokeOptions","functionArgs","_headers","stringify","catch","fetchError","isRelayError","data","_arrayLikeToArray","arr","len","arr2","_unsupportedIterableToArray","minLen","from","_i","_s","_e","_x","_r","_arr","_n","_d","_toConsumableArray","asyncGeneratorStep","gen","_next","_throw","SOCKET_STATES","CHANNEL_STATES","CHANNEL_EVENTS","TRANSPORTS","CONNECTION_STATE","PostgrestBuilder","builder","shouldThrowOnError","schema","allowEmpty","crossFetch","onfulfilled","onrejected","includes","countHeader","match","contentRange","parseInt","details","postgrestResponse","code","PostgrestTransformBuilder","columns","quoted","cleanedColumns","column","ascending","nullsFirst","foreignTable","existingOrder","to","keyOffset","keyLimit","analyze","verbose","settings","buffers","wal","format","filter","forMediatype","PostgrestFilterBuilder","pattern","cleanedValues","s","RegExp","range","query","config","typePart","configPart","operator","filters","PostgrestQueryBuilder","head","prefersHeaders","unshift","reduce","acc","concat","uniqueColumns","Set","onConflict","ignoreDuplicates","DEFAULT_HEADERS","PostgrestClient","relation","URL","DEFAULT_TIMEOUT","REALTIME_PRESENCE_LISTEN_EVENTS","Timer","timerCalc","timer","tries","clearTimeout","setTimeout","Serializer","HEADER_LENGTH","rawPayload","_binaryDecode","decoder","TextDecoder","_decodeBroadcast","topicSize","getUint8","eventSize","offset","topic","event","payload","Push","channel","timeout","timeoutTimer","receivedResp","recHooks","refEvent","rateLimited","_cancelRefEvent","_hasReceived","startTimeout","socket","join_ref","_joinRef","_makeRef","_replyEventName","_on","_cancelTimeout","_matchReceive","trigger","_trigger","_off","PostgresTypes","RealtimePresence","opts","pendingDiffs","joinRef","caller","onJoin","onLeave","onSync","events","diff","newState","syncState","syncDiff","inPendingSyncState","currentPresences","newPresences","leftPresences","currentState","cloneDeep","transformedState","transformState","joins","leaves","presences","newPresenceRefs","presence_ref","curPresenceRefs","joinedPresences","joinedPresenceRefs","curPresences","presenceRefsToRemove","func","metas","presence","REALTIME_POSTGRES_CHANGES_LISTEN_EVENT","REALTIME_LISTEN_TYPES","REALTIME_SUBSCRIBE_STATES","convertChangeData","skipTypes","rec_key","convertColumn","columnName","find","colType","convertCell","noop","dataType","bool","toBoolean","float4","float8","int2","int4","int8","numeric","oid","toNumber","jsonb","toJson","timestamp","toTimestampString","abstime","date","daterange","int4range","int8range","money","reltime","time","timestamptz","timetz","tsrange","tstzrange","parsedValue","parseFloat","console","log","lastIdx","closeBrace","valTrim","_","RealtimeChannel","params","bindings","closed","joinedOnce","pushBuffer","broadcast","ack","joinPush","rejoinTimer","_rejoinUntilConnected","reconnectAfterMs","receive","joined","pushEvent","_onClose","_remove","_onError","reason","_isLeaving","_isClosed","errored","scheduleTimeout","_isJoining","reply","accessTokenPayload","postgres_changes","accessToken","access_token","updateJoinPayload","_rejoin","serverPostgresFilters","setAuth","clientPostgresBindings","bindingsLen","newPostgresBindings","clientPostgresBinding","table","serverPostgresFilter","unsubscribe","id","_push","updatePayload","leaving","onClose","close","destroy","leavePush","leave","_canPush","_event","_ref","typeLower","toLocaleLowerCase","handledPayload","_onMessage","bindId","bindEvent","ids","postgresChanges","enrichedPayload","commit_timestamp","eventType","new","old","errors","_getPayloadRecords","joining","binding","isEqual","isConnected","_isJoined","_leaveOpenTopic","resend","records","Transformers","old_record","obj1","obj2","RealtimeClient","endPoint","channels","transport","w3cwebsocket","heartbeatIntervalMs","heartbeatTimer","pendingHeartbeatRef","logger","conn","sendBuffer","serializer","stateChangeCallbacks","eventsPerSecondLimitMs","inThrottle","websocket","eventsPerSecond","Math","floor","encode","reconnectTimer","disconnect","connect","_endPointURL","binaryType","onopen","_onConnOpen","_onConnError","onmessage","_onConnMessage","onclose","_onConnClose","clearInterval","all","kind","msg","connecting","Connecting","Open","closing","Closing","Closed","connectionState","chan","_throttle","newRef","dupChannel","_appendParams","vsn","rawMessage","_isMember","_flushSendBuffer","setInterval","_sendHeartbeat","_triggerChanError","prefix","StorageError","__isStorageError","isStorageError","StorageApiError","StorageUnknownError","originalError","_getErrorMessage","error_description","handleError","Res","_getRequestParams","parameters","_handleRequest","fetcher","noResolveJson","post","put","remove","DEFAULT_SEARCH_OPTIONS","limit","sortBy","order","DEFAULT_FILE_OPTIONS","cacheControl","contentType","upsert","StorageFileApi","bucketId","path","fileBody","fileOptions","cleanPath","_removeEmptyFolders","_path","_getFinalPath","uploadOrUpdate","fromPath","toPath","sourceKey","destinationKey","Key","expiresIn","transform","downloadQueryParam","download","signedUrl","encodeURI","signedURL","paths","datum","wantsTransformation","renderPath","transformationQuery","transformOptsToQueryString","queryString","_queryString","publicUrl","prefixes","width","height","resize","quality","StorageBucketApi","public","StorageClient","fetchWithAuth","supabaseKey","getAccessToken","HeadersConstructor","CrossFetchHeaders","_a","isBrowser","document","localStorageWriteTests","tested","supportsLocalStorage","localStorage","randomKey","random","setItem","removeItem","getParameterByName","href","results","exec","getItemAsync","storage","getItem","removeItemAsync","Deferred","promiseConstructor","rej","decodeJWTPayload","base64Url","chr1","chr2","chr3","enc2","enc3","enc4","base64","decodeBase64URL","sleep","accept","retryable","isRetryable","attempt","Infinity","AuthError","__isAuthError","isAuthError","AuthApiError","isAuthApiError","AuthUnknownError","CustomAuthError","AuthSessionMissingError","AuthInvalidCredentialsError","AuthImplicitGrantRedirectError","AuthRetryableFetchError","NETWORK_ERROR_CODES","maybeResponse","_request","jwt","qs","redirectTo","xform","_sessionResponse","session","refresh_token","expires_in","hasSession","expires_at","round","Date","now","user","_userResponse","_ssoResponse","_generateLinkResponse","action_link","email_otp","hashed_token","redirect_to","verification_type","rest","properties","_noResolveJsonResponse","GoTrueAdminApi","mfa","listFactors","_listFactors","deleteFactor","_deleteFactor","email","new_email","newEmail","attributes","pagination","nextPage","lastPage","total","page","per_page","perPage","users","links","link","substring","rel","uid","shouldSoftDelete","should_soft_delete","userId","factors","__magic__","polyfillGlobalThis","DEFAULT_OPTIONS","storageKey","autoRefreshToken","persistSession","detectSessionInUrl","AUTO_REFRESH_TICK_DURATION","GoTrueClient","stateChangeEmitters","autoRefreshTicker","visibilityChangedCallback","refreshingDeferred","initializePromise","broadcastChannel","inMemorySession","localStorageAdapter","admin","verify","_verify","enroll","_enroll","unenroll","_unenroll","challenge","_challenge","challengeAndVerify","_challengeAndVerify","getAuthenticatorAssuranceLevel","_getAuthenticatorAssuranceLevel","BroadcastChannel","_notifyAllSubscribers","initialize","_initialize","_isImplicitGrantFlow","_getSessionFromUrl","_removeSession","redirectType","_saveSession","_recoverAndRefresh","_handleVisibilityChange","password","emailRedirectTo","gotrue_meta_security","captcha_token","captchaToken","phone","_handleProviderSignIn","provider","scopes","queryParams","skipBrowserRedirect","nonce","id_token","create_user","shouldCreateUser","provider_id","providerId","domain","skip_http_redirect","currentSession","maybeSession","_isValidSession","_callRefreshToken","getSession","sessionData","sessionError","userError","timeNow","expiresAt","hasExpired","exp","refreshedSession","getUser","token_type","error_code","provider_token","provider_refresh_token","hash","signOut","subscription","delete","refreshToken","startedAt","_getUrlForProvider","_refreshAccessToken","postMessage","_persistSession","_stopAutoRefresh","ticker","_autoRefreshTokenTick","unref","_removeVisibilityChangedCallback","_startAutoRefresh","startAutoRefresh","_onVisibilityChanged","isInitial","visibilityState","urlParams","encodeURIComponent","factorId","friendly_name","friendlyName","factor_type","factorType","issuer","totp","qr_code","challenge_id","challengeId","challengeData","challengeError","factor","currentLevel","nextLevel","currentAuthenticationMethods","_decodeJWT","aal","amr","SupabaseAuthClient","DEFAULT_GLOBAL_OPTIONS","DEFAULT_DB_OPTIONS","DEFAULT_AUTH_OPTIONS","DEFAULT_REALTIME_OPTIONS","SupabaseClient","supabaseUrl","_supabaseUrl","realtimeUrl","authUrl","storageUrl","urlParts","functionsUrl","defaultStorageKey","hostname","defaults","dbOptions","db","authOptions","auth","realtimeOptions","realtime","globalOptions","applySettingDefaults","_initSupabaseAuthClient","_getAccessToken","_initRealtimeClient","_listenForAuthEvents","SupabaseStorageClient","rpc","getChannels","removeChannel","removeAllChannels","authHeaders","apikey","onAuthStateChange","_handleTokenChanged","source","changedAccessToken","createClient","process","REACT_APP_SUPABASE_URL","REACT_APP_SUPABASE_ANON_KEY"],"sourceRoot":""}